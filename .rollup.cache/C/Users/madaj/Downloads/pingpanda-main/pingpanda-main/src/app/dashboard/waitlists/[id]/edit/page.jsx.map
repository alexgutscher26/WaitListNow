{"version":3,"file":"page.jsx","sourceRoot":"","sources":["page.tsx"],"names":[],"mappings":"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","sourcesContent":["'use client';\r\n\r\nimport { useState, useEffect, useCallback } from 'react';\r\nimport { useRouter, useParams } from 'next/navigation';\r\nimport { toast } from 'sonner';\r\nimport { Button } from '@/components/ui/button';\r\nimport { DashboardPage } from '@/components/dashboard-page';\r\nimport { ArrowLeft, Eye, Loader2 } from 'lucide-react';\r\nimport Link from 'next/link';\r\nimport { Tabs, TabsContent, TabsList, TabsTrigger } from '@/components/ui/tabs';\r\nimport { BasicInfoSection } from '@/components/waitlist/edit/basic-info-section';\r\nimport { CustomFieldsSection } from '@/components/waitlist/edit/custom-fields-section';\r\nimport { AppearanceSection } from '@/components/waitlist/edit/appearance-section';\r\nimport { BehaviorSection } from '@/components/waitlist/edit/behavior-section';\r\nimport { WaitlistPreview } from '@/components/waitlist/edit/waitlist-preview';\r\nimport { Waitlist } from '@/types/waitlist';\r\n\r\n// Reuse the same types from the new waitlist page\r\ntype FieldType = 'text' | 'email' | 'number' | 'url' | 'tel' | 'textarea' | 'select';\r\ntype ButtonVariant = 'default' | 'outline' | 'secondary' | 'ghost' | 'link';\r\ntype ButtonRounded = 'none' | 'sm' | 'md' | 'lg' | 'full';\r\ntype FormLayout = 'stacked' | 'inline';\r\ntype ConfirmationType = 'message' | 'redirect';\r\n\r\ninterface CustomField {\r\n  id: string;\r\n  name: string;\r\n  type: FieldType;\r\n  required: boolean;\r\n  placeholder?: string;\r\n  options?: string[];\r\n}\r\n\r\nexport interface WaitlistStyle {\r\n  primaryColor: string;\r\n  buttonText: string;\r\n  buttonColor: string;\r\n  buttonTextColor: string;\r\n  buttonVariant: ButtonVariant;\r\n  buttonRounded: ButtonRounded;\r\n  formLayout: FormLayout;\r\n  showLabels: boolean;\r\n  backgroundColor: string;\r\n  textColor: string;\r\n  fontFamily: string;\r\n  boxShadow: string;\r\n  padding: string;\r\n  borderRadius: string;\r\n}\r\n\r\ninterface FormData {\r\n  name: string;\r\n  description: string;\r\n  websiteUrl: string;\r\n  redirectUrl: string;\r\n  logoUrl: string;\r\n  maxSignups: number | null;\r\n  customFields: CustomField[];\r\n  style: WaitlistStyle;\r\n  settings: {\r\n    confirmationType: ConfirmationType;\r\n    confirmationMessage: string;\r\n    redirectUrl: string;\r\n    requireEmailVerification: boolean;\r\n    enableReferrals: boolean;\r\n    maxReferrals: number;\r\n  };\r\n}\r\n\r\nexport default function EditWaitlistPage() {\r\n  const router = useRouter();\r\n  const params = useParams();\r\n  const waitlistId = params.id as string;\r\n\r\n  const [activeTab, setActiveTab] = useState<'basic' | 'fields' | 'appearance' | 'behavior'>(\r\n    'basic',\r\n  );\r\n  const [isLoading, setIsLoading] = useState(true);\r\n  const [isSaving, setIsSaving] = useState(false);\r\n  const [showPreview, setShowPreview] = useState(false);\r\n  const [formData, setFormData] = useState<FormData>({\r\n    name: '',\r\n    description: '',\r\n    websiteUrl: '',\r\n    redirectUrl: '',\r\n    logoUrl: '',\r\n    maxSignups: null,\r\n    customFields: [],\r\n    style: {\r\n      primaryColor: '#3b82f6',\r\n      buttonText: 'Join Waitlist',\r\n      buttonColor: '#3b82f6',\r\n      buttonTextColor: '#ffffff',\r\n      buttonVariant: 'default',\r\n      buttonRounded: 'md',\r\n      formLayout: 'stacked',\r\n      showLabels: true,\r\n      backgroundColor: '#ffffff',\r\n      textColor: '#1f2937',\r\n      fontFamily: 'sans',\r\n      boxShadow: 'md',\r\n      padding: '6',\r\n      borderRadius: 'md',\r\n    },\r\n    settings: {\r\n      confirmationType: 'message',\r\n      confirmationMessage: 'Thanks for joining the waitlist!',\r\n      redirectUrl: '',\r\n      requireEmailVerification: false,\r\n      enableReferrals: false,\r\n      maxReferrals: 0,\r\n    },\r\n  });\r\n\r\n  // Fetch waitlist data\r\n  useEffect(() => {\r\n    const fetchWaitlist = async () => {\r\n      try {\r\n        const response = await fetch(`/api/waitlists/${waitlistId}`);\r\n        if (!response.ok) {\r\n          throw new Error('Failed to fetch waitlist');\r\n        }\r\n        const data = await response.json();\r\n\r\n        // Transform the API data to match our form data structure\r\n        setFormData({\r\n          name: data.name,\r\n          description: data.description || '',\r\n          websiteUrl: data.websiteUrl || '',\r\n          redirectUrl: data.redirectUrl || '',\r\n          logoUrl: data.logoUrl || '',\r\n          maxSignups: data.maxSignups,\r\n          customFields: data.customFields || [],\r\n          style: {\r\n            primaryColor: data.style?.primaryColor || '#3b82f6',\r\n            buttonText: data.style?.buttonText || 'Join Waitlist',\r\n            buttonColor: data.style?.buttonColor || '#3b82f6',\r\n            buttonTextColor: data.style?.buttonTextColor || '#ffffff',\r\n            buttonVariant: data.style?.buttonVariant || 'default',\r\n            buttonRounded: data.style?.buttonRounded || 'md',\r\n            formLayout: data.style?.formLayout || 'stacked',\r\n            showLabels: data.style?.showLabels ?? true,\r\n            backgroundColor: data.style?.backgroundColor || '#ffffff',\r\n            textColor: data.style?.textColor || '#1f2937',\r\n            fontFamily: data.style?.fontFamily || 'sans',\r\n            boxShadow: data.style?.boxShadow || 'md',\r\n            padding: data.style?.padding || '6',\r\n            borderRadius: data.style?.borderRadius || 'md',\r\n          },\r\n          settings: {\r\n            confirmationType: data.settings?.confirmationType || 'message',\r\n            confirmationMessage:\r\n              data.settings?.confirmationMessage || 'Thanks for joining the waitlist!',\r\n            redirectUrl: data.settings?.redirectUrl || '',\r\n            requireEmailVerification: data.settings?.requireEmailVerification || false,\r\n            enableReferrals: data.settings?.enableReferrals || false,\r\n            maxReferrals: data.settings?.maxReferrals || 0,\r\n          },\r\n        });\r\n      } catch (error) {\r\n        console.error('Error fetching waitlist:', error);\r\n        toast.error('Failed to load waitlist data');\r\n      } finally {\r\n        setIsLoading(false);\r\n      }\r\n    };\r\n\r\n    if (waitlistId) {\r\n      fetchWaitlist();\r\n    }\r\n  }, [waitlistId]);\r\n\r\n  const handleChange = useCallback(\r\n    (e: React.ChangeEvent<HTMLInputElement | HTMLTextAreaElement | HTMLSelectElement>) => {\r\n      const { name, value, type } = e.target as HTMLInputElement;\r\n\r\n      setFormData((prev) => ({\r\n        ...prev,\r\n        [name]: type === 'checkbox' ? (e.target as HTMLInputElement).checked : value,\r\n      }));\r\n    },\r\n    [],\r\n  );\r\n\r\n  const handleStyleChange = useCallback((name: string, value: any) => {\r\n    setFormData((prev) => ({\r\n      ...prev,\r\n      style: {\r\n        ...prev.style,\r\n        [name]: value,\r\n      },\r\n    }));\r\n  }, []);\r\n\r\n  const handleSettingsChange = useCallback((name: string, value: any) => {\r\n    setFormData((prev) => ({\r\n      ...prev,\r\n      settings: {\r\n        ...prev.settings,\r\n        [name]: value,\r\n      },\r\n    }));\r\n  }, []);\r\n\r\n  const addCustomField = useCallback((field: Omit<CustomField, 'id'>) => {\r\n    setFormData((prev) => ({\r\n      ...prev,\r\n      customFields: [\r\n        ...prev.customFields,\r\n        {\r\n          ...field,\r\n          id: `field-${Date.now()}`,\r\n        },\r\n      ],\r\n    }));\r\n  }, []);\r\n\r\n  const updateCustomField = useCallback((id: string, updates: Partial<CustomField>) => {\r\n    setFormData((prev) => ({\r\n      ...prev,\r\n      customFields: prev.customFields.map((field) =>\r\n        field.id === id ? { ...field, ...updates } : field,\r\n      ),\r\n    }));\r\n  }, []);\r\n\r\n  const removeCustomField = useCallback((id: string) => {\r\n    setFormData((prev) => ({\r\n      ...prev,\r\n      customFields: prev.customFields.filter((field) => field.id !== id),\r\n    }));\r\n  }, []);\r\n\r\n  const reorderCustomFields = useCallback((dragIndex: number, dropIndex: number) => {\r\n    setFormData((prev) => {\r\n      const newFields = [...prev.customFields];\r\n      const [removed] = newFields.splice(dragIndex, 1);\r\n      newFields.splice(dropIndex, 0, removed);\r\n      return {\r\n        ...prev,\r\n        customFields: newFields,\r\n      };\r\n    });\r\n  }, []);\r\n\r\n  const handleSubmit = async (e: React.FormEvent) => {\r\n    e.preventDefault();\r\n    setIsSaving(true);\r\n\r\n    try {\r\n      const response = await fetch(`/api/waitlists/${waitlistId}`, {\r\n        method: 'PATCH',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify(formData),\r\n      });\r\n\r\n      if (!response.ok) {\r\n        throw new Error('Failed to update waitlist');\r\n      }\r\n\r\n      toast.success('Waitlist updated successfully!');\r\n      router.push(`/dashboard/waitlists/${waitlistId}`);\r\n    } catch (error) {\r\n      console.error('Error updating waitlist:', error);\r\n      toast.error(error instanceof Error ? error.message : 'Failed to update waitlist');\r\n    } finally {\r\n      setIsSaving(false);\r\n    }\r\n  };\r\n\r\n  const getBorderRadius = (size: ButtonRounded) => {\r\n    switch (size) {\r\n      case 'none':\r\n        return '0';\r\n      case 'sm':\r\n        return '0.25rem';\r\n      case 'md':\r\n        return '0.375rem';\r\n      case 'lg':\r\n        return '0.5rem';\r\n      case 'full':\r\n        return '9999px';\r\n      default:\r\n        return '0.375rem';\r\n    }\r\n  };\r\n\r\n  if (isLoading) {\r\n    return (\r\n      <div className=\"flex items-center justify-center h-64\">\r\n        <Loader2 className=\"h-8 w-8 animate-spin text-gray-500\" />\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <DashboardPage\r\n      title=\"Edit Waitlist\"\r\n      description=\"Update your waitlist settings and appearance\"\r\n      actions={\r\n        <div className=\"flex items-center gap-2\">\r\n          <Button\r\n            variant=\"outline\"\r\n            size=\"sm\"\r\n            onClick={() => setShowPreview(true)}\r\n            type=\"button\"\r\n          >\r\n            Preview\r\n          </Button>\r\n          <Button\r\n            size=\"sm\"\r\n            type=\"submit\"\r\n            form=\"waitlist-form\"\r\n            disabled={isSaving}\r\n          >\r\n            {isSaving ? (\r\n              <>\r\n                <Loader2 className=\"mr-2 h-4 w-4 animate-spin\" />\r\n                Saving...\r\n              </>\r\n            ) : (\r\n              'Save Changes'\r\n            )}\r\n          </Button>\r\n        </div>\r\n      }\r\n    >\r\n      <form\r\n        id=\"waitlist-form\"\r\n        onSubmit={handleSubmit}\r\n        className=\"space-y-8\"\r\n      >\r\n        <Tabs\r\n          value={activeTab}\r\n          onValueChange={(v) => setActiveTab(v as any)}\r\n        >\r\n          <TabsList className=\"w-full justify-start overflow-x-auto\">\r\n            <TabsTrigger value=\"basic\">Basic Info</TabsTrigger>\r\n            <TabsTrigger value=\"fields\">Custom Fields</TabsTrigger>\r\n            <TabsTrigger\r\n              id=\"appearance-tab\"\r\n              value=\"appearance\"\r\n            >\r\n              Appearance\r\n            </TabsTrigger>\r\n            <TabsTrigger value=\"behavior\">Behavior</TabsTrigger>\r\n          </TabsList>\r\n\r\n          <div className=\"mt-6\">\r\n            <TabsContent value=\"basic\">\r\n              <BasicInfoSection\r\n                formData={formData}\r\n                onChange={handleChange}\r\n              />\r\n            </TabsContent>\r\n\r\n            <TabsContent value=\"fields\">\r\n              <CustomFieldsSection\r\n                formData={formData}\r\n                onAddField={addCustomField}\r\n                onUpdateField={updateCustomField}\r\n                onRemoveField={removeCustomField}\r\n                onReorderFields={reorderCustomFields}\r\n              />\r\n            </TabsContent>\r\n\r\n            <TabsContent value=\"appearance\">\r\n              <AppearanceSection\r\n                formData={formData}\r\n                onStyleChange={handleStyleChange}\r\n                getBorderRadius={getBorderRadius}\r\n              />\r\n            </TabsContent>\r\n\r\n            <TabsContent value=\"behavior\">\r\n              <BehaviorSection\r\n                formData={formData}\r\n                onSettingsChange={handleSettingsChange}\r\n              />\r\n            </TabsContent>\r\n          </div>\r\n        </Tabs>\r\n      </form>\r\n\r\n      {/* Preview Modal */}\r\n      {showPreview && (\r\n        <div className=\"fixed inset-0 bg-black/80 flex items-center justify-center z-50 p-4 backdrop-blur-sm\">\r\n          <div className=\"bg-white dark:bg-gray-900 rounded-2xl w-full max-w-4xl max-h-[90vh] overflow-hidden shadow-2xl border border-gray-200 dark:border-gray-800\">\r\n            <div className=\"p-6 border-b border-gray-200 dark:border-gray-800 flex justify-between items-center\">\r\n              <h2 className=\"text-2xl font-bold text-gray-900 dark:text-white\">Waitlist Preview</h2>\r\n              <div className=\"flex items-center gap-2\">\r\n                <Button\r\n                  variant=\"outline\"\r\n                  size=\"sm\"\r\n                  onClick={() => setShowPreview(false)}\r\n                  className=\"text-gray-500 hover:text-gray-700 dark:text-gray-400 dark:hover:text-gray-200\"\r\n                >\r\n                  Close\r\n                </Button>\r\n                <Button\r\n                  variant=\"default\"\r\n                  size=\"sm\"\r\n                  onClick={() => {\r\n                    // Scroll to the appearance tab when clicking \"Customize\"\r\n                    setActiveTab('appearance');\r\n                    setShowPreview(false);\r\n                    // Small delay to ensure tab is active before scrolling\r\n                    setTimeout(() => {\r\n                      document\r\n                        .getElementById('appearance-tab')\r\n                        ?.scrollIntoView({ behavior: 'smooth' });\r\n                    }, 100);\r\n                  }}\r\n                >\r\n                  Customize\r\n                </Button>\r\n              </div>\r\n            </div>\r\n            <div\r\n              className=\"p-8 overflow-auto\"\r\n              style={{ maxHeight: 'calc(90vh - 80px)' }}\r\n            >\r\n              <div className=\"flex justify-center\">\r\n                <div className=\"w-full max-w-md\">\r\n                  <WaitlistPreview formData={formData} />\r\n                </div>\r\n              </div>\r\n              <div className=\"mt-8 text-center text-sm text-gray-500 dark:text-gray-400\">\r\n                <p>This is a preview of how your waitlist will appear to visitors.</p>\r\n                <p className=\"mt-1\">\r\n                  Changes are saved automatically when you click outside the preview.\r\n                </p>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </DashboardPage>\r\n  );\r\n}\r\n"]}