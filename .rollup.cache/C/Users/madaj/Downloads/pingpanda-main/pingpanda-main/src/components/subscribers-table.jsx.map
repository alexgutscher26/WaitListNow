{"version":3,"file":"subscribers-table.jsx","sourceRoot":"","sources":["subscribers-table.tsx"],"names":[],"mappings":"AAAA,YAAY,CAAC;;AAEb,OAAO,KAAK,EAAE,EAAE,QAAQ,EAAE,WAAW,EAAE,MAAM,OAAO,CAAC;AACrD,OAAO,EAAE,QAAQ,EAAE,cAAc,EAAE,MAAM,uBAAuB,CAAC;AACjE,OAAO,EAAE,MAAM,EAAE,MAAM,UAAU,CAAC;AAClC,OAAO,EACL,WAAW,EACX,cAAc,EACd,IAAI,EACJ,SAAS,EACT,IAAI,EACJ,QAAQ,EACR,KAAK,EACL,CAAC,GACF,MAAM,cAAc,CAAC;AACtB,OAAO,EAKL,UAAU,EACV,eAAe,EACf,mBAAmB,EACnB,qBAAqB,EACrB,iBAAiB,EACjB,aAAa,GACd,MAAM,uBAAuB,CAAC;AAE/B,OAAO,EAAE,MAAM,EAAE,MAAM,wBAAwB,CAAC;AAChD,OAAO,EAAE,QAAQ,EAAE,MAAM,0BAA0B,CAAC;AACpD,OAAO,EACL,YAAY,EACZ,wBAAwB,EACxB,mBAAmB,EACnB,gBAAgB,EAChB,iBAAiB,EACjB,kBAAkB,EAClB,qBAAqB,EACrB,eAAe,EACf,sBAAsB,EACtB,sBAAsB,EACtB,mBAAmB,GACpB,MAAM,+BAA+B,CAAC;AACvC,OAAO,EAAE,KAAK,EAAE,MAAM,uBAAuB,CAAC;AAC9C,OAAO,EACL,KAAK,EACL,SAAS,EACT,SAAS,EACT,SAAS,EACT,WAAW,EACX,QAAQ,GACT,MAAM,uBAAuB,CAAC;AAC/B,OAAO,EAAE,KAAK,EAAE,MAAM,uBAAuB,CAAC;AAC9C,OAAO,EAAE,QAAQ,EAAE,MAAM,2BAA2B,CAAC;AACrD,OAAO,EACL,WAAW,EACX,iBAAiB,EACjB,iBAAiB,EACjB,kBAAkB,EAClB,sBAAsB,EACtB,iBAAiB,EACjB,iBAAiB,EACjB,gBAAgB,GACjB,MAAM,8BAA8B,CAAC;AAmBtC,MAAM,UAAU,gBAAgB,CAAC,EAAqC;IAAtE,iBA8oBC;;QA9oBkC,UAAU,gBAAA;IAC3C,IAAM,WAAW,GAAG,cAAc,EAAE,CAAC;IAErC,2BAA2B;IACrB,IAAA,KAAwB,QAAQ,CAAe,EAAE,CAAC,EAAjD,OAAO,QAAA,EAAE,UAAU,QAA8B,CAAC;IACnD,IAAA,KAAoC,QAAQ,CAAqB,EAAE,CAAC,EAAnE,aAAa,QAAA,EAAE,gBAAgB,QAAoC,CAAC;IACrE,IAAA,KAA0C,QAAQ,CAAkB,EAAE,CAAC,EAAtE,gBAAgB,QAAA,EAAE,mBAAmB,QAAiC,CAAC;IACxE,IAAA,KAAkC,QAAQ,CAA0B,EAAE,CAAC,EAAtE,YAAY,QAAA,EAAE,eAAe,QAAyC,CAAC;IAE9E,8BAA8B;IACxB,IAAA,KAA0C,QAAQ,CAAC,KAAK,CAAC,EAAxD,gBAAgB,QAAA,EAAE,mBAAmB,QAAmB,CAAC;IAC1D,IAAA,KAA8C,QAAQ,CAAoB,IAAI,CAAC,EAA9E,kBAAkB,QAAA,EAAE,qBAAqB,QAAqC,CAAC;IAChF,IAAA,KAAkD,QAAQ,CAAC,KAAK,CAAC,EAAhE,oBAAoB,QAAA,EAAE,uBAAuB,QAAmB,CAAC;IAExE,mBAAmB;IACb,IAAA,KAA8B,QAAQ,CAAC;QAC3C,SAAS,EAAE,CAAC;QACZ,QAAQ,EAAE,EAAE;KACb,CAAC,EAHK,UAAU,QAAA,EAAE,aAAa,QAG9B,CAAC;IAEH,yBAAyB;IACnB,IAAA,KAAmC,QAAQ,CAAC;QAChD,QAAQ,EAAE,CAAC,aAAa,EAAE,UAAU,EAAE,UAAU,CAAC;QACjD,OAAO,EAAE;;;;4BACU,qBAAM,KAAK,CAC1B,yBAAkB,UAAU,+BAAqB,UAAU,CAAC,SAAS,GAAG,CAAC,oBAAU,UAAU,CAAC,QAAQ,CAAE,CACzG,EAAA;;wBAFK,QAAQ,GAAG,SAEhB;wBACD,IAAI,CAAC,QAAQ,CAAC,EAAE,EAAE,CAAC;4BACjB,MAAM,IAAI,KAAK,CAAC,6BAA6B,CAAC,CAAC;wBACjD,CAAC;wBACD,sBAAO,QAAQ,CAAC,IAAI,EAAE,EAAC;;;aACxB;KACF,CAAC,EAXY,WAAW,UAAA,EAAE,SAAS,eAWlC,CAAC;IAEK,IAAA,KAAK,GAAK,QAAQ,EAAE,MAAf,CAAgB;IAE7B,mCAAmC;IACnC,IAAM,wBAAwB,GAAG,WAAW,CAC1C,UAAO,KAAa;;;;;oBAClB,IAAI,CAAC,KAAK;wBAAE,sBAAO;;;;oBAEA,qBAAM,KAAK,CAAC,sCAAsC,EAAE;4BACnE,MAAM,EAAE,MAAM;4BACd,OAAO,EAAE;gCACP,cAAc,EAAE,kBAAkB;6BACnC;4BACD,IAAI,EAAE,IAAI,CAAC,SAAS,CAAC,EAAE,KAAK,OAAA,EAAE,CAAC;yBAChC,CAAC,EAAA;;oBANI,QAAQ,GAAG,SAMf;oBAEF,IAAI,CAAC,QAAQ,CAAC,EAAE,EAAE,CAAC;wBACjB,MAAM,IAAI,KAAK,CAAC,qCAAqC,CAAC,CAAC;oBACzD,CAAC;oBAED,KAAK,CAAC;wBACJ,KAAK,EAAE,YAAY;wBACnB,WAAW,EAAE,oCAAoC;qBAClD,CAAC,CAAC;;;;oBAEH,OAAO,CAAC,KAAK,CAAC,qCAAqC,EAAE,OAAK,CAAC,CAAC;oBAC5D,KAAK,CAAC;wBACJ,KAAK,EAAE,OAAO;wBACd,WAAW,EAAE,qCAAqC;wBAClD,OAAO,EAAE,aAAa;qBACvB,CAAC,CAAC;;;;;SAEN,EACD,CAAC,KAAK,CAAC,CACR,CAAC;IAEF,kCAAkC;IAClC,IAAM,kBAAkB,GAAG,WAAW,CACpC,UAAO,EAAU,EAAE,SAA6C;;;;;;oBAE3C,qBAAM,KAAK,CAAC,2BAAoB,EAAE,CAAE,EAAE;4BACrD,MAAM,EAAE,OAAO;4BACf,OAAO,EAAE;gCACP,cAAc,EAAE,kBAAkB;6BACnC;4BACD,IAAI,EAAE,IAAI,CAAC,SAAS,CAAC,EAAE,MAAM,EAAE,SAAS,EAAE,CAAC;yBAC5C,CAAC,EAAA;;oBANI,QAAQ,GAAG,SAMf;oBAEF,IAAI,CAAC,QAAQ,CAAC,EAAE,EAAE,CAAC;wBACjB,MAAM,IAAI,KAAK,CAAC,oCAAoC,CAAC,CAAC;oBACxD,CAAC;oBAED,qBAAM,WAAW,CAAC,iBAAiB,CAAC,EAAE,QAAQ,EAAE,CAAC,aAAa,EAAE,UAAU,CAAC,EAAE,CAAC,EAAA;;oBAA9E,SAA8E,CAAC;oBAE/E,KAAK,CAAC;wBACJ,KAAK,EAAE,gBAAgB;wBACvB,WAAW,EAAE,uCAAgC,SAAS,CAAC,WAAW,EAAE,CAAE;qBACvE,CAAC,CAAC;;;;oBAEH,OAAO,CAAC,KAAK,CAAC,mCAAmC,EAAE,OAAK,CAAC,CAAC;oBAC1D,KAAK,CAAC;wBACJ,KAAK,EAAE,OAAO;wBACd,WAAW,EAAE,oCAAoC;wBACjD,OAAO,EAAE,aAAa;qBACvB,CAAC,CAAC;;;;;SAEN,EACD,CAAC,WAAW,EAAE,UAAU,EAAE,KAAK,CAAC,CACjC,CAAC;IAEF,2BAA2B;IAC3B,IAAM,eAAe,GAAG,WAAW,CACjC,UAAC,IAAY,EAAE,OAAe;QAC5B,SAAS,CAAC,SAAS,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC;QACpC,KAAK,CAAC;YACJ,KAAK,EAAE,QAAQ;YACf,WAAW,EAAE,OAAO;SACrB,CAAC,CAAC;IACL,CAAC,EACD,CAAC,KAAK,CAAC,CACR,CAAC;IAEF,2BAA2B;IAC3B,IAAM,sBAAsB,GAAG,WAAW,CACxC,UAAO,EAAU;;;;;;oBAEI,qBAAM,KAAK,CAAC,2BAAoB,EAAE,CAAE,EAAE;4BACrD,MAAM,EAAE,QAAQ;yBACjB,CAAC,EAAA;;oBAFI,QAAQ,GAAG,SAEf;oBAEF,IAAI,CAAC,QAAQ,CAAC,EAAE,EAAE,CAAC;wBACjB,MAAM,IAAI,KAAK,CAAC,6BAA6B,CAAC,CAAC;oBACjD,CAAC;oBAED,2CAA2C;oBAC3C,qBAAM,WAAW,CAAC,iBAAiB,CAAC,EAAE,QAAQ,EAAE,CAAC,aAAa,EAAE,UAAU,CAAC,EAAE,CAAC,EAAA;;oBAD9E,2CAA2C;oBAC3C,SAA8E,CAAC;oBAE/E,KAAK,CAAC;wBACJ,KAAK,EAAE,SAAS;wBAChB,WAAW,EAAE,iCAAiC;qBAC/C,CAAC,CAAC;;;;oBAEH,OAAO,CAAC,KAAK,CAAC,4BAA4B,EAAE,OAAK,CAAC,CAAC;oBACnD,KAAK,CAAC;wBACJ,KAAK,EAAE,OAAO;wBACd,WAAW,EAAE,6BAA6B;wBAC1C,OAAO,EAAE,aAAa;qBACvB,CAAC,CAAC;;;oBAEH,qBAAqB,CAAC,IAAI,CAAC,CAAC;oBAC5B,mBAAmB,CAAC,KAAK,CAAC,CAAC;;;;;SAE9B,EACD,CAAC,WAAW,EAAE,UAAU,CAAC,CAC1B,CAAC;IAEF,4BAA4B;IAC5B,IAAM,uBAAuB,GAAG,WAAW,CACzC;;;;;mFAAO,YAAoB;;YAApB,6BAAA,EAAA,oBAAoB;;;;;wBAEjB,WAAW,GAAG,YAAY;4BAC9B,CAAC,CAAC,MAAM,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC,MAAM,CAAC,UAAC,GAAG,IAAK,OAAA,YAAY,CAAC,GAAG,CAAY,EAA5B,CAA4B,CAAC;4BACzE,CAAC,CAAC,EAAE,CAAC;wBAEU,qBAAM,KAAK,CAAC,yBAAyB,EAAE;gCACtD,MAAM,EAAE,MAAM;gCACd,OAAO,EAAE;oCACP,cAAc,EAAE,kBAAkB;iCACnC;gCACD,IAAI,EAAE,IAAI,CAAC,SAAS,CAAC;oCACnB,UAAU,YAAA;oCACV,aAAa,EAAE,YAAY,CAAC,CAAC,CAAC,WAAW,CAAC,CAAC,CAAC,SAAS;iCACtD,CAAC;6BACH,CAAC,EAAA;;wBATI,QAAQ,GAAG,SASf;wBAEF,IAAI,CAAC,QAAQ,CAAC,EAAE,EAAE,CAAC;4BACjB,MAAM,IAAI,KAAK,CAAC,8BAA8B,CAAC,CAAC;wBAClD,CAAC;wBAGY,qBAAM,QAAQ,CAAC,IAAI,EAAE,EAAA;;wBAA5B,IAAI,GAAG,SAAqB;wBAC5B,kBAAkB,GAAG,QAAQ,CAAC,OAAO,CAAC,GAAG,CAAC,qBAAqB,CAAC,CAAC;wBACjE,aAAa,GAAG,kBAAkB,aAAlB,kBAAkB,uBAAlB,kBAAkB,CAAE,KAAK,CAAC,sBAAsB,CAAC,CAAC;wBAClE,QAAQ,GAAG,aAAa;4BAC5B,CAAC,CAAC,aAAa,CAAC,CAAC,CAAC;4BAClB,CAAC,CAAC,sBAAe,IAAI,IAAI,EAAE,CAAC,WAAW,EAAE,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,SAAM,CAAC;wBAE1D,GAAG,GAAG,MAAM,CAAC,GAAG,CAAC,eAAe,CAAC,IAAI,CAAC,CAAC;wBACvC,CAAC,GAAG,QAAQ,CAAC,aAAa,CAAC,GAAG,CAAC,CAAC;wBACtC,CAAC,CAAC,IAAI,GAAG,GAAG,CAAC;wBACb,CAAC,CAAC,QAAQ,GAAG,QAAQ,CAAC;wBACtB,QAAQ,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC;wBAC7B,CAAC,CAAC,KAAK,EAAE,CAAC;wBACV,MAAM,CAAC,GAAG,CAAC,eAAe,CAAC,GAAG,CAAC,CAAC;wBAChC,CAAC,CAAC,MAAM,EAAE,CAAC;wBAEX,KAAK,CAAC;4BACJ,KAAK,EAAE,mBAAmB;4BAC1B,WAAW,EAAE,YAAY;gCACvB,CAAC,CAAC,mBAAY,WAAW,CAAC,MAAM,iBAAc;gCAC9C,CAAC,CAAC,0BAA0B;yBAC/B,CAAC,CAAC;;;;wBAEH,OAAO,CAAC,KAAK,CAAC,8BAA8B,EAAE,OAAK,CAAC,CAAC;wBACrD,KAAK,CAAC;4BACJ,KAAK,EAAE,eAAe;4BACtB,WAAW,EAAE,8BAA8B;4BAC3C,OAAO,EAAE,aAAa;yBACvB,CAAC,CAAC;;;;;;KAEN,EACD,CAAC,YAAY,EAAE,UAAU,EAAE,KAAK,CAAC,CAClC,CAAC;IAEF,qBAAqB;IACrB,IAAM,gBAAgB,GAAG,WAAW,CAAC;;;;;oBAC7B,WAAW,GAAG,MAAM,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC,MAAM,CAAC,UAAC,GAAG,IAAK,OAAA,YAAY,CAAC,GAAG,CAAC,EAAjB,CAAiB,CAAC,CAAC;oBAEjF,IAAI,WAAW,CAAC,MAAM,KAAK,CAAC,EAAE,CAAC;wBAC7B,KAAK,CAAC;4BACJ,KAAK,EAAE,cAAc;4BACrB,WAAW,EAAE,iDAAiD;4BAC9D,OAAO,EAAE,aAAa;yBACvB,CAAC,CAAC;wBACH,sBAAO;oBACT,CAAC;;;;oBAGkB,qBAAM,KAAK,CAAC,8BAA8B,EAAE;4BAC3D,MAAM,EAAE,MAAM;4BACd,OAAO,EAAE;gCACP,cAAc,EAAE,kBAAkB;6BACnC;4BACD,IAAI,EAAE,IAAI,CAAC,SAAS,CAAC;gCACnB,GAAG,EAAE,WAAW;6BACjB,CAAC;yBACH,CAAC,EAAA;;oBARI,QAAQ,GAAG,SAQf;oBAEF,IAAI,CAAC,QAAQ,CAAC,EAAE,EAAE,CAAC;wBACjB,MAAM,IAAI,KAAK,CAAC,8BAA8B,CAAC,CAAC;oBAClD,CAAC;oBAED,2CAA2C;oBAC3C,qBAAM,WAAW,CAAC,iBAAiB,CAAC,EAAE,QAAQ,EAAE,CAAC,aAAa,EAAE,UAAU,CAAC,EAAE,CAAC,EAAA;;oBAD9E,2CAA2C;oBAC3C,SAA8E,CAAC;oBAE/E,sBAAsB;oBACtB,eAAe,CAAC,EAAE,CAAC,CAAC;oBACpB,uBAAuB,CAAC,KAAK,CAAC,CAAC;oBAEhB,qBAAM,QAAQ,CAAC,IAAI,EAAE,EAAA;;oBAA9B,MAAM,GAAG,SAAqB;oBAEpC,KAAK,CAAC;wBACJ,KAAK,EAAE,SAAS;wBAChB,WAAW,EAAE,kBAAW,MAAM,CAAC,YAAY,iBAAc;qBAC1D,CAAC,CAAC;;;;oBAEH,OAAO,CAAC,KAAK,CAAC,6BAA6B,EAAE,OAAK,CAAC,CAAC;oBACpD,KAAK,CAAC;wBACJ,KAAK,EAAE,OAAO;wBACd,WAAW,EAAE,8BAA8B;wBAC3C,OAAO,EAAE,aAAa;qBACvB,CAAC,CAAC;;;;;SAEN,EAAE,CAAC,YAAY,EAAE,WAAW,EAAE,UAAU,CAAC,CAAC,CAAC;IAE5C,uBAAuB;IACvB,IAAM,OAAO,GAA4B;QACvC;YACE,EAAE,EAAE,QAAQ;YACZ,MAAM,EAAE,UAAC,EAAS;oBAAP,KAAK,WAAA;gBAAO,OAAA,CACrB,CAAC,QAAQ,CACP,OAAO,CAAC,CAAC,KAAK,CAAC,wBAAwB,EAAE,CAAC,CAC1C,eAAe,CAAC,CAAC,UAAC,KAAc,IAAK,OAAA,KAAK,CAAC,yBAAyB,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC,EAA/C,CAA+C,CAAC,CACrF,UAAU,CAAC,YAAY,EACvB,CACH;YANsB,CAMtB;YACD,IAAI,EAAE,UAAC,EAAO;oBAAL,GAAG,SAAA;gBAAO,OAAA,CACjB,CAAC,QAAQ,CACP,OAAO,CAAC,CAAC,GAAG,CAAC,aAAa,EAAE,CAAC,CAC7B,eAAe,CAAC,CAAC,UAAC,KAAc,IAAK,OAAA,GAAG,CAAC,cAAc,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC,EAAlC,CAAkC,CAAC,CACxE,UAAU,CAAC,YAAY,EACvB,CACH;YANkB,CAMlB;YACD,aAAa,EAAE,KAAK;YACpB,YAAY,EAAE,KAAK;SACpB;QACD;YACE,WAAW,EAAE,OAAO;YACpB,MAAM,EAAE,OAAO;YACf,IAAI,EAAE,UAAC,EAAO;oBAAL,GAAG,SAAA;gBAAO,OAAA,CAAC,GAAG,CAAC,SAAS,CAAC,aAAa,CAAC,CAAC,GAAG,CAAC,QAAQ,CAAC,OAAO,CAAC,CAAC,EAAE,GAAG,CAAC;YAA1D,CAA0D;SAC9E;QACD;YACE,WAAW,EAAE,MAAM;YACnB,MAAM,EAAE,MAAM;YACd,IAAI,EAAE,UAAC,EAAO;oBAAL,GAAG,SAAA;gBAAO,OAAA,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,QAAQ,CAAC,MAAM,CAAC,IAAI,GAAG,CAAC,EAAE,GAAG,CAAC;YAAxC,CAAwC;SAC5D;QACD;YACE,WAAW,EAAE,QAAQ;YACrB,MAAM,EAAE,QAAQ;YAChB,IAAI,EAAE,UAAC,EAAO;oBAAL,GAAG,SAAA;gBACV,IAAM,MAAM,GAAG,GAAG,CAAC,QAAQ,CAAC,QAAQ,CAAW,CAAC;gBAChD,OAAO,CACL,CAAC,KAAK,CACJ,OAAO,CAAC,CACN,MAAM,KAAK,UAAU,CAAC,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC,MAAM,KAAK,SAAS,CAAC,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC,aACzE,CAAC,CAED;YAAA,CAAC,MAAM,CACT;UAAA,EAAE,KAAK,CAAC,CACT,CAAC;YACJ,CAAC;SACF;QACD;YACE,WAAW,EAAE,cAAc;YAC3B,MAAM,EAAE,eAAe;YACvB,IAAI,EAAE,UAAC,EAAO;oBAAL,GAAG,SAAA;gBAAO,OAAA,CACjB,CAAC,GAAG,CAAC,SAAS,CAAC,mBAAmB,CAAC,CAAC,GAAG,CAAC,QAAQ,CAAC,cAAc,CAAC,IAAI,GAAG,CAAC,EAAE,GAAG,CAAC,CAC/E;YAFkB,CAElB;SACF;QACD;YACE,WAAW,EAAE,YAAY;YACzB,MAAM,EAAE,aAAa;YACrB,IAAI,EAAE,UAAC,EAAO;oBAAL,GAAG,SAAA;gBAAO,OAAA,CACjB,CAAC,GAAG,CAAC,SAAS,CAAC,mBAAmB,CAAC,CAAC,GAAG,CAAC,QAAQ,CAAC,YAAY,CAAC,IAAI,GAAG,CAAC,EAAE,GAAG,CAAC,CAC7E;YAFkB,CAElB;SACF;QACD;YACE,WAAW,EAAE,WAAW;YACxB,MAAM,EAAE,QAAQ;YAChB,IAAI,EAAE,UAAC,EAAO;oBAAL,GAAG,SAAA;gBAAO,OAAA,CAAC,GAAG,CAAC,CAAC,MAAM,CAAC,IAAI,IAAI,CAAC,GAAG,CAAC,QAAQ,CAAC,WAAW,CAAC,CAAC,EAAE,aAAa,CAAC,CAAC,EAAE,GAAG,CAAC;YAAvE,CAAuE;SAC3F;QACD;YACE,EAAE,EAAE,SAAS;YACb,YAAY,EAAE,KAAK;YACnB,IAAI,EAAE,UAAC,EAAO;oBAAL,GAAG,SAAA;gBACV,IAAM,UAAU,GAAG,GAAG,CAAC,QAAQ,CAAC;gBAChC,OAAO,CACL,CAAC,YAAY,CACX;YAAA,CAAC,mBAAmB,CAAC,OAAO,CAC1B;cAAA,CAAC,MAAM,CACL,OAAO,CAAC,OAAO,CACf,SAAS,CAAC,aAAa,CAEvB;gBAAA,CAAC,IAAI,CAAC,SAAS,CAAC,SAAS,CAAC,SAAS,EAAE,IAAI,CACzC;gBAAA,CAAC,cAAc,CAAC,SAAS,CAAC,SAAS,EACrC;cAAA,EAAE,MAAM,CACV;YAAA,EAAE,mBAAmB,CACrB;YAAA,CAAC,mBAAmB,CAClB,KAAK,CAAC,KAAK,CACX,SAAS,CAAC,MAAM,CAEhB;cAAA,CAAC,iBAAiB,CAAC,kBAAkB,EAAE,iBAAiB,CACxD;cAAA,CAAC,qBAAqB,CAAC,AAAD,EAEtB;;cAAA,CAAC,gBAAgB,CACf,OAAO,CAAC,CAAC,cAAM,OAAA,eAAe,CAAC,UAAU,CAAC,KAAK,EAAE,2BAA2B,CAAC,EAA9D,CAA8D,CAAC,CAE9E;gBAAA,CAAC,IAAI,CAAC,SAAS,CAAC,cAAc,EAC9B;gBAAA,CAAC,IAAI,CAAC,UAAU,EAAE,IAAI,CACxB;cAAA,EAAE,gBAAgB,CAElB;;cAAA,CAAC,gBAAgB,CACf,OAAO,CAAC,CAAC,cAAM,OAAA,wBAAwB,CAAC,UAAU,CAAC,KAAK,CAAC,EAA1C,CAA0C,CAAC,CAC1D,QAAQ,CAAC,CAAC,UAAU,CAAC,MAAM,KAAK,UAAU,CAAC,CAE3C;gBAAA,CAAC,IAAI,CAAC,SAAS,CAAC,cAAc,EAC9B;gBAAA,CAAC,IAAI,CAAC,mBAAmB,EAAE,IAAI,CACjC;cAAA,EAAE,gBAAgB,CAElB;;cAAA,CAAC,eAAe,CACd;gBAAA,CAAC,sBAAsB,CACrB;kBAAA,CAAC,SAAS,CAAC,SAAS,CAAC,cAAc,EACnC;kBAAA,CAAC,IAAI,CAAC,aAAa,EAAE,IAAI,CAC3B;gBAAA,EAAE,sBAAsB,CACxB;gBAAA,CAAC,kBAAkB,CACjB;kBAAA,CAAC,sBAAsB,CACrB;oBAAA,CAAC,gBAAgB,CACf,OAAO,CAAC,CAAC,cAAM,OAAA,kBAAkB,CAAC,UAAU,CAAC,EAAE,EAAE,SAAS,CAAC,EAA5C,CAA4C,CAAC,CAC5D,SAAS,CAAC,CAAC,UAAU,CAAC,MAAM,KAAK,SAAS,CAAC,CAAC,CAAC,WAAW,CAAC,CAAC,CAAC,EAAE,CAAC,CAE9D;sBAAA,CAAC,IAAI,CAAC,SAAS,CAAC,mBAAmB,CACjC;wBAAA,CAAC,UAAU,CAAC,MAAM,KAAK,SAAS,IAAI,CAAC,KAAK,CAAC,SAAS,CAAC,cAAc,EAAG,CACtE;wBAAA,CAAC,IAAI,CAAC,OAAO,EAAE,IAAI,CACrB;sBAAA,EAAE,IAAI,CACR;oBAAA,EAAE,gBAAgB,CAClB;oBAAA,CAAC,gBAAgB,CACf,OAAO,CAAC,CAAC,cAAM,OAAA,kBAAkB,CAAC,UAAU,CAAC,EAAE,EAAE,UAAU,CAAC,EAA7C,CAA6C,CAAC,CAC7D,SAAS,CAAC,CAAC,UAAU,CAAC,MAAM,KAAK,UAAU,CAAC,CAAC,CAAC,WAAW,CAAC,CAAC,CAAC,EAAE,CAAC,CAE/D;sBAAA,CAAC,IAAI,CAAC,SAAS,CAAC,mBAAmB,CACjC;wBAAA,CAAC,UAAU,CAAC,MAAM,KAAK,UAAU,IAAI,CAAC,KAAK,CAAC,SAAS,CAAC,cAAc,EAAG,CACvE;wBAAA,CAAC,IAAI,CAAC,QAAQ,EAAE,IAAI,CACtB;sBAAA,EAAE,IAAI,CACR;oBAAA,EAAE,gBAAgB,CAClB;oBAAA,CAAC,gBAAgB,CACf,OAAO,CAAC,CAAC,cAAM,OAAA,kBAAkB,CAAC,UAAU,CAAC,EAAE,EAAE,SAAS,CAAC,EAA5C,CAA4C,CAAC,CAC5D,SAAS,CAAC,CAAC,UAAU,CAAC,MAAM,KAAK,SAAS,CAAC,CAAC,CAAC,WAAW,CAAC,CAAC,CAAC,EAAE,CAAC,CAE9D;sBAAA,CAAC,IAAI,CAAC,SAAS,CAAC,mBAAmB,CACjC;wBAAA,CAAC,UAAU,CAAC,MAAM,KAAK,SAAS,IAAI,CAAC,KAAK,CAAC,SAAS,CAAC,cAAc,EAAG,CACtE;wBAAA,CAAC,IAAI,CAAC,OAAO,EAAE,IAAI,CACrB;sBAAA,EAAE,IAAI,CACR;oBAAA,EAAE,gBAAgB,CACpB;kBAAA,EAAE,sBAAsB,CAC1B;gBAAA,EAAE,kBAAkB,CACtB;cAAA,EAAE,eAAe,CAEjB;;cAAA,CAAC,qBAAqB,CAAC,AAAD,EACtB;cAAA,CAAC,gBAAgB,CACf,SAAS,CAAC,cAAc,CACxB,OAAO,CAAC,CAAC;wBACP,qBAAqB,CAAC,UAAU,CAAC,CAAC;wBAClC,mBAAmB,CAAC,IAAI,CAAC,CAAC;oBAC5B,CAAC,CAAC,CAEF;gBAAA,CAAC,CAAC,CAAC,SAAS,CAAC,cAAc,EAC3B;gBAAA,CAAC,IAAI,CAAC,iBAAiB,EAAE,IAAI,CAC/B;cAAA,EAAE,gBAAgB,CACpB;YAAA,EAAE,mBAAmB,CACvB;UAAA,EAAE,YAAY,CAAC,CAChB,CAAC;YACJ,CAAC;SACF;KACF,CAAC;IAEF,uBAAuB;IACvB,IAAM,KAAK,GAAG,aAAa,CAAC;QAC1B,IAAI,EAAE,CAAA,WAAW,aAAX,WAAW,uBAAX,WAAW,CAAE,IAAI,KAAI,EAAE;QAC7B,OAAO,SAAA;QACP,eAAe,EAAE,UAAU;QAC3B,qBAAqB,EAAE,gBAAgB;QACvC,eAAe,EAAE,eAAe,EAAE;QAClC,qBAAqB,EAAE,qBAAqB,EAAE;QAC9C,iBAAiB,EAAE,iBAAiB,EAAE;QACtC,mBAAmB,EAAE,mBAAmB,EAAE;QAC1C,wBAAwB,EAAE,mBAAmB;QAC7C,oBAAoB,EAAE,eAAe;QACrC,kBAAkB,EAAE,aAAa;QACjC,KAAK,EAAE;YACL,OAAO,SAAA;YACP,aAAa,eAAA;YACb,gBAAgB,kBAAA;YAChB,YAAY,cAAA;YACZ,UAAU,YAAA;SACX;QACD,SAAS,EAAE,IAAI,CAAC,IAAI,CAAC,CAAC,CAAA,WAAW,aAAX,WAAW,uBAAX,WAAW,CAAE,KAAK,KAAI,CAAC,CAAC,GAAG,UAAU,CAAC,QAAQ,CAAC;QACrE,gBAAgB,EAAE,IAAI;KACvB,CAAC,CAAC;IAEH,OAAO,CACL,CAAC,GAAG,CAAC,SAAS,CAAC,QAAQ,CACrB;MAAA,CAAC,GAAG,CAAC,SAAS,CAAC,oFAAoF,CACjG;QAAA,CAAC,GAAG,CAAC,SAAS,CAAC,QAAQ,CACrB;UAAA,CAAC,KAAK,CACJ,WAAW,CAAC,uBAAuB,CACnC,KAAK,CAAC,CAAC,MAAC,MAAA,KAAK,CAAC,SAAS,CAAC,OAAO,CAAC,0CAAE,cAAc,EAAa,mCAAI,EAAE,CAAC,CACpE,QAAQ,CAAC,CAAC,UAAC,KAAK,YAAK,OAAA,MAAA,KAAK,CAAC,SAAS,CAAC,OAAO,CAAC,0CAAE,cAAc,CAAC,KAAK,CAAC,MAAM,CAAC,KAAK,CAAC,CAAA,EAAA,CAAC,CAClF,SAAS,CAAC,UAAU,EAExB;QAAA,EAAE,GAAG,CACL;QAAA,CAAC,GAAG,CAAC,SAAS,CAAC,gBAAgB,CAC7B;UAAA,CAAC,+BAA+B,CAChC;UAAA,CAAC,GAAG,CAAC,SAAS,CAAC,YAAY,CACzB;YAAA,CAAC,YAAY,CACX;cAAA,CAAC,mBAAmB,CAAC,OAAO,CAC1B;gBAAA,CAAC,MAAM,CAAC,OAAO,CAAC,SAAS,CACvB;kBAAA,CAAC,QAAQ,CAAC,SAAS,CAAC,cAAc,EAClC;kBAAA,CAAC,IAAI,CAAC,MAAM,EAAE,IAAI,CAClB;kBAAA,CAAC,WAAW,CAAC,SAAS,CAAC,cAAc,EACvC;gBAAA,EAAE,MAAM,CACV;cAAA,EAAE,mBAAmB,CACrB;cAAA,CAAC,mBAAmB,CAAC,KAAK,CAAC,KAAK,CAC9B;gBAAA,CAAC,gBAAgB,CACf,OAAO,CAAC,CAAC,cAAM,OAAA,uBAAuB,CAAC,IAAI,CAAC,EAA7B,CAA6B,CAAC,CAC7C,QAAQ,CAAC,CAAC,MAAM,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC,MAAM,KAAK,CAAC,CAAC,CAEjD;kBAAA,CAAC,IAAI,CAAC,iBAAiB,CAAC,MAAM,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC,MAAM,CAAC,CAAC,EAAE,IAAI,CAClE;gBAAA,EAAE,gBAAgB,CAClB;gBAAA,CAAC,gBAAgB,CAAC,OAAO,CAAC,CAAC,cAAM,OAAA,uBAAuB,CAAC,KAAK,CAAC,EAA9B,CAA8B,CAAC,CAC9D;kBAAA,CAAC,IAAI,CAAC,UAAU,EAAE,IAAI,CACxB;gBAAA,EAAE,gBAAgB,CACpB;cAAA,EAAE,mBAAmB,CACvB;YAAA,EAAE,YAAY,CACd;YAAA,CAAC,MAAM,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC,MAAM,GAAG,CAAC,IAAI,CACvC,CAAC,MAAM,CACL,OAAO,CAAC,aAAa,CACrB,OAAO,CAAC,CAAC,cAAM,OAAA,uBAAuB,CAAC,IAAI,CAAC,EAA7B,CAA6B,CAAC,CAE7C;gBAAA,CAAC,CAAC,CAAC,SAAS,CAAC,cAAc,EAC3B;gBAAA,CAAC,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC,MAAM,CAAE,SAAQ,EAAE,IAAI,CAChE;cAAA,EAAE,MAAM,CAAC,CACV,CACH;UAAA,EAAE,GAAG,CACL;UAAA,CAAC,YAAY,CACX;YAAA,CAAC,mBAAmB,CAAC,OAAO,CAC1B;cAAA,CAAC,MAAM,CACL,OAAO,CAAC,SAAS,CACjB,SAAS,CAAC,SAAS,CAEnB;gBAAA,CAAC,cAAc,CAAC,SAAS,CAAC,cAAc,EACxC;gBAAA,CAAC,IAAI,CAAC,IAAI,EAAE,IAAI,CAChB;gBAAA,CAAC,WAAW,CAAC,SAAS,CAAC,cAAc,EACvC;cAAA,EAAE,MAAM,CACV;YAAA,EAAE,mBAAmB,CACrB;YAAA,CAAC,mBAAmB,CAAC,KAAK,CAAC,KAAK,CAC9B;cAAA,CAAC,iBAAiB,CAAC,aAAa,EAAE,iBAAiB,CACnD;cAAA,CAAC,qBAAqB,CAAC,AAAD,EACtB;cAAA,CAAC,eAAe,CACd;gBAAA,CAAC,sBAAsB,CAAC,OAAO,EAAE,sBAAsB,CACvD;gBAAA,CAAC,kBAAkB,CACjB;kBAAA,CAAC,sBAAsB,CACrB;oBAAA,CAAC,KAAK;aACH,aAAa,EAAE;aACf,MAAM,CAAC,UAAC,MAAM,IAAK,OAAA,MAAM,CAAC,UAAU,EAAE,EAAnB,CAAmB,CAAC;aACvC,GAAG,CAAC,UAAC,MAAM,IAAK,OAAA,CACf,CAAC,wBAAwB,CACvB,GAAG,CAAC,CAAC,MAAM,CAAC,EAAE,CAAC,CACf,SAAS,CAAC,YAAY,CACtB,OAAO,CAAC,CAAC,MAAM,CAAC,YAAY,EAAE,CAAC,CAC/B,eAAe,CAAC,CAAC,UAAC,KAAK,IAAK,OAAA,MAAM,CAAC,gBAAgB,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC,EAAvC,CAAuC,CAAC,CAEpE;0BAAA,CAAC,MAAM,CAAC,EAAE,CACZ;wBAAA,EAAE,wBAAwB,CAAC,CAC5B,EATgB,CAShB,CAAC,CACN;kBAAA,EAAE,sBAAsB,CAC1B;gBAAA,EAAE,kBAAkB,CACtB;cAAA,EAAE,eAAe,CACjB;cAAA,CAAC,gBAAgB,CACf,OAAO,CAAC,CAAC;YACP,+BAA+B;YAC/B,KAAK,CAAC;gBACJ,KAAK,EAAE,2BAA2B;gBAClC,WAAW,EAAE,sCAAsC;aACpD,CAAC,CAAC;QACL,CAAC,CAAC,CAEF;gBAAA,CAAC,QAAQ,CAAC,SAAS,CAAC,cAAc,EAClC;gBAAA,CAAC,IAAI,CAAC,UAAU,EAAE,IAAI,CACxB;cAAA,EAAE,gBAAgB,CACpB;YAAA,EAAE,mBAAmB,CACvB;UAAA,EAAE,YAAY,CAChB;QAAA,EAAE,GAAG,CACP;MAAA,EAAE,GAAG,CACL;MAAA,CAAC,GAAG,CAAC,SAAS,CAAC,mBAAmB,CAChC;QAAA,CAAC,KAAK,CACJ;UAAA,CAAC,WAAW,CACV;YAAA,CAAC,KAAK,CAAC,eAAe,EAAE,CAAC,GAAG,CAAC,UAAC,WAAW,IAAK,OAAA,CAC5C,CAAC,QAAQ,CAAC,GAAG,CAAC,CAAC,WAAW,CAAC,EAAE,CAAC,CAC5B;gBAAA,CAAC,WAAW,CAAC,OAAO,CAAC,GAAG,CAAC,UAAC,MAAM,IAAK,OAAA,CACnC,CAAC,SAAS,CAAC,GAAG,CAAC,CAAC,MAAM,CAAC,EAAE,CAAC,CACxB;oBAAA,CAAC,MAAM,CAAC,aAAa;oBACnB,CAAC,CAAC,IAAI;oBACN,CAAC,CAAC,UAAU,CAAC,MAAM,CAAC,MAAM,CAAC,SAAS,CAAC,MAAM,EAAE,MAAM,CAAC,UAAU,EAAE,CAAC,CACrE;kBAAA,EAAE,SAAS,CAAC,CACb,EANoC,CAMpC,CAAC,CACJ;cAAA,EAAE,QAAQ,CAAC,CACZ,EAV6C,CAU7C,CAAC,CACJ;UAAA,EAAE,WAAW,CACb;UAAA,CAAC,SAAS,CACR;YAAA,CAAC,CAAA,MAAA,KAAK,CAAC,WAAW,EAAE,CAAC,IAAI,0CAAE,MAAM,EAAC,CAAC,CAAC,CAClC,KAAK,CAAC,WAAW,EAAE,CAAC,IAAI,CAAC,GAAG,CAAC,UAAC,GAAG,IAAK,OAAA,CACpC,CAAC,QAAQ,CACP,GAAG,CAAC,CAAC,GAAG,CAAC,EAAE,CAAC,CACZ,UAAU,CAAC,CAAC,GAAG,CAAC,aAAa,EAAE,IAAI,UAAU,CAAC,CAE9C;kBAAA,CAAC,GAAG,CAAC,eAAe,EAAE,CAAC,GAAG,CAAC,UAAC,IAAI,IAAK,OAAA,CACnC,CAAC,SAAS,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,EAAE,CAAC,CACtB;sBAAA,CAAC,UAAU,CAAC,IAAI,CAAC,MAAM,CAAC,SAAS,CAAC,IAAI,EAAE,IAAI,CAAC,UAAU,EAAE,CAAC,CAC5D;oBAAA,EAAE,SAAS,CAAC,CACb,EAJoC,CAIpC,CAAC,CACJ;gBAAA,EAAE,QAAQ,CAAC,CACZ,EAXqC,CAWrC,CAAC,CACH,CAAC,CAAC,CAAC,CACF,CAAC,QAAQ,CACP;gBAAA,CAAC,SAAS,CACR,OAAO,CAAC,CAAC,OAAO,CAAC,MAAM,CAAC,CACxB,SAAS,CAAC,kBAAkB,CAE5B;kBAAA,CAAC,SAAS,CAAC,CAAC,CAAC,YAAY,CAAC,CAAC,CAAC,aAAa,CAC3C;gBAAA,EAAE,SAAS,CACb;cAAA,EAAE,QAAQ,CAAC,CACZ,CACH;UAAA,EAAE,SAAS,CACb;QAAA,EAAE,KAAK,CACT;MAAA,EAAE,GAAG,CACL;MAAA,CAAC,GAAG,CAAC,SAAS,CAAC,8CAA8C,CAC3D;QAAA,CAAC,GAAG,CAAC,SAAS,CAAC,sCAAsC,CACnD;UAAA,CAAC,KAAK,CAAC,2BAA2B,EAAE,CAAC,IAAI,CAAC,MAAM,CAAE,GAAE,CAAC,GAAG,CACxD;UAAA,CAAC,KAAK,CAAC,mBAAmB,EAAE,CAAC,IAAI,CAAC,MAAM,CAAE;QAC5C,EAAE,GAAG,CACL;QAAA,CAAC,GAAG,CAAC,SAAS,CAAC,WAAW,CACxB;UAAA,CAAC,MAAM,CACL,OAAO,CAAC,SAAS,CACjB,IAAI,CAAC,IAAI,CACT,OAAO,CAAC,CAAC,cAAM,OAAA,KAAK,CAAC,YAAY,EAAE,EAApB,CAAoB,CAAC,CACpC,QAAQ,CAAC,CAAC,CAAC,KAAK,CAAC,kBAAkB,EAAE,CAAC,CAEtC;;UACF,EAAE,MAAM,CACR;UAAA,CAAC,MAAM,CACL,OAAO,CAAC,SAAS,CACjB,IAAI,CAAC,IAAI,CACT,OAAO,CAAC,CAAC,cAAM,OAAA,KAAK,CAAC,QAAQ,EAAE,EAAhB,CAAgB,CAAC,CAChC,QAAQ,CAAC,CAAC,CAAC,KAAK,CAAC,cAAc,EAAE,CAAC,CAElC;;UACF,EAAE,MAAM,CACV;QAAA,EAAE,GAAG,CACP;MAAA,EAAE,GAAG,CAEL;;MAAA,CAAC,gCAAgC,CACjC;MAAA,CAAC,WAAW,CACV,IAAI,CAAC,CAAC,gBAAgB,CAAC,CACvB,YAAY,CAAC,CAAC,mBAAmB,CAAC,CAElC;QAAA,CAAC,kBAAkB,CACjB;UAAA,CAAC,iBAAiB,CAChB;YAAA,CAAC,gBAAgB,CAAC,aAAa,EAAE,gBAAgB,CACjD;YAAA,CAAC,sBAAsB,CACrB;;;YAEF,EAAE,sBAAsB,CAC1B;UAAA,EAAE,iBAAiB,CACnB;UAAA,CAAC,iBAAiB,CAChB;YAAA,CAAC,iBAAiB,CAAC,MAAM,EAAE,iBAAiB,CAC5C;YAAA,CAAC,iBAAiB,CAChB,OAAO,CAAC,CAAC,cAAM,OAAA,kBAAkB,IAAI,sBAAsB,CAAC,kBAAkB,CAAC,EAAE,CAAC,EAAnE,CAAmE,CAAC,CACnF,SAAS,CAAC,6BAA6B,CAEvC;;YACF,EAAE,iBAAiB,CACrB;UAAA,EAAE,iBAAiB,CACrB;QAAA,EAAE,kBAAkB,CACtB;MAAA,EAAE,WAAW,CAEb;;MAAA,CAAC,qCAAqC,CACtC;MAAA,CAAC,WAAW,CACV,IAAI,CAAC,CAAC,oBAAoB,CAAC,CAC3B,YAAY,CAAC,CAAC,uBAAuB,CAAC,CAEtC;QAAA,CAAC,kBAAkB,CACjB;UAAA,CAAC,iBAAiB,CAChB;YAAA,CAAC,gBAAgB,CAAC,aAAa,EAAE,gBAAgB,CACjD;YAAA,CAAC,sBAAsB,CACrB;;;YAEF,EAAE,sBAAsB,CAC1B;UAAA,EAAE,iBAAiB,CACnB;UAAA,CAAC,iBAAiB,CAChB;YAAA,CAAC,iBAAiB,CAAC,MAAM,EAAE,iBAAiB,CAC5C;YAAA,CAAC,iBAAiB,CAChB,OAAO,CAAC,CAAC,gBAAgB,CAAC,CAC1B,SAAS,CAAC,6BAA6B,CAEvC;qBAAO,CAAC,MAAM,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC,MAAM,CAAE;YAC5C,EAAE,iBAAiB,CACrB;UAAA,EAAE,iBAAiB,CACrB;QAAA,EAAE,kBAAkB,CACtB;MAAA,EAAE,WAAW,CACf;IAAA,EAAE,GAAG,CAAC,CACP,CAAC;AACJ,CAAC","sourcesContent":["'use client';\n\nimport React, { useState, useCallback } from 'react';\nimport { useQuery, useQueryClient } from '@tanstack/react-query';\nimport { format } from 'date-fns';\nimport {\n  ChevronDown,\n  MoreHorizontal,\n  Mail,\n  RefreshCw,\n  Copy,\n  Download,\n  Check,\n  X,\n} from 'lucide-react';\nimport {\n  ColumnDef,\n  ColumnFiltersState,\n  SortingState,\n  VisibilityState,\n  flexRender,\n  getCoreRowModel,\n  getFilteredRowModel,\n  getPaginationRowModel,\n  getSortedRowModel,\n  useReactTable,\n} from '@tanstack/react-table';\n\nimport { Button } from '@/components/ui/button';\nimport { Checkbox } from '@/components/ui/checkbox';\nimport {\n  DropdownMenu,\n  DropdownMenuCheckboxItem,\n  DropdownMenuContent,\n  DropdownMenuItem,\n  DropdownMenuLabel,\n  DropdownMenuPortal,\n  DropdownMenuSeparator,\n  DropdownMenuSub,\n  DropdownMenuSubContent,\n  DropdownMenuSubTrigger,\n  DropdownMenuTrigger,\n} from '@/components/ui/dropdown-menu';\nimport { Input } from '@/components/ui/input';\nimport {\n  Table,\n  TableBody,\n  TableCell,\n  TableHead,\n  TableHeader,\n  TableRow,\n} from '@/components/ui/table';\nimport { Badge } from '@/components/ui/badge';\nimport { useToast } from '@/components/ui/use-toast';\nimport {\n  AlertDialog,\n  AlertDialogAction,\n  AlertDialogCancel,\n  AlertDialogContent,\n  AlertDialogDescription,\n  AlertDialogFooter,\n  AlertDialogHeader,\n  AlertDialogTitle,\n} from '@/components/ui/alert-dialog';\n\ninterface Subscriber {\n  id: string;\n  email: string;\n  name: string | null;\n  status: 'PENDING' | 'VERIFIED' | 'BOUNCED';\n  referralCode: string | null;\n  referredBy: string | null;\n  customFields: Record<string, unknown> | null;\n  createdAt: string;\n  updatedAt: string;\n  waitlistId: string;\n}\n\ninterface SubscribersTableProps {\n  waitlistId: string;\n}\n\nexport function SubscribersTable({ waitlistId }: SubscribersTableProps) {\n  const queryClient = useQueryClient();\n\n  // State for table controls\n  const [sorting, setSorting] = useState<SortingState>([]);\n  const [columnFilters, setColumnFilters] = useState<ColumnFiltersState>([]);\n  const [columnVisibility, setColumnVisibility] = useState<VisibilityState>({});\n  const [rowSelection, setRowSelection] = useState<Record<string, boolean>>({});\n\n  // State for delete operations\n  const [deleteDialogOpen, setDeleteDialogOpen] = useState(false);\n  const [subscriberToDelete, setSubscriberToDelete] = useState<Subscriber | null>(null);\n  const [bulkDeleteDialogOpen, setBulkDeleteDialogOpen] = useState(false);\n\n  // Pagination state\n  const [pagination, setPagination] = useState({\n    pageIndex: 0,\n    pageSize: 10,\n  });\n\n  // Fetch subscribers data\n  const { data: subscribers, isLoading } = useQuery({\n    queryKey: ['subscribers', waitlistId, pagination],\n    queryFn: async () => {\n      const response = await fetch(\n        `/api/waitlists/${waitlistId}/subscribers?page=${pagination.pageIndex + 1}&limit=${pagination.pageSize}`,\n      );\n      if (!response.ok) {\n        throw new Error('Failed to fetch subscribers');\n      }\n      return response.json();\n    },\n  });\n\n  const { toast } = useToast();\n\n  // Handle resend verification email\n  const handleResendVerification = useCallback(\n    async (email: string) => {\n      if (!toast) return;\n      try {\n        const response = await fetch('/api/subscribers/resend-verification', {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json',\n          },\n          body: JSON.stringify({ email }),\n        });\n\n        if (!response.ok) {\n          throw new Error('Failed to resend verification email');\n        }\n\n        toast({\n          title: 'Email sent',\n          description: 'Verification email has been resent',\n        });\n      } catch (error) {\n        console.error('Error resending verification email:', error);\n        toast({\n          title: 'Error',\n          description: 'Failed to resend verification email',\n          variant: 'destructive',\n        });\n      }\n    },\n    [toast],\n  );\n\n  // Handle update subscriber status\n  const handleUpdateStatus = useCallback(\n    async (id: string, newStatus: 'PENDING' | 'VERIFIED' | 'BOUNCED') => {\n      try {\n        const response = await fetch(`/api/subscribers/${id}`, {\n          method: 'PATCH',\n          headers: {\n            'Content-Type': 'application/json',\n          },\n          body: JSON.stringify({ status: newStatus }),\n        });\n\n        if (!response.ok) {\n          throw new Error('Failed to update subscriber status');\n        }\n\n        await queryClient.invalidateQueries({ queryKey: ['subscribers', waitlistId] });\n\n        toast({\n          title: 'Status updated',\n          description: `Subscriber status updated to ${newStatus.toLowerCase()}`,\n        });\n      } catch (error) {\n        console.error('Error updating subscriber status:', error);\n        toast({\n          title: 'Error',\n          description: 'Failed to update subscriber status',\n          variant: 'destructive',\n        });\n      }\n    },\n    [queryClient, waitlistId, toast],\n  );\n\n  // Handle copy to clipboard\n  const copyToClipboard = useCallback(\n    (text: string, message: string) => {\n      navigator.clipboard.writeText(text);\n      toast({\n        title: 'Copied',\n        description: message,\n      });\n    },\n    [toast],\n  );\n\n  // Handle delete subscriber\n  const handleDeleteSubscriber = useCallback(\n    async (id: string) => {\n      try {\n        const response = await fetch(`/api/subscribers/${id}`, {\n          method: 'DELETE',\n        });\n\n        if (!response.ok) {\n          throw new Error('Failed to delete subscriber');\n        }\n\n        // Invalidate the query to refetch the data\n        await queryClient.invalidateQueries({ queryKey: ['subscribers', waitlistId] });\n\n        toast({\n          title: 'Success',\n          description: 'Subscriber deleted successfully',\n        });\n      } catch (error) {\n        console.error('Error deleting subscriber:', error);\n        toast({\n          title: 'Error',\n          description: 'Failed to delete subscriber',\n          variant: 'destructive',\n        });\n      } finally {\n        setSubscriberToDelete(null);\n        setDeleteDialogOpen(false);\n      }\n    },\n    [queryClient, waitlistId],\n  );\n\n  // Handle export subscribers\n  const handleExportSubscribers = useCallback(\n    async (selectedOnly = false) => {\n      try {\n        const selectedIds = selectedOnly\n          ? Object.keys(rowSelection).filter((key) => rowSelection[key] as boolean)\n          : [];\n\n        const response = await fetch('/api/subscribers/export', {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json',\n          },\n          body: JSON.stringify({\n            waitlistId,\n            subscriberIds: selectedOnly ? selectedIds : undefined,\n          }),\n        });\n\n        if (!response.ok) {\n          throw new Error('Failed to export subscribers');\n        }\n\n        // Create a download link for the CSV file\n        const blob = await response.blob();\n        const contentDisposition = response.headers.get('content-disposition');\n        const filenameMatch = contentDisposition?.match(/filename=\"?([^\"]+)\"?/);\n        const filename = filenameMatch\n          ? filenameMatch[1]\n          : `subscribers-${new Date().toISOString().split('T')[0]}.csv`;\n\n        const url = window.URL.createObjectURL(blob);\n        const a = document.createElement('a');\n        a.href = url;\n        a.download = filename;\n        document.body.appendChild(a);\n        a.click();\n        window.URL.revokeObjectURL(url);\n        a.remove();\n\n        toast({\n          title: 'Export successful',\n          description: selectedOnly\n            ? `Exported ${selectedIds.length} subscribers`\n            : 'Exported all subscribers',\n        });\n      } catch (error) {\n        console.error('Error exporting subscribers:', error);\n        toast({\n          title: 'Export failed',\n          description: 'Failed to export subscribers',\n          variant: 'destructive',\n        });\n      }\n    },\n    [rowSelection, waitlistId, toast],\n  );\n\n  // Handle bulk delete\n  const handleBulkDelete = useCallback(async () => {\n    const selectedIds = Object.keys(rowSelection).filter((key) => rowSelection[key]);\n\n    if (selectedIds.length === 0) {\n      toast({\n        title: 'No selection',\n        description: 'Please select at least one subscriber to delete',\n        variant: 'destructive',\n      });\n      return;\n    }\n\n    try {\n      const response = await fetch('/api/subscribers/bulk-delete', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify({\n          ids: selectedIds,\n        }),\n      });\n\n      if (!response.ok) {\n        throw new Error('Failed to delete subscribers');\n      }\n\n      // Invalidate the query to refetch the data\n      await queryClient.invalidateQueries({ queryKey: ['subscribers', waitlistId] });\n\n      // Clear row selection\n      setRowSelection({});\n      setBulkDeleteDialogOpen(false);\r\n\r\n      const result = await response.json();\r\n\r\n      toast({\r\n        title: 'Success',\r\n        description: `Deleted ${result.deletedCount} subscribers`,\r\n      });\r\n    } catch (error) {\r\n      console.error('Error deleting subscribers:', error);\r\n      toast({\r\n        title: 'Error',\r\n        description: 'Failed to delete subscribers',\r\n        variant: 'destructive',\r\n      });\r\n    }\r\n  }, [rowSelection, queryClient, waitlistId]);\r\n\r\n  // Define table columns\r\n  const columns: ColumnDef<Subscriber>[] = [\r\n    {\r\n      id: 'select',\r\n      header: ({ table }) => (\r\n        <Checkbox\r\n          checked={table.getIsAllPageRowsSelected()}\r\n          onCheckedChange={(value: boolean) => table.toggleAllPageRowsSelected(Boolean(value))}\r\n          aria-label=\"Select all\"\r\n        />\r\n      ),\r\n      cell: ({ row }) => (\r\n        <Checkbox\r\n          checked={row.getIsSelected()}\r\n          onCheckedChange={(value: boolean) => row.toggleSelected(Boolean(value))}\r\n          aria-label=\"Select row\"\r\n        />\r\n      ),\r\n      enableSorting: false,\r\n      enableHiding: false,\r\n    },\r\n    {\r\n      accessorKey: 'email',\r\n      header: 'Email',\r\n      cell: ({ row }) => <div className=\"font-medium\">{row.getValue('email')}</div>,\r\n    },\r\n    {\r\n      accessorKey: 'name',\r\n      header: 'Name',\r\n      cell: ({ row }) => <div>{row.getValue('name') || '-'}</div>,\r\n    },\r\n    {\r\n      accessorKey: 'status',\r\n      header: 'Status',\r\n      cell: ({ row }) => {\r\n        const status = row.getValue('status') as string;\r\n        return (\r\n          <Badge\r\n            variant={\r\n              status === 'VERIFIED' ? 'default' : status === 'PENDING' ? 'outline' : 'destructive'\r\n            }\r\n          >\r\n            {status}\r\n          </Badge>\r\n        );\r\n      },\r\n    },\r\n    {\r\n      accessorKey: 'referralCode',\r\n      header: 'Referral Code',\r\n      cell: ({ row }) => (\r\n        <div className=\"font-mono text-sm\">{row.getValue('referralCode') || '-'}</div>\r\n      ),\r\n    },\r\n    {\r\n      accessorKey: 'referredBy',\r\n      header: 'Referred By',\r\n      cell: ({ row }) => (\r\n        <div className=\"font-mono text-sm\">{row.getValue('referredBy') || '-'}</div>\r\n      ),\r\n    },\r\n    {\r\n      accessorKey: 'createdAt',\r\n      header: 'Joined',\r\n      cell: ({ row }) => <div>{format(new Date(row.getValue('createdAt')), 'MMM d, yyyy')}</div>,\r\n    },\r\n    {\r\n      id: 'actions',\r\n      enableHiding: false,\r\n      cell: ({ row }) => {\r\n        const subscriber = row.original;\r\n        return (\r\n          <DropdownMenu>\r\n            <DropdownMenuTrigger asChild>\r\n              <Button\r\n                variant=\"ghost\"\r\n                className=\"h-8 w-8 p-0\"\r\n              >\r\n                <span className=\"sr-only\">Open menu</span>\r\n                <MoreHorizontal className=\"h-4 w-4\" />\r\n              </Button>\r\n            </DropdownMenuTrigger>\r\n            <DropdownMenuContent\r\n              align=\"end\"\r\n              className=\"w-56\"\r\n            >\r\n              <DropdownMenuLabel>Subscriber Actions</DropdownMenuLabel>\r\n              <DropdownMenuSeparator />\r\n\r\n              <DropdownMenuItem\r\n                onClick={() => copyToClipboard(subscriber.email, 'Email copied to clipboard')}\r\n              >\r\n                <Copy className=\"mr-2 h-4 w-4\" />\r\n                <span>Copy email</span>\r\n              </DropdownMenuItem>\r\n\r\n              <DropdownMenuItem\r\n                onClick={() => handleResendVerification(subscriber.email)}\r\n                disabled={subscriber.status === 'VERIFIED'}\r\n              >\r\n                <Mail className=\"mr-2 h-4 w-4\" />\r\n                <span>Resend verification</span>\r\n              </DropdownMenuItem>\r\n\r\n              <DropdownMenuSub>\r\n                <DropdownMenuSubTrigger>\r\n                  <RefreshCw className=\"mr-2 h-4 w-4\" />\r\n                  <span>Update status</span>\r\n                </DropdownMenuSubTrigger>\r\n                <DropdownMenuPortal>\r\n                  <DropdownMenuSubContent>\r\n                    <DropdownMenuItem\r\n                      onClick={() => handleUpdateStatus(subscriber.id, 'PENDING')}\r\n                      className={subscriber.status === 'PENDING' ? 'bg-accent' : ''}\r\n                    >\r\n                      <span className=\"flex items-center\">\r\n                        {subscriber.status === 'PENDING' && <Check className=\"mr-2 h-4 w-4\" />}\r\n                        <span>Pending</span>\r\n                      </span>\r\n                    </DropdownMenuItem>\r\n                    <DropdownMenuItem\r\n                      onClick={() => handleUpdateStatus(subscriber.id, 'VERIFIED')}\r\n                      className={subscriber.status === 'VERIFIED' ? 'bg-accent' : ''}\r\n                    >\r\n                      <span className=\"flex items-center\">\r\n                        {subscriber.status === 'VERIFIED' && <Check className=\"mr-2 h-4 w-4\" />}\r\n                        <span>Verified</span>\r\n                      </span>\r\n                    </DropdownMenuItem>\r\n                    <DropdownMenuItem\r\n                      onClick={() => handleUpdateStatus(subscriber.id, 'BOUNCED')}\r\n                      className={subscriber.status === 'BOUNCED' ? 'bg-accent' : ''}\r\n                    >\r\n                      <span className=\"flex items-center\">\r\n                        {subscriber.status === 'BOUNCED' && <Check className=\"mr-2 h-4 w-4\" />}\r\n                        <span>Bounced</span>\r\n                      </span>\r\n                    </DropdownMenuItem>\r\n                  </DropdownMenuSubContent>\r\n                </DropdownMenuPortal>\r\n              </DropdownMenuSub>\r\n\r\n              <DropdownMenuSeparator />\r\n              <DropdownMenuItem\r\n                className=\"text-red-600\"\r\n                onClick={() => {\r\n                  setSubscriberToDelete(subscriber);\r\n                  setDeleteDialogOpen(true);\r\n                }}\r\n              >\r\n                <X className=\"mr-2 h-4 w-4\" />\r\n                <span>Delete subscriber</span>\r\n              </DropdownMenuItem>\r\n            </DropdownMenuContent>\r\n          </DropdownMenu>\r\n        );\r\n      },\r\n    },\r\n  ];\r\n\r\n  // Initialize the table\r\n  const table = useReactTable({\r\n    data: subscribers?.data || [],\r\n    columns,\r\n    onSortingChange: setSorting,\r\n    onColumnFiltersChange: setColumnFilters,\r\n    getCoreRowModel: getCoreRowModel(),\r\n    getPaginationRowModel: getPaginationRowModel(),\r\n    getSortedRowModel: getSortedRowModel(),\r\n    getFilteredRowModel: getFilteredRowModel(),\r\n    onColumnVisibilityChange: setColumnVisibility,\r\n    onRowSelectionChange: setRowSelection,\r\n    onPaginationChange: setPagination,\r\n    state: {\r\n      sorting,\r\n      columnFilters,\r\n      columnVisibility,\r\n      rowSelection,\r\n      pagination,\r\n    },\r\n    pageCount: Math.ceil((subscribers?.total || 0) / pagination.pageSize),\r\n    manualPagination: true,\r\n  });\r\n\r\n  return (\r\n    <div className=\"w-full\">\r\n      <div className=\"flex flex-col space-y-4 py-4 sm:flex-row sm:items-center sm:space-x-2 sm:space-y-0\">\r\n        <div className=\"flex-1\">\r\n          <Input\r\n            placeholder=\"Filter subscribers...\"\r\n            value={(table.getColumn('email')?.getFilterValue() as string) ?? ''}\r\n            onChange={(event) => table.getColumn('email')?.setFilterValue(event.target.value)}\r\n            className=\"max-w-sm\"\r\n          />\r\n        </div>\r\n        <div className=\"flex space-x-2\">\r\n          {/* Export and delete buttons */}\r\n          <div className=\"flex gap-2\">\r\n            <DropdownMenu>\r\n              <DropdownMenuTrigger asChild>\r\n                <Button variant=\"outline\">\r\n                  <Download className=\"mr-2 h-4 w-4\" />\r\n                  <span>Export</span>\r\n                  <ChevronDown className=\"ml-2 h-4 w-4\" />\r\n                </Button>\r\n              </DropdownMenuTrigger>\r\n              <DropdownMenuContent align=\"end\">\r\n                <DropdownMenuItem\r\n                  onClick={() => handleExportSubscribers(true)}\r\n                  disabled={Object.keys(rowSelection).length === 0}\r\n                >\r\n                  <span>Export selected ({Object.keys(rowSelection).length})</span>\r\n                </DropdownMenuItem>\r\n                <DropdownMenuItem onClick={() => handleExportSubscribers(false)}>\r\n                  <span>Export all</span>\r\n                </DropdownMenuItem>\r\n              </DropdownMenuContent>\r\n            </DropdownMenu>\r\n            {Object.keys(rowSelection).length > 0 && (\r\n              <Button\r\n                variant=\"destructive\"\r\n                onClick={() => setBulkDeleteDialogOpen(true)}\r\n              >\r\n                <X className=\"mr-2 h-4 w-4\" />\r\n                <span>Delete {Object.keys(rowSelection).length} selected</span>\r\n              </Button>\r\n            )}\r\n          </div>\r\n          <DropdownMenu>\r\n            <DropdownMenuTrigger asChild>\r\n              <Button\r\n                variant=\"outline\"\r\n                className=\"ml-auto\"\r\n              >\r\n                <MoreHorizontal className=\"mr-2 h-4 w-4\" />\r\n                <span>View</span>\r\n                <ChevronDown className=\"ml-2 h-4 w-4\" />\r\n              </Button>\r\n            </DropdownMenuTrigger>\r\n            <DropdownMenuContent align=\"end\">\r\n              <DropdownMenuLabel>Table Options</DropdownMenuLabel>\r\n              <DropdownMenuSeparator />\r\n              <DropdownMenuSub>\r\n                <DropdownMenuSubTrigger>Columns</DropdownMenuSubTrigger>\r\n                <DropdownMenuPortal>\r\n                  <DropdownMenuSubContent>\r\n                    {table\r\n                      .getAllColumns()\r\n                      .filter((column) => column.getCanHide())\r\n                      .map((column) => (\r\n                        <DropdownMenuCheckboxItem\r\n                          key={column.id}\r\n                          className=\"capitalize\"\r\n                          checked={column.getIsVisible()}\r\n                          onCheckedChange={(value) => column.toggleVisibility(Boolean(value))}\r\n                        >\r\n                          {column.id}\r\n                        </DropdownMenuCheckboxItem>\r\n                      ))}\r\n                  </DropdownMenuSubContent>\r\n                </DropdownMenuPortal>\r\n              </DropdownMenuSub>\r\n              <DropdownMenuItem\r\n                onClick={() => {\r\n                  // Export all subscribers logic\r\n                  toast({\r\n                    title: 'Exporting all subscribers',\r\n                    description: 'Preparing export for all subscribers',\r\n                  });\r\n                }}\r\n              >\r\n                <Download className=\"mr-2 h-4 w-4\" />\r\n                <span>Export All</span>\r\n              </DropdownMenuItem>\r\n            </DropdownMenuContent>\r\n          </DropdownMenu>\r\n        </div>\r\n      </div>\r\n      <div className=\"rounded-md border\">\r\n        <Table>\r\n          <TableHeader>\r\n            {table.getHeaderGroups().map((headerGroup) => (\r\n              <TableRow key={headerGroup.id}>\r\n                {headerGroup.headers.map((header) => (\r\n                  <TableHead key={header.id}>\r\n                    {header.isPlaceholder\r\n                      ? null\r\n                      : flexRender(header.column.columnDef.header, header.getContext())}\r\n                  </TableHead>\r\n                ))}\r\n              </TableRow>\r\n            ))}\r\n          </TableHeader>\r\n          <TableBody>\r\n            {table.getRowModel().rows?.length ? (\r\n              table.getRowModel().rows.map((row) => (\r\n                <TableRow\r\n                  key={row.id}\r\n                  data-state={row.getIsSelected() && 'selected'}\r\n                >\r\n                  {row.getVisibleCells().map((cell) => (\r\n                    <TableCell key={cell.id}>\r\n                      {flexRender(cell.column.columnDef.cell, cell.getContext())}\r\n                    </TableCell>\r\n                  ))}\r\n                </TableRow>\r\n              ))\r\n            ) : (\r\n              <TableRow>\r\n                <TableCell\r\n                  colSpan={columns.length}\r\n                  className=\"h-24 text-center\"\r\n                >\r\n                  {isLoading ? 'Loading...' : 'No results.'}\r\n                </TableCell>\r\n              </TableRow>\r\n            )}\r\n          </TableBody>\r\n        </Table>\r\n      </div>\r\n      <div className=\"flex items-center justify-end space-x-2 py-4\">\r\n        <div className=\"flex-1 text-sm text-muted-foreground\">\r\n          {table.getFilteredSelectedRowModel().rows.length} of{' '}\r\n          {table.getFilteredRowModel().rows.length} row(s) selected.\r\n        </div>\r\n        <div className=\"space-x-2\">\r\n          <Button\r\n            variant=\"outline\"\r\n            size=\"sm\"\r\n            onClick={() => table.previousPage()}\r\n            disabled={!table.getCanPreviousPage()}\r\n          >\r\n            Previous\r\n          </Button>\r\n          <Button\r\n            variant=\"outline\"\r\n            size=\"sm\"\r\n            onClick={() => table.nextPage()}\r\n            disabled={!table.getCanNextPage()}\r\n          >\r\n            Next\r\n          </Button>\r\n        </div>\r\n      </div>\r\n\r\n      {/* Delete confirmation dialog */}\r\n      <AlertDialog\r\n        open={deleteDialogOpen}\r\n        onOpenChange={setDeleteDialogOpen}\r\n      >\r\n        <AlertDialogContent>\r\n          <AlertDialogHeader>\r\n            <AlertDialogTitle>Are you sure?</AlertDialogTitle>\r\n            <AlertDialogDescription>\r\n              This will permanently delete the subscriber and all associated data. This action\r\n              cannot be undone.\r\n            </AlertDialogDescription>\r\n          </AlertDialogHeader>\r\n          <AlertDialogFooter>\r\n            <AlertDialogCancel>Cancel</AlertDialogCancel>\r\n            <AlertDialogAction\r\n              onClick={() => subscriberToDelete && handleDeleteSubscriber(subscriberToDelete.id)}\r\n              className=\"bg-red-600 hover:bg-red-700\"\r\n            >\r\n              Delete\r\n            </AlertDialogAction>\r\n          </AlertDialogFooter>\r\n        </AlertDialogContent>\r\n      </AlertDialog>\r\n\r\n      {/* Bulk delete confirmation dialog */}\r\n      <AlertDialog\r\n        open={bulkDeleteDialogOpen}\r\n        onOpenChange={setBulkDeleteDialogOpen}\r\n      >\r\n        <AlertDialogContent>\r\n          <AlertDialogHeader>\r\n            <AlertDialogTitle>Are you sure?</AlertDialogTitle>\r\n            <AlertDialogDescription>\r\n              This will permanently delete the selected subscribers and all associated data. This\r\n              action cannot be undone.\r\n            </AlertDialogDescription>\r\n          </AlertDialogHeader>\r\n          <AlertDialogFooter>\r\n            <AlertDialogCancel>Cancel</AlertDialogCancel>\r\n            <AlertDialogAction\r\n              onClick={handleBulkDelete}\r\n              className=\"bg-red-600 hover:bg-red-700\"\r\n            >\r\n              Delete {Object.keys(rowSelection).length} subscribers\r\n            </AlertDialogAction>\r\n          </AlertDialogFooter>\r\n        </AlertDialogContent>\r\n      </AlertDialog>\r\n    </div>\r\n  );\r\n}\r\n"]}