{"version":3,"file":"page.jsx","sourceRoot":"","sources":["page.tsx"],"names":[],"mappings":"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","sourcesContent":["'use client';\r\n\r\nimport React from \"react\";\r\n\r\nimport { useState, useCallback, useMemo, useEffect } from 'react';\r\nimport { useRouter } from 'next/navigation';\r\nimport { toast } from 'sonner';\r\n\r\n// URL validation helper\r\nconst isValidUrl = (url: string): boolean => {\r\n  if (!url) return false;\r\n  try {\r\n    new URL(url);\r\n    return true;\r\n  } catch (e) {\r\n    return false;\r\n  }\r\n};\r\n// Simple Badge component\r\n/**\r\n * Renders a badge component with customizable variant and class name.\r\n */\r\nconst Badge = ({\r\n  children,\r\n  variant = 'default',\r\n  className = '',\r\n  ...props\r\n}: {\r\n  variant?: 'default' | 'secondary' | 'outline';\r\n  className?: string;\r\n  children: React.ReactNode;\r\n  [key: string]: any;\r\n}) => {\r\n  const baseStyles =\r\n    'inline-flex items-center rounded-full border px-2.5 py-0.5 text-xs font-semibold transition-colors focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2';\r\n  const variantStyles = {\r\n    default: 'bg-primary text-primary-foreground hover:bg-primary/80 border-transparent',\r\n    secondary: 'bg-secondary text-secondary-foreground hover:bg-secondary/80 border-transparent',\r\n    outline: 'text-foreground border-border',\r\n  };\r\n\r\n  return (\r\n    <span\r\n      className={`${baseStyles} ${variantStyles[variant]} ${className}`}\r\n      {...props}\r\n    >\r\n      {children}\r\n    </span>\r\n  );\r\n};\r\n\r\nimport { cn } from '@/utils';\r\nimport { Button } from '@/components/ui/button';\r\nimport {\r\n  Card,\r\n  CardContent,\r\n  CardDescription,\r\n  CardFooter,\r\n  CardHeader,\r\n  CardTitle,\r\n} from '@/components/ui/card';\r\nimport { Input } from '@/components/ui/input';\r\nimport { Label } from '@/components/ui/label';\r\nimport { Textarea } from '@/components/ui/textarea';\r\nimport { Tabs, TabsContent, TabsList, TabsTrigger } from '@/components/ui/tabs';\r\nimport {\r\n  ArrowLeft,\r\n  Plus,\r\n  Zap,\r\n  Eye,\r\n  Copy,\r\n  Trash2,\r\n  GripVertical,\r\n  Check,\r\n  X,\r\n  Loader2,\r\n  Pencil,\r\n  ExternalLink,\r\n  CheckCircle,\r\n} from 'lucide-react';\r\nimport { DashboardPage } from '@/components/dashboard-page';\r\nimport Link from 'next/link';\r\nimport {\r\n  DialogHeader,\r\n  Dialog,\r\n  DialogContent,\r\n  DialogTitle,\r\n  DialogDescription,\r\n} from '@/components/ui/dialog';\r\n\r\n// Types\r\ntype FieldType = 'text' | 'email' | 'number' | 'url' | 'tel' | 'textarea' | 'select';\r\ntype ButtonVariant = 'default' | 'outline' | 'secondary' | 'ghost' | 'link';\r\ntype ButtonRounded = 'none' | 'sm' | 'md' | 'lg' | 'full';\r\ntype FormLayout = 'stacked' | 'inline';\r\ntype ConfirmationType = 'message' | 'redirect';\r\n\r\ninterface CustomField {\r\n  id: string;\r\n  name: string;\r\n  type: FieldType;\r\n  required: boolean;\r\n  placeholder?: string;\r\n  options?: string[]; // for select type\r\n}\r\n\r\ninterface WaitlistStyle {\r\n  primaryColor: string;\r\n  buttonText: string;\r\n  buttonColor: string;\r\n  buttonTextColor: string;\r\n  buttonVariant: ButtonVariant;\r\n  buttonRounded: ButtonRounded;\r\n  formLayout: FormLayout;\r\n  showLabels: boolean;\r\n  backgroundColor: string;\r\n  textColor: string;\r\n  fontFamily: string;\r\n  boxShadow: string;\r\n  padding: string;\r\n  borderRadius: string;\r\n}\r\n\r\ninterface FormData {\r\n  [x: string]: Color | undefined;\r\n  name: string;\r\n  description: string;\r\n  websiteUrl: string;\r\n  redirectUrl: string;\r\n  customFields: CustomField[];\r\n  style: WaitlistStyle;\r\n  confirmationType: ConfirmationType;\r\n  confirmationMessage: string;\r\n  enableNotifications: boolean;\r\n  enableReferrals: boolean;\r\n  referralReward: string;\r\n  requireEmailVerification: boolean;\r\n  maxSignups?: number;\r\n  showBranding: boolean;\r\n  settings: {\r\n    maxSignups?: number;\r\n    emailVerification: boolean;\r\n    allowDuplicates: boolean;\r\n    referralEnabled: boolean;\r\n    referralReward?: string;\r\n    customCss?: string;\r\n    customJs?: string;\r\n  };\r\n}\r\n\r\n// Constants\r\nconst FIELD_TYPES: { value: FieldType; label: string }[] = [\r\n  { value: 'text', label: 'Text' },\r\n  { value: 'email', label: 'Email' },\r\n  { value: 'number', label: 'Number' },\r\n  { value: 'url', label: 'URL' },\r\n  { value: 'tel', label: 'Phone' },\r\n  { value: 'textarea', label: 'Textarea' },\r\n  { value: 'select', label: 'Select' },\r\n];\r\n\r\nconst BUTTON_VARIANTS: { value: ButtonVariant; label: string }[] = [\r\n  { value: 'default', label: 'Default' },\r\n  { value: 'outline', label: 'Outline' },\r\n  { value: 'secondary', label: 'Secondary' },\r\n  { value: 'ghost', label: 'Ghost' },\r\n  { value: 'link', label: 'Link' },\r\n];\r\n\r\nconst BORDER_RADIUS: { value: ButtonRounded; label: string }[] = [\r\n  { value: 'none', label: 'None' },\r\n  { value: 'sm', label: 'Small' },\r\n  { value: 'md', label: 'Medium' },\r\n  { value: 'lg', label: 'Large' },\r\n  { value: 'full', label: 'Pill' },\r\n];\r\n\r\n/**\r\n * This component is responsible for creating a new waitlist in the dashboard.\r\n * It includes various sections such as basic information, custom fields, appearance settings,\r\n * and behavior settings. Users can navigate between these tabs to customize their waitlist form.\r\n *\r\n * @returns {JSX.Element} - The rendered React component for creating a new waitlist.\r\n */\r\nexport default function NewWaitlistPage() {\r\n  const router = useRouter();\r\n  const [activeTab, setActiveTab] = useState<'basic' | 'fields' | 'appearance' | 'behavior'>(\r\n    'basic',\r\n  );\r\n  const [isSubmitting, setIsSubmitting] = useState(false);\r\n  const [previewMode, setPreviewMode] = useState(false);\r\n  const [errors, setErrors] = useState<Record<string, string>>({});\r\n  const [newField, setNewField] = useState<Partial<CustomField>>({\r\n    type: 'text',\r\n    required: false,\r\n  });\r\n  const [showFieldEditor, setShowFieldEditor] = useState(false);\r\n  const [formData, setFormData] = useState<FormData>({\r\n    name: '',\r\n    description: '',\r\n    websiteUrl: '',\r\n    redirectUrl: '',\r\n    customFields: [],\r\n    confirmationType: 'message',\r\n    confirmationMessage: 'Thank you for joining the waitlist!',\r\n    enableNotifications: false,\r\n    enableReferrals: false,\r\n    referralReward: '',\r\n    requireEmailVerification: true,\r\n    showBranding: true,\r\n    style: {\r\n      buttonText: 'Join Waitlist',\r\n      buttonColor: '#3b82f6',\r\n      buttonTextColor: '#ffffff',\r\n      backgroundColor: '#ffffff',\r\n      textColor: '#1f2937',\r\n      borderRadius: '8',\r\n      fontFamily: 'Inter',\r\n      showLabels: true,\r\n      formLayout: 'stacked',\r\n      primaryColor: '#3b82f6',\r\n      buttonVariant: 'default',\r\n      buttonRounded: 'md',\r\n      boxShadow: '0 1px 3px 0 rgba(0, 0, 0, 0.1), 0 1px 2px 0 rgba(0, 0, 0, 0.06)',\r\n      padding: '1.5rem',\r\n    },\r\n    settings: {\r\n      maxSignups: undefined,\r\n      emailVerification: true,\r\n      allowDuplicates: false,\r\n      referralEnabled: false,\r\n      referralReward: '',\r\n      customCss: '',\r\n      customJs: '',\r\n    },\r\n  });\r\n  const [embedType, setEmbedType] = useState<'js' | 'iframe'>('js');\r\n\r\n  const handleTestConfirmation = () => {\r\n    // Removed from here\r\n    setIsTesting(true);\r\n    setShowConfirmation(true);\r\n  };\r\n\r\n  const handleCloseTest = () => {\r\n    setShowConfirmation(false);\r\n    // Small delay to allow the modal to close before resetting the testing state\r\n    setTimeout(() => setIsTesting(false), 300);\r\n  };\r\n\r\n  const handleRedirect = () => {\r\n    if (formData.confirmationType === 'redirect' && formData.redirectUrl) {\r\n      window.open(formData.redirectUrl, '_blank');\r\n    }\r\n  };\r\n\r\n  // Helper functions\r\n  const getBorderRadius = useCallback((size: ButtonRounded): string => {\r\n    const radiusMap = {\r\n      none: '0px',\r\n      sm: '0.25rem',\r\n      md: '0.375rem',\r\n      lg: '0.5rem',\r\n      full: '9999px',\r\n    };\r\n    return radiusMap[size] || '0.375rem';\r\n  }, []);\r\n\r\n  // Validation\r\n  const validateForm = useCallback((): boolean => {\r\n    const newErrors: Record<string, string> = {};\r\n\r\n    if (!formData.name.trim()) {\r\n      newErrors.name = 'Waitlist name is required';\r\n    }\r\n\r\n    if (formData.websiteUrl && !isValidUrl(formData.websiteUrl)) {\r\n      newErrors.websiteUrl = 'Please enter a valid URL';\r\n    }\r\n\r\n    if (formData.redirectUrl && !isValidUrl(formData.redirectUrl)) {\r\n      newErrors.redirectUrl = 'Please enter a valid URL';\r\n    }\r\n\r\n    if (formData.maxSignups && formData.maxSignups < 1) {\r\n      newErrors.maxSignups = 'Maximum signups must be at least 1';\r\n    }\r\n\r\n    setErrors(newErrors);\r\n    return Object.keys(newErrors).length === 0;\r\n  }, [formData]);\r\n\r\n  // Form change handlers\r\n  const handleChange = useCallback(\r\n    (e: React.ChangeEvent<HTMLInputElement | HTMLTextAreaElement | HTMLSelectElement>) => {\r\n      const target = e.target as HTMLInputElement | HTMLTextAreaElement | HTMLSelectElement;\r\n      const { name, value, type } = target;\r\n      const checked = 'checked' in target ? target.checked : undefined;\r\n\r\n      // Handle nested objects in form data (style, settings, etc.)\r\n      if (name.includes('.')) {\r\n        const [parent, child] = name.split('.');\r\n        setFormData((prev) => ({\r\n          ...prev,\r\n          [parent]: {\r\n            ...((prev[parent as keyof FormData] as object) || {}),\r\n            [child]: type === 'checkbox' ? checked : type === 'number' ? Number(value) : value,\r\n          },\r\n        }));\r\n      } else {\r\n        setFormData((prev) => ({\r\n          ...prev,\r\n          [name]: type === 'checkbox' ? checked : type === 'number' ? Number(value) : value,\r\n        }));\r\n      }\r\n\r\n      // Clear error when field is edited\r\n      if (errors[name]) {\r\n        setErrors((prev) => {\r\n          const newErrors = { ...prev };\r\n          delete newErrors[name];\r\n          return newErrors;\r\n        });\r\n      }\r\n    },\r\n    [errors],\r\n  );\r\n\r\n  // Handle color picker changes\r\n  const handleColorChange = (name: string, value: string) => {\r\n    if (name.includes('.')) {\r\n      const [parent, child] = name.split('.');\r\n      setFormData((prev) => ({\r\n        ...prev,\r\n        [parent]: {\r\n          ...((prev[parent as keyof FormData] as object) || {}),\r\n          [child]: value,\r\n        },\r\n      }));\r\n    } else {\r\n      setFormData((prev) => ({\r\n        ...prev,\r\n        [name]: value,\r\n      }));\r\n    }\r\n  };\r\n\r\n  // Add a new custom field\r\n  const addCustomField = () => {\r\n    if (!newField.name) {\r\n      toast.error('Field name is required');\r\n      return;\r\n    }\r\n\r\n    // Check if field with this name already exists\r\n    if (formData.customFields.some((field) => field.name === newField.name)) {\r\n      toast.error('A field with this name already exists');\r\n      return;\r\n    }\r\n\r\n    const field: CustomField = {\r\n      id: `field-${Date.now()}`,\r\n      name: newField.name,\r\n      type: newField.type || 'text',\r\n      required: newField.required || false,\r\n      placeholder: newField.placeholder || '',\r\n      options: newField.type === 'select' ? newField.options || [''] : undefined,\r\n    };\r\n\r\n    setFormData((prev) => ({\r\n      ...prev,\r\n      customFields: [...prev.customFields, field],\r\n    }));\r\n\r\n    // Reset the new field form\r\n    setNewField({\r\n      type: 'text',\r\n      required: false,\r\n    });\r\n    setShowFieldEditor(false);\r\n    toast.success('Custom field added');\r\n  };\r\n\r\n  // Remove a custom field\r\n  const removeCustomField = useCallback((id: string) => {\r\n    setFormData((prev) => ({\r\n      ...prev,\r\n      customFields: prev.customFields.filter((field) => field.id !== id),\r\n    }));\r\n  }, []);\r\n\r\n  // Update a custom field\r\n  const updateCustomField = (id: string, updates: Partial<CustomField>) => {\r\n    setFormData((prev) => ({\r\n      ...prev,\r\n      customFields: prev.customFields.map((field) =>\r\n        field.id === id ? { ...field, ...updates } : field,\r\n      ),\r\n    }));\r\n\r\n    // If updating options for a select field, ensure at least one option exists\r\n    if (updates.type === 'select' && !updates.options?.length) {\r\n      setFormData((prev) => ({\r\n        ...prev,\r\n        customFields: prev.customFields.map((field) =>\r\n          field.id === id ? { ...field, ...updates, options: [''] } : field,\r\n        ),\r\n      }));\r\n    }\r\n  };\r\n\r\n  // Reorder custom fields\r\n  const reorderCustomFields = useCallback((dragIndex: number, dropIndex: number) => {\r\n    setFormData((prev) => {\r\n      const fields = [...prev.customFields];\r\n      const draggedField = fields[dragIndex];\r\n      fields.splice(dragIndex, 1);\r\n      fields.splice(dropIndex, 0, draggedField);\r\n      return { ...prev, customFields: fields };\r\n    });\r\n  }, []);\r\n\r\n  /**\r\n   * Handles form submission by preventing default form behavior, validating input,\r\n   * and making an API call to create a new waitlist.\r\n   */\r\n  const handleSubmit = async (e: React.FormEvent) => {\r\n    e.preventDefault();\r\n\r\n    // Client-side validation\r\n    if (!validateForm()) {\r\n      return;\r\n    }\r\n\r\n    setIsSubmitting(true);\r\n    setErrors({});\r\n\r\n    try {\r\n      // Generate verification token if email verification is enabled\r\n      const verificationToken = formData.requireEmailVerification ? crypto.randomUUID() : undefined;\r\n\r\n      // Prepare the data for the API\r\n      const waitlistData = {\r\n        name: formData.name,\r\n        description: formData.description,\r\n        websiteUrl: formData.websiteUrl || '',\r\n        redirectUrl: formData.redirectUrl || '',\r\n        customFields: formData.customFields,\r\n        style: {\r\n          ...formData.style,\r\n          borderRadius: Number(formData.style.borderRadius) || 8, // Ensure borderRadius is a number\r\n        },\r\n        settings: {\r\n          ...formData.settings,\r\n          maxSignups: formData.settings.maxSignups || undefined,\r\n          emailVerification: formData.requireEmailVerification,\r\n          allowDuplicates: formData.settings.allowDuplicates || false,\r\n          referralEnabled: formData.enableReferrals,\r\n          referralReward: formData.referralReward || '',\r\n          customCss: formData.settings.customCss || '',\r\n          customJs: formData.settings.customJs || '',\r\n        },\r\n        verificationToken,\r\n      };\r\n\r\n      // Call the API to create the waitlist\r\n      const response = await fetch('/api/waitlists', {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify(waitlistData),\r\n      });\r\n\r\n      const data = await response.json();\r\n\r\n      if (!response.ok) {\r\n        if (response.status === 400 && data.error) {\r\n          setErrors((prev) => ({\r\n            ...prev,\r\n            ...(typeof data.error === 'string' ? { _form: data.error } : data.error),\r\n          }));\r\n          toast.error('Please fix the errors in the form');\r\n        } else {\r\n          throw new Error(data.error || 'Failed to create waitlist');\r\n        }\r\n        return;\r\n      }\r\n\r\n      // If email verification is enabled, send verification email\r\n      if (formData.requireEmailVerification && verificationToken) {\r\n        try {\r\n          const emailResponse = await fetch('/api/verify-email', {\r\n            method: 'POST',\r\n            headers: {\r\n              'Content-Type': 'application/json',\r\n            },\r\n            body: JSON.stringify({\r\n              email: data.email, // Assuming the API returns the email\r\n              verificationToken,\r\n            }),\r\n          });\r\n\r\n          if (!emailResponse.ok) {\r\n            console.error('Failed to send verification email');\r\n            // Continue with success flow even if email fails\r\n          }\r\n        } catch (emailError) {\r\n          console.error('Error sending verification email:', emailError);\r\n          // Continue with success flow even if email fails\r\n        }\r\n      }\r\n\r\n      // Success! Redirect to the waitlists page\r\n      toast.success('Waitlist created successfully!');\r\n      // Use replace to prevent going back to the form\r\n      router.replace('/dashboard/waitlists');\r\n      // Trigger a refresh of the waitlists data\r\n      router.refresh();\r\n    } catch (error) {\r\n      console.error('Error creating waitlist:', error);\r\n      toast.error(error instanceof Error ? error.message : 'Failed to create waitlist');\r\n    } finally {\r\n      setIsSubmitting(false);\r\n    }\r\n  };\r\n\r\n  // Get branding preference from form data\r\n  const showBranding = formData.showBranding !== false; // Default to true if undefined\r\n\r\n  // Generate embed code based on selected type\r\n  const embedCode = useMemo(() => {\r\n    const baseUrl = 'https://yourdomain.com'; // Replace with your actual domain\r\n    const waitlistId = 'new'; // This would be the actual waitlist ID in a real app\r\n\r\n    // Ensure all style properties have default values\r\n    const style = {\r\n      buttonText: formData.style?.buttonText || 'Join Waitlist',\r\n      buttonVariant: formData.style?.buttonVariant || 'default',\r\n      buttonRounded: formData.style?.buttonRounded || 'md',\r\n      primaryColor: formData.style?.primaryColor || '#3b82f6',\r\n      formLayout: formData.style?.formLayout || 'stacked',\r\n      showLabels: formData.style?.showLabels ?? true,\r\n    };\r\n\r\n    const dataAttributes = [\r\n      `data-waitlist-id=\"${waitlistId}\"`,\r\n      `data-button-text=\"${style.buttonText}\"`,\r\n      `data-button-variant=\"${style.buttonVariant}\"`,\r\n      `data-button-rounded=\"${style.buttonRounded}\"`,\r\n      `data-primary-color=\"${style.primaryColor.replace('#', '')}\"`,\r\n      `data-form-layout=\"${style.formLayout}\"`,\r\n      `data-show-labels=\"${style.showLabels}\"`,\r\n      `data-show-branding=\"${showBranding.toString()}\"`,\r\n      ...(formData.enableReferrals ? ['data-enable-referrals=\"true\"'] : []),\r\n      ...(formData.referralReward ? [`data-referral-reward=\"${formData.referralReward}\"`] : []),\r\n      ...(formData.maxSignups ? [`data-max-signups=\"${formData.maxSignups}\"`] : []),\r\n    ];\r\n\r\n    if (embedType === 'js') {\r\n      return `<script src=\"${baseUrl}/widget.js\"\\n  ${dataAttributes.join('\\n  ')}\\n  async>\\n</script>`;\r\n    } else {\r\n      // For iframe, we'll use a URL with query parameters\r\n      const params = new URLSearchParams();\r\n      dataAttributes.forEach((attr) => {\r\n        const [key, value] = attr.split('=');\r\n        if (key && value) {\r\n          const cleanKey = key.replace('data-', '').replace(/[\"']/g, '');\r\n          const cleanValue = value.replace(/[\"']/g, '');\r\n          params.append(cleanKey, cleanValue);\r\n        }\r\n      });\r\n      const iframeUrl = `${baseUrl}/widget/embed?${params.toString()}`;\r\n      return `<iframe \r\n  src=\"${iframeUrl}\"\r\n  width=\"100%\" \r\n  height=\"500\" \r\n  frameborder=\"0\" \r\n  style=\"border: none; border-radius: 8px;\"\r\n  scrolling=\"no\"\r\n></iframe>`;\r\n    }\r\n  }, [formData, embedType, showBranding]);\r\n\r\n  /**\r\n   * Copies the embed code to the clipboard and logs an error if it fails.\r\n   */\r\n  const copyEmbedCode = async () => {\r\n    try {\r\n      await navigator.clipboard.writeText(embedCode);\r\n      // You could add a toast notification here\r\n    } catch (err) {\r\n      console.error('Failed to copy embed code:', err);\r\n    }\r\n  };\r\n\r\n  /**\r\n   * Resets form data to default values and clears errors.\r\n   */\r\n  const resetForm = () => {\r\n    setFormData({\r\n      name: '',\r\n      description: '',\r\n      websiteUrl: '',\r\n      redirectUrl: '',\r\n      customFields: [],\r\n      confirmationType: 'message',\r\n      confirmationMessage: 'Thank you for joining the waitlist!',\r\n      enableNotifications: false,\r\n      enableReferrals: false,\r\n      referralReward: '',\r\n      requireEmailVerification: true,\r\n      showBranding: true,\r\n      style: {\r\n        buttonText: 'Join Waitlist',\r\n        buttonColor: '#3b82f6',\r\n        buttonTextColor: '#ffffff',\r\n        backgroundColor: '#ffffff',\r\n        textColor: '#1f2937',\r\n        borderRadius: '8',\r\n        fontFamily: 'Inter',\r\n        showLabels: true,\r\n        formLayout: 'stacked',\r\n        primaryColor: '#3b82f6',\r\n        buttonVariant: 'default',\r\n        buttonRounded: 'md',\r\n        boxShadow: '0 1px 3px 0 rgba(0, 0, 0, 0.1), 0 1px 2px 0 rgba(0, 0, 0, 0.06)',\r\n        padding: '1.5rem',\r\n      },\r\n      settings: {\r\n        maxSignups: undefined,\r\n        emailVerification: true,\r\n        allowDuplicates: false,\r\n        referralEnabled: false,\r\n        referralReward: '',\r\n        customCss: '',\r\n        customJs: '',\r\n      },\r\n    });\r\n    setErrors({});\r\n  };\r\n\r\n  return (\r\n    <DashboardPage\r\n      title=\"Create New Waitlist\"\r\n      hideBackButton={false}\r\n      cta={\r\n        <div className=\"flex gap-2\">\r\n          <Button\r\n            variant=\"outline\"\r\n            asChild\r\n          >\r\n            <Link href=\"/dashboard/waitlists\">\r\n              <ArrowLeft className=\"mr-2 h-4 w-4\" />\r\n              Cancel\r\n            </Link>\r\n          </Button>\r\n          <Button\r\n            variant=\"outline\"\r\n            onClick={() => setPreviewMode(!previewMode)}\r\n          >\r\n            <Eye className=\"mr-2 h-4 w-4\" />\r\n            {previewMode ? 'Edit' : 'Preview'}\r\n          </Button>\r\n          <Button\r\n            type=\"submit\"\r\n            form=\"waitlist-form\"\r\n            disabled={isSubmitting || !formData.name.trim()}\r\n          >\r\n            {isSubmitting ? (\r\n              <>\r\n                <Loader2 className=\"mr-2 h-4 w-4 animate-spin\" />\r\n                Creating...\r\n              </>\r\n            ) : (\r\n              <>\r\n                <Zap className=\"mr-2 h-4 w-4\" />\r\n                Create Waitlist\r\n              </>\r\n            )}\r\n          </Button>\r\n        </div>\r\n      }\r\n    >\r\n      {errors.submit && (\r\n        <div className=\"mb-6 p-4 bg-red-50 border border-red-200 rounded-md\">\r\n          <p className=\"text-red-800 text-sm\">{errors.submit}</p>\r\n        </div>\r\n      )}\r\n\r\n      <div className=\"flex justify-end mb-4\">\r\n        <Button\r\n          type=\"button\"\r\n          variant=\"outline\"\r\n          onClick={() => setPreviewMode(!previewMode)}\r\n          className=\"flex items-center gap-2\"\r\n        >\r\n          {previewMode ? (\r\n            <>\r\n              <Pencil className=\"h-4 w-4\" />\r\n              Edit Form\r\n            </>\r\n          ) : (\r\n            <>\r\n              <Eye className=\"h-4 w-4\" />\r\n              Preview\r\n            </>\r\n          )}\r\n        </Button>\r\n      </div>\r\n\r\n      {previewMode ? (\r\n        <div className=\"border rounded-lg p-6 bg-card\">\r\n          <WaitlistPreview formData={formData} />\r\n        </div>\r\n      ) : (\r\n        <form\r\n          id=\"waitlist-form\"\r\n          onSubmit={handleSubmit}\r\n          className=\"space-y-6\"\r\n        >\r\n          <Tabs\r\n            value={activeTab}\r\n            onValueChange={(value) => setActiveTab(value as any)}\r\n            className=\"w-full\"\r\n          >\r\n            <TabsList className=\"grid w-full grid-cols-4\">\r\n              <TabsTrigger\r\n                value=\"basic\"\r\n                className=\"flex items-center gap-2\"\r\n              >\r\n                <span className=\"flex h-6 w-6 items-center justify-center rounded-full bg-primary/10 text-primary text-xs\">\r\n                  1\r\n                </span>\r\n                Basic\r\n              </TabsTrigger>\r\n              <TabsTrigger\r\n                value=\"fields\"\r\n                className=\"flex items-center gap-2\"\r\n              >\r\n                <span className=\"flex h-6 w-6 items-center justify-center rounded-full bg-primary/10 text-primary text-xs\">\r\n                  2\r\n                </span>\r\n                Fields\r\n              </TabsTrigger>\r\n              <TabsTrigger\r\n                value=\"appearance\"\r\n                className=\"flex items-center gap-2\"\r\n              >\r\n                <span className=\"flex h-6 w-6 items-center justify-center rounded-full bg-primary/10 text-primary text-xs\">\r\n                  3\r\n                </span>\r\n                Style\r\n              </TabsTrigger>\r\n              <TabsTrigger\r\n                value=\"behavior\"\r\n                className=\"flex items-center gap-2\"\r\n              >\r\n                <span className=\"flex h-6 w-6 items-center justify-center rounded-full bg-primary/10 text-primary text-xs\">\r\n                  4\r\n                </span>\r\n                Settings\r\n              </TabsTrigger>\r\n            </TabsList>\r\n\r\n            <TabsContent\r\n              value=\"basic\"\r\n              className=\"space-y-6\"\r\n            >\r\n              <BasicInfoSection\r\n                formData={formData}\r\n                errors={errors}\r\n                onChange={handleChange}\r\n              />\r\n            </TabsContent>\r\n\r\n            <TabsContent\r\n              value=\"fields\"\r\n              className=\"space-y-6\"\r\n            >\r\n              <CustomFieldsSection\r\n                formData={formData}\r\n                newField={newField}\r\n                setNewField={setNewField}\r\n                addCustomField={addCustomField}\r\n                removeCustomField={removeCustomField}\r\n                updateCustomField={updateCustomField}\r\n                reorderCustomFields={reorderCustomFields}\r\n              />\r\n            </TabsContent>\r\n\r\n            <TabsContent\r\n              value=\"appearance\"\r\n              className=\"space-y-6\"\r\n            >\r\n              <AppearanceSection\r\n                formData={formData}\r\n                setFormData={setFormData}\r\n                getBorderRadius={getBorderRadius}\r\n              />\r\n            </TabsContent>\r\n\r\n            <TabsContent\r\n              value=\"behavior\"\r\n              className=\"space-y-6\"\r\n            >\r\n              <Card>\r\n                <CardHeader>\r\n                  <CardTitle>Branding</CardTitle>\r\n                  <CardDescription>Customize the branding on your waitlist form</CardDescription>\r\n                </CardHeader>\r\n                <CardContent className=\"space-y-4\">\r\n                  <div className=\"space-y-4\">\r\n                    <div className=\"flex items-center justify-between rounded-lg border p-4\">\r\n                      <div>\r\n                        <h4 className=\"font-medium\">Show \"Powered by WaitlistNow\"</h4>\r\n                        <p className=\"text-sm text-muted-foreground\">\r\n                          {formData.showBranding\r\n                            ? 'A small badge will be shown at the bottom of your waitlist form'\r\n                            : 'The badge will be hidden from your waitlist form'}\r\n                        </p>\r\n                      </div>\r\n                      <Button\r\n                        variant={formData.showBranding ? 'outline' : 'default'}\r\n                        onClick={() =>\r\n                          setFormData((prev) => ({\r\n                            ...prev,\r\n                            showBranding: !prev.showBranding,\r\n                          }))\r\n                        }\r\n                      >\r\n                        {formData.showBranding ? 'Hide' : 'Show'} Branding\r\n                      </Button>\r\n                    </div>\r\n\r\n                    <div className=\"overflow-hidden rounded-lg border border-amber-200 bg-amber-50 dark:border-amber-900/30 dark:bg-amber-950/20\">\r\n                      <div className=\"p-4\">\r\n                        <div className=\"flex items-start\">\r\n                          <div className=\"flex-shrink-0\">\r\n                            <Zap className=\"h-5 w-5 text-amber-600 dark:text-amber-400\" />\r\n                          </div>\r\n                          <div className=\"ml-3 flex-1\">\r\n                            <h3 className=\"text-sm font-medium text-amber-800 dark:text-amber-200\">\r\n                              Want to remove branding?\r\n                            </h3>\r\n                            <div className=\"mt-1 text-sm text-amber-700 dark:text-amber-300\">\r\n                              <p>\r\n                                Upgrade to Pro to remove the \"Powered by WaitlistNow\" badge and\r\n                                unlock additional features.\r\n                              </p>\r\n                            </div>\r\n                            <div className=\"mt-3\">\r\n                              <Button\r\n                                variant=\"outline\"\r\n                                className=\"border-amber-300 text-amber-700 hover:bg-amber-100 dark:border-amber-700 dark:text-amber-300 dark:hover:bg-amber-900/50\"\r\n                                onClick={() => {\r\n                                  // Handle upgrade logic here\r\n                                }}\r\n                              >\r\n                                Upgrade to Pro\r\n                              </Button>\r\n                            </div>\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n\r\n                    {formData.showBranding && (\r\n                      <div className=\"mt-4 rounded-lg border p-4\">\r\n                        <h4 className=\"mb-2 text-sm font-medium\">Preview</h4>\r\n                        <div className=\"flex items-center justify-between rounded-md border bg-background p-3 text-sm text-muted-foreground\">\r\n                          <span>\r\n                            Powered by <strong>WaitlistNow</strong>\r\n                          </span>\r\n                          <span className=\"text-xs text-muted-foreground/60\">\r\n                            Your form will look like this\r\n                          </span>\r\n                        </div>\r\n                      </div>\r\n                    )}\r\n                  </div>\r\n                </CardContent>\r\n              </Card>\r\n              <BehaviorSection\r\n                formData={formData}\r\n                setFormData={setFormData}\r\n                errors={errors}\r\n                embedCode={embedCode}\r\n                copyEmbedCode={copyEmbedCode}\r\n                showBranding={formData.showBranding}\r\n              />\r\n            </TabsContent>\r\n          </Tabs>\r\n\r\n          <div className=\"flex justify-between\">\r\n            <Button\r\n              type=\"button\"\r\n              variant=\"outline\"\r\n              onClick={resetForm}\r\n            >\r\n              Reset Form\r\n            </Button>\r\n            <div className=\"flex gap-2\">\r\n              {activeTab !== 'basic' && (\r\n                <Button\r\n                  type=\"button\"\r\n                  variant=\"outline\"\r\n                  onClick={() => {\r\n                    const tabs = ['basic', 'fields', 'appearance', 'behavior'];\r\n                    const currentIndex = tabs.indexOf(activeTab);\r\n                    if (currentIndex > 0) {\r\n                      setActiveTab(tabs[currentIndex - 1] as any);\r\n                    }\r\n                  }}\r\n                >\r\n                  Previous\r\n                </Button>\r\n              )}\r\n              {activeTab !== 'behavior' && (\r\n                <Button\r\n                  type=\"button\"\r\n                  onClick={() => {\r\n                    const tabs = ['basic', 'fields', 'appearance', 'behavior'];\r\n                    const currentIndex = tabs.indexOf(activeTab);\r\n                    if (currentIndex < tabs.length - 1) {\r\n                      setActiveTab(tabs[currentIndex + 1] as any);\r\n                    }\r\n                  }}\r\n                >\r\n                  Next\r\n                </Button>\r\n              )}\r\n            </div>\r\n          </div>\r\n        </form>\r\n      )}\r\n    </DashboardPage>\r\n  );\r\n}\r\n\r\n// Component sections\r\ninterface SectionProps {\r\n  formData: FormData;\r\n  errors?: Record<string, string>;\r\n  onChange?: (\r\n    e: React.ChangeEvent<HTMLInputElement | HTMLTextAreaElement | HTMLSelectElement>,\r\n  ) => void;\r\n}\r\n\r\n/**\r\n * Renders a section for basic information input fields in a form.\r\n *\r\n * This component includes input fields for the waitlist name, description,\r\n * website URL, and thank you page URL. It handles form data changes through\r\n * the provided `onChange` function and displays error messages if applicable.\r\n *\r\n * The component uses conditional rendering to apply error styles and display\r\n * error messages next to respective input fields.\r\n *\r\n * @param formData - An object containing the current values of the form fields.\r\n * @param errors - An object containing error messages for each field, if any.\r\n * @param onChange - A callback function to handle changes in the form fields.\r\n */\r\nfunction BasicInfoSection({ formData, errors, onChange }: SectionProps) {\r\n  return (\r\n    <Card>\r\n      <CardHeader>\r\n        <CardTitle>Basic Information</CardTitle>\r\n        <CardDescription>Set up the essential details for your waitlist</CardDescription>\r\n      </CardHeader>\r\n      <CardContent className=\"space-y-4\">\r\n        <div className=\"space-y-2\">\r\n          <Label htmlFor=\"name\">Waitlist Name *</Label>\r\n          <Input\r\n            id=\"name\"\r\n            name=\"name\"\r\n            value={formData.name}\r\n            onChange={onChange}\r\n            placeholder=\"e.g., Early Access Waitlist\"\r\n            required\r\n            className={errors?.name ? 'border-red-500' : ''}\r\n          />\r\n          {errors?.name && <p className=\"text-red-500 text-sm\">{errors.name}</p>}\r\n        </div>\r\n\r\n        <div className=\"space-y-2\">\r\n          <Label htmlFor=\"description\">Description</Label>\r\n          <Textarea\r\n            id=\"description\"\r\n            name=\"description\"\r\n            value={formData.description}\r\n            onChange={onChange}\r\n            placeholder=\"Tell people what they're signing up for\"\r\n            rows={3}\r\n          />\r\n        </div>\r\n\r\n        <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\r\n          <div className=\"space-y-2\">\r\n            <Label htmlFor=\"websiteUrl\">Website URL</Label>\r\n            <Input\r\n              id=\"websiteUrl\"\r\n              name=\"websiteUrl\"\r\n              type=\"url\"\r\n              value={formData.websiteUrl}\r\n              onChange={onChange}\r\n              placeholder=\"https://yourapp.com\"\r\n              className={errors?.websiteUrl ? 'border-red-500' : ''}\r\n            />\r\n            {errors?.websiteUrl && <p className=\"text-red-500 text-sm\">{errors.websiteUrl}</p>}\r\n          </div>\r\n\r\n          <div className=\"space-y-2\">\r\n            <Label htmlFor=\"redirectUrl\">Thank You Page URL</Label>\r\n            <Input\r\n              id=\"redirectUrl\"\r\n              name=\"redirectUrl\"\r\n              type=\"url\"\r\n              value={formData.redirectUrl}\r\n              onChange={onChange}\r\n              placeholder=\"https://yourapp.com/thank-you\"\r\n              className={errors?.redirectUrl ? 'border-red-500' : ''}\r\n            />\r\n            {errors?.redirectUrl && <p className=\"text-red-500 text-sm\">{errors.redirectUrl}</p>}\r\n          </div>\r\n        </div>\r\n      </CardContent>\r\n    </Card>\r\n  );\r\n}\r\n\r\ninterface CustomFieldsSectionProps {\r\n  formData: FormData;\r\n  newField: Partial<CustomField>;\r\n  setNewField: (field: Partial<CustomField>) => void;\r\n  addCustomField: () => void;\r\n  removeCustomField: (id: string) => void;\r\n  updateCustomField: (id: string, updates: Partial<CustomField>) => void;\r\n  reorderCustomFields: (dragIndex: number, dropIndex: number) => void;\r\n}\r\n\r\n/**\r\n * Renders a custom fields section component.\r\n *\r\n * This component allows users to manage custom fields in forms by adding, removing, and updating them.\r\n * It includes input fields for field name, type, placeholder text, and required status.\r\n * Additionally, it supports reordering of custom fields and handling specific types like 'select' with options.\r\n *\r\n * @param formData - The form data containing custom fields.\r\n * @param newField - The current state of the new custom field being added.\r\n * @param setNewField - A function to update the new custom field state.\r\n * @param addCustomField - A function to add a new custom field to the form data.\r\n * @param removeCustomField - A function to remove a custom field from the form data.\r\n * @param updateCustomField - A function to update an existing custom field in the form data.\r\n * @param reorderCustomFields - A function to reorder custom fields within the form data.\r\n */\r\nfunction CustomFieldsSection({\r\n  formData,\r\n  newField,\r\n  setNewField,\r\n  addCustomField,\r\n  removeCustomField,\r\n  updateCustomField,\r\n  reorderCustomFields,\r\n}: CustomFieldsSectionProps) {\r\n  return (\r\n    <Card>\r\n      <CardHeader>\r\n        <CardTitle>Custom Fields</CardTitle>\r\n        <CardDescription>Collect additional information from your subscribers</CardDescription>\r\n      </CardHeader>\r\n      <CardContent className=\"space-y-4\">\r\n        <div className=\"grid grid-cols-12 gap-3\">\r\n          <div className=\"col-span-4\">\r\n            <Input\r\n              placeholder=\"Field name\"\r\n              value={newField.name || ''}\r\n              onChange={(e) => setNewField({ ...newField, name: e.target.value })}\r\n            />\r\n          </div>\r\n          <div className=\"col-span-3\">\r\n            <select\r\n              className=\"flex h-10 w-full rounded-md border border-input bg-background px-3 py-2 text-sm ring-offset-background file:border-0 file:bg-transparent file:text-sm file:font-medium placeholder:text-muted-foreground focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50\"\r\n              value={newField.type || 'text'}\r\n              onChange={(e) => setNewField({ ...newField, type: e.target.value as FieldType })}\r\n            >\r\n              {FIELD_TYPES.map((type) => (\r\n                <option\r\n                  key={type.value}\r\n                  value={type.value}\r\n                >\r\n                  {type.label}\r\n                </option>\r\n              ))}\r\n            </select>\r\n          </div>\r\n          <div className=\"col-span-3\">\r\n            <Input\r\n              placeholder=\"Placeholder text\"\r\n              value={newField.placeholder || ''}\r\n              onChange={(e) => setNewField({ ...newField, placeholder: e.target.value })}\r\n            />\r\n          </div>\r\n          <div className=\"col-span-1 flex items-center\">\r\n            <input\r\n              type=\"checkbox\"\r\n              id=\"required\"\r\n              className=\"h-4 w-4 rounded border-gray-300 text-primary focus:ring-primary focus:ring-offset-0\"\r\n              checked={newField.required || false}\r\n              onChange={(e) => setNewField({ ...newField, required: e.target.checked })}\r\n            />\r\n          </div>\r\n          <div className=\"col-span-1\">\r\n            <Button\r\n              type=\"button\"\r\n              variant=\"outline\"\r\n              size=\"sm\"\r\n              onClick={addCustomField}\r\n              disabled={!newField.name?.trim()}\r\n              className=\"w-full\"\r\n            >\r\n              <Plus className=\"h-4 w-4\" />\r\n            </Button>\r\n          </div>\r\n        </div>\r\n\r\n        {newField.type === 'select' && (\r\n          <div className=\"space-y-2\">\r\n            <Label>Select Options</Label>\r\n            <Input\r\n              placeholder=\"Enter options separated by commas\"\r\n              value={newField.options?.join(', ') || ''}\r\n              onChange={(e) =>\r\n                setNewField({\r\n                  ...newField,\r\n                  options: e.target.value\r\n                    .split(',')\r\n                    .map((opt) => opt.trim())\r\n                    .filter(Boolean),\r\n                })\r\n              }\r\n            />\r\n          </div>\r\n        )}\r\n\r\n        {formData.customFields.length > 0 && (\r\n          <div className=\"space-y-2\">\r\n            <div className=\"flex items-center justify-between\">\r\n              <h4 className=\"text-sm font-medium\">Custom Fields</h4>\r\n              <Badge variant=\"secondary\">{formData.customFields.length}</Badge>\r\n            </div>\r\n            <div className=\"rounded-md border divide-y\">\r\n              {formData.customFields.map((field, index) => (\r\n                <div\r\n                  key={field.id}\r\n                  className=\"flex items-center justify-between p-3 group\"\r\n                >\r\n                  <div className=\"flex items-center gap-3\">\r\n                    <GripVertical className=\"h-4 w-4 text-gray-400 cursor-move\" />\r\n                    <div>\r\n                      <div className=\"flex items-center gap-2\">\r\n                        <p className=\"font-medium\">{field.name}</p>\r\n                        {field.required && (\r\n                          <Badge\r\n                            variant=\"outline\"\r\n                            className=\"text-xs\"\r\n                          >\r\n                            Required\r\n                          </Badge>\r\n                        )}\r\n                      </div>\r\n                      <p className=\"text-xs text-muted-foreground\">\r\n                        {FIELD_TYPES.find((t) => t.value === field.type)?.label}\r\n                        {field.placeholder && ` • \"${field.placeholder}\"`}\r\n                      </p>\r\n                    </div>\r\n                  </div>\r\n                  <Button\r\n                    type=\"button\"\r\n                    variant=\"ghost\"\r\n                    size=\"sm\"\r\n                    onClick={() => removeCustomField(field.id)}\r\n                    className=\"text-destructive hover:text-destructive opacity-0 group-hover:opacity-100 transition-opacity\"\r\n                  >\r\n                    <Trash2 className=\"h-4 w-4\" />\r\n                  </Button>\r\n                </div>\r\n              ))}\r\n            </div>\r\n          </div>\r\n        )}\r\n      </CardContent>\r\n    </Card>\r\n  );\r\n}\r\n\r\ninterface AppearanceSectionProps {\r\n  formData: FormData;\r\n  setFormData: (data: FormData | ((prev: FormData) => FormData)) => void;\r\n  getBorderRadius: (size: ButtonRounded) => string;\r\n}\r\n\r\n/**\r\n * Renders a section for customizing button appearance and form styling.\r\n */\r\nfunction AppearanceSection({ formData, setFormData, getBorderRadius }: AppearanceSectionProps) {\r\n  return (\r\n    <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-6\">\r\n      <div className=\"space-y-6\">\r\n        <Card>\r\n          <CardHeader>\r\n            <CardTitle>Button Appearance</CardTitle>\r\n            <CardDescription>Customize your call-to-action button</CardDescription>\r\n          </CardHeader>\r\n          <CardContent className=\"space-y-4\">\r\n            <div className=\"space-y-2\">\r\n              <Label>Button Text</Label>\r\n              <Input\r\n                value={formData.style.buttonText}\r\n                onChange={(e) =>\r\n                  setFormData((prev) => ({\r\n                    ...prev,\r\n                    style: { ...prev.style, buttonText: e.target.value },\r\n                  }))\r\n                }\r\n                placeholder=\"e.g., Join Waitlist\"\r\n              />\r\n            </div>\r\n\r\n            <div className=\"space-y-2\">\r\n              <Label>Button Style</Label>\r\n              <select\r\n                className=\"flex h-10 w-full rounded-md border border-input bg-background px-3 py-2 text-sm\"\r\n                value={formData.style.buttonVariant}\r\n                onChange={(e) =>\r\n                  setFormData((prev) => ({\r\n                    ...prev,\r\n                    style: { ...prev.style, buttonVariant: e.target.value as ButtonVariant },\r\n                  }))\r\n                }\r\n              >\r\n                {BUTTON_VARIANTS.map((variant) => (\r\n                  <option\r\n                    key={variant.value}\r\n                    value={variant.value}\r\n                  >\r\n                    {variant.label}\r\n                  </option>\r\n                ))}\r\n              </select>\r\n            </div>\r\n\r\n            <div className=\"space-y-2\">\r\n              <Label>Button Color</Label>\r\n              <div className=\"flex items-center gap-2\">\r\n                <input\r\n                  type=\"color\"\r\n                  value={formData.style.buttonColor}\r\n                  onChange={(e) =>\r\n                    setFormData((prev) => ({\r\n                      ...prev,\r\n                      style: { ...prev.style, buttonColor: e.target.value },\r\n                    }))\r\n                  }\r\n                  className=\"h-10 w-16 cursor-pointer rounded border\"\r\n                />\r\n                <Input\r\n                  value={formData.style.buttonColor}\r\n                  onChange={(e) =>\r\n                    setFormData((prev) => ({\r\n                      ...prev,\r\n                      style: { ...prev.style, buttonColor: e.target.value },\r\n                    }))\r\n                  }\r\n                  className=\"w-32\"\r\n                />\r\n              </div>\r\n            </div>\r\n\r\n            <div className=\"space-y-2\">\r\n              <Label>Button Text Color</Label>\r\n              <div className=\"flex items-center gap-2\">\r\n                <input\r\n                  type=\"color\"\r\n                  value={formData.style.buttonTextColor}\r\n                  onChange={(e) =>\r\n                    setFormData((prev) => ({\r\n                      ...prev,\r\n                      style: { ...prev.style, buttonTextColor: e.target.value },\r\n                    }))\r\n                  }\r\n                  className=\"h-10 w-16 cursor-pointer rounded border\"\r\n                />\r\n                <Input\r\n                  value={formData.style.buttonTextColor}\r\n                  onChange={(e) =>\r\n                    setFormData((prev) => ({\r\n                      ...prev,\r\n                      style: { ...prev.style, buttonTextColor: e.target.value },\r\n                    }))\r\n                  }\r\n                  className=\"w-32\"\r\n                />\r\n              </div>\r\n            </div>\r\n\r\n            <div className=\"space-y-2\">\r\n              <Label>Button Corners</Label>\r\n              <select\r\n                className=\"flex h-10 w-full rounded-md border border-input bg-background px-3 py-2 text-sm\"\r\n                value={formData.style.buttonRounded}\r\n                onChange={(e) =>\r\n                  setFormData((prev) => ({\r\n                    ...prev,\r\n                    style: { ...prev.style, buttonRounded: e.target.value as ButtonRounded },\r\n                  }))\r\n                }\r\n              >\r\n                {BORDER_RADIUS.map((radius) => (\r\n                  <option\r\n                    key={radius.value}\r\n                    value={radius.value}\r\n                  >\r\n                    {radius.label}\r\n                  </option>\r\n                ))}\r\n              </select>\r\n            </div>\r\n          </CardContent>\r\n        </Card>\r\n\r\n        <Card>\r\n          <CardHeader>\r\n            <CardTitle>Colors & Layout</CardTitle>\r\n            <CardDescription>Set colors and form layout</CardDescription>\r\n          </CardHeader>\r\n          <CardContent className=\"space-y-4\">\r\n            <div className=\"space-y-2\">\r\n              <Label>Primary Color</Label>\r\n              <div className=\"flex items-center gap-2\">\r\n                <input\r\n                  type=\"color\"\r\n                  value={formData.style.primaryColor}\r\n                  onChange={(e) =>\r\n                    setFormData((prev) => ({\r\n                      ...prev,\r\n                      style: { ...prev.style, primaryColor: e.target.value },\r\n                    }))\r\n                  }\r\n                  className=\"h-10 w-16 cursor-pointer rounded border\"\r\n                />\r\n                <Input\r\n                  value={formData.style.primaryColor}\r\n                  onChange={(e) =>\r\n                    setFormData((prev) => ({\r\n                      ...prev,\r\n                      style: { ...prev.style, primaryColor: e.target.value },\r\n                    }))\r\n                  }\r\n                  className=\"w-32\"\r\n                />\r\n              </div>\r\n            </div>\r\n\r\n            <div className=\"space-y-2\">\r\n              <Label>Form Layout</Label>\r\n              <div className=\"flex gap-4\">\r\n                <label className=\"flex items-center gap-2\">\r\n                  <input\r\n                    type=\"radio\"\r\n                    value=\"stacked\"\r\n                    checked={formData.style.formLayout === 'stacked'}\r\n                    onChange={() =>\r\n                      setFormData((prev) => ({\r\n                        ...prev,\r\n                        style: { ...prev.style, formLayout: 'stacked' },\r\n                      }))\r\n                    }\r\n                    className=\"h-4 w-4 text-primary focus:ring-primary\"\r\n                  />\r\n                  Stacked\r\n                </label>\r\n                <label className=\"flex items-center gap-2\">\r\n                  <input\r\n                    type=\"radio\"\r\n                    value=\"inline\"\r\n                    checked={formData.style.formLayout === 'inline'}\r\n                    onChange={() =>\r\n                      setFormData((prev) => ({\r\n                        ...prev,\r\n                        style: { ...prev.style, formLayout: 'inline' },\r\n                      }))\r\n                    }\r\n                    className=\"h-4 w-4 text-primary focus:ring-primary\"\r\n                  />\r\n                  Inline\r\n                </label>\r\n              </div>\r\n            </div>\r\n\r\n            <div className=\"space-y-4\">\r\n              <div className=\"flex items-center gap-2\">\r\n                <input\r\n                  type=\"checkbox\"\r\n                  id=\"showLabels\"\r\n                  checked={formData.style.showLabels}\r\n                  onChange={(e) =>\r\n                    setFormData((prev) => ({\r\n                      ...prev,\r\n                      style: { ...prev.style, showLabels: e.target.checked },\r\n                    }))\r\n                  }\r\n                  className=\"h-4 w-4 rounded border-gray-300 text-primary focus:ring-primary\"\r\n                />\r\n                <label\r\n                  htmlFor=\"showLabels\"\r\n                  className=\"text-sm font-medium\"\r\n                >\r\n                  Show field labels\r\n                </label>\r\n              </div>\r\n\r\n              <div className=\"flex items-center gap-2\">\r\n                <input\r\n                  type=\"checkbox\"\r\n                  id=\"showBranding\"\r\n                  checked={formData.showBranding}\r\n                  onChange={(e) =>\r\n                    setFormData((prev) => ({\r\n                      ...prev,\r\n                      showBranding: e.target.checked,\r\n                    }))\r\n                  }\r\n                  className=\"h-4 w-4 rounded border-gray-300 text-primary focus:ring-primary\"\r\n                />\r\n                <label\r\n                  htmlFor=\"showBranding\"\r\n                  className=\"text-sm font-medium\"\r\n                >\r\n                  Show \"Powered by WaitlistNow\"\r\n                </label>\r\n                {!formData.showBranding && (\r\n                  <span className=\"ml-2 text-xs bg-yellow-100 text-yellow-800 px-2 py-0.5 rounded\">\r\n                    Pro Feature\r\n                  </span>\r\n                )}\r\n              </div>\r\n\r\n              {/* TODO: Add upgrade modal for branding removal */}\r\n              {/* <button \r\n                type=\"button\" \r\n                className=\"text-xs text-blue-600 hover:underline mt-1 ml-6\"\r\n                onClick={() => {\r\n                  // TODO: Open upgrade modal\r\n                  console.log('Open upgrade modal');\r\n                }}\r\n              >\r\n                Upgrade to remove branding\r\n              </button> */}\r\n            </div>\r\n          </CardContent>\r\n        </Card>\r\n      </div>\r\n\r\n      <div>\r\n        <WaitlistPreview formData={formData} />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\ninterface BehaviorSectionProps {\r\n  formData: FormData;\r\n  setFormData: (data: FormData | ((prev: FormData) => FormData)) => void;\r\n  errors: Record<string, string>;\r\n  embedCode: string;\r\n  copyEmbedCode: () => void;\r\n  showBranding?: boolean;\r\n}\r\n\r\n/**\r\n * Renders a behavior section component for configuring waitlist settings.\r\n *\r\n * This component provides UI elements to configure confirmation messages, advanced settings,\r\n * integration options, and direct links. It uses React state management to handle form data\r\n * updates and conditional rendering based on user selections. The component also includes\r\n * buttons for copying embed codes and a preview section for embedding the waitlist form.\r\n *\r\n * @param formData - The current form data containing configuration values.\r\n * @param setFormData - A function to update the form data.\r\n * @param errors - An object containing validation errors for form fields.\r\n * @param embedCode - The code snippet or iframe URL for embedding the waitlist.\r\n * @param copyEmbedCode - A function to handle copying the embed code to clipboard.\r\n * @param showBranding - A boolean indicating whether branding should be shown (default is true).\r\n */\r\nfunction BehaviorSection({\r\n  formData,\r\n  setFormData,\r\n  errors,\r\n  embedCode,\r\n  copyEmbedCode,\r\n  showBranding = true,\r\n}: BehaviorSectionProps) {\r\n  const [embedType, setEmbedType] = useState<'js' | 'iframe'>('js');\r\n  const [showConfirmation, setShowConfirmation] = useState(false);\r\n  const [isTesting, setIsTesting] = useState(false);\r\n\r\n  const handleTestConfirmation = () => {\r\n    setIsTesting(true);\r\n    setShowConfirmation(true);\r\n  };\r\n\r\n  const handleCloseTest = () => {\r\n    setShowConfirmation(false);\r\n    // Small delay to allow the modal to close before resetting the testing state\r\n    setTimeout(() => setIsTesting(false), 300);\r\n  };\r\n\r\n  const handleRedirect = () => {\r\n    if (formData.confirmationType === 'redirect' && formData.redirectUrl) {\r\n      window.open(formData.redirectUrl, '_blank');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"space-y-6\">\r\n      <Card>\r\n        <CardHeader>\r\n          <CardTitle>Confirmation Settings</CardTitle>\r\n          <CardDescription>What happens after someone joins</CardDescription>\r\n        </CardHeader>\r\n        <CardContent className=\"space-y-4\">\r\n          <div className=\"space-y-4\">\r\n            <div className=\"space-y-2\">\r\n              <div className=\"flex items-center gap-2\">\r\n                <input\r\n                  type=\"radio\"\r\n                  id=\"confirmationMessage\"\r\n                  name=\"confirmationType\"\r\n                  value=\"message\"\r\n                  checked={formData.confirmationType === 'message'}\r\n                  onChange={() =>\r\n                    setFormData((prev) => ({\r\n                      ...prev,\r\n                      confirmationType: 'message',\r\n                    }))\r\n                  }\r\n                  className=\"h-4 w-4 text-primary focus:ring-primary\"\r\n                />\r\n                <label\r\n                  htmlFor=\"confirmationMessage\"\r\n                  className=\"text-sm font-medium\"\r\n                >\r\n                  Show confirmation message\r\n                </label>\r\n              </div>\r\n\r\n              {formData.confirmationType === 'message' && (\r\n                <div className=\"ml-6 space-y-2\">\r\n                  <Textarea\r\n                    value={formData.confirmationMessage}\r\n                    onChange={(e) =>\r\n                      setFormData((prev) => ({\r\n                        ...prev,\r\n                        confirmationMessage: e.target.value,\r\n                      }))\r\n                    }\r\n                    rows={3}\r\n                    placeholder=\"Thanks for joining! We'll be in touch soon.\"\r\n                    className=\"w-full\"\r\n                  />\r\n                  <p className=\"text-xs text-gray-500\">\r\n                    This message will be shown after form submission\r\n                  </p>\r\n                </div>\r\n              )}\r\n            </div>\r\n\r\n            <div className=\"space-y-2\">\r\n              <div className=\"flex items-center gap-2\">\r\n                <input\r\n                  type=\"radio\"\r\n                  id=\"confirmationRedirect\"\r\n                  name=\"confirmationType\"\r\n                  value=\"redirect\"\r\n                  checked={formData.confirmationType === 'redirect'}\r\n                  onChange={() =>\r\n                    setFormData((prev) => ({\r\n                      ...prev,\r\n                      confirmationType: 'redirect',\r\n                    }))\r\n                  }\r\n                  className=\"h-4 w-4 text-primary focus:ring-primary\"\r\n                />\r\n                <label\r\n                  htmlFor=\"confirmationRedirect\"\r\n                  className=\"text-sm font-medium\"\r\n                >\r\n                  Redirect to URL\r\n                </label>\r\n              </div>\r\n\r\n              {formData.confirmationType === 'redirect' && (\r\n                <div className=\"ml-6 space-y-2\">\r\n                  <input\r\n                    type=\"url\"\r\n                    value={formData.redirectUrl || ''}\r\n                    onChange={(e) =>\r\n                      setFormData((prev) => ({\r\n                        ...prev,\r\n                        redirectUrl: e.target.value,\r\n                      }))\r\n                    }\r\n                    placeholder=\"https://example.com/thank-you\"\r\n                    className=\"w-full px-3 py-2 border rounded-md focus:outline-none focus:ring-2 focus:ring-primary focus:border-transparent\"\r\n                  />\r\n                  <p className=\"text-xs text-gray-500\">\r\n                    Users will be redirected to this URL after submission\r\n                  </p>\r\n                </div>\r\n              )}\r\n            </div>\r\n\r\n            <div className=\"pt-2\">\r\n              <button\r\n                type=\"button\"\r\n                onClick={handleTestConfirmation}\r\n                className=\"text-sm text-primary hover:underline flex items-center gap-1\"\r\n              >\r\n                <span>Test confirmation</span>\r\n                <ExternalLink className=\"w-3.5 h-3.5\" />\r\n              </button>\r\n\r\n              {/* Confirmation Preview Modal */}\r\n              <Dialog\r\n                open={showConfirmation}\r\n                onOpenChange={handleCloseTest}\r\n              >\r\n                <DialogContent className=\"sm:max-w-md\">\r\n                  <DialogHeader>\r\n                    <DialogTitle className=\"text-xl font-semibold\">\r\n                      {formData.confirmationType === 'message'\r\n                        ? 'Confirmation Message Preview'\r\n                        : 'Redirect Confirmation'}\r\n                    </DialogTitle>\r\n                    <DialogDescription>\r\n                      {formData.confirmationType === 'message'\r\n                        ? 'This is how your confirmation message will appear to users.'\r\n                        : 'Users will be redirected to the following URL after submission:'}\r\n                    </DialogDescription>\r\n                  </DialogHeader>\r\n\r\n                  <div className=\"py-4\">\r\n                    {formData.confirmationType === 'message' ? (\r\n                      <div className=\"space-y-4\">\r\n                        <div className=\"bg-green-50 p-4 rounded-lg border border-green-100\">\r\n                          <div className=\"flex items-start\">\r\n                            <CheckCircle className=\"h-5 w-5 text-green-500 mt-0.5 mr-2 flex-shrink-0\" />\r\n                            <div>\r\n                              <h4 className=\"text-green-800 font-medium\">Success!</h4>\r\n                              <p className=\"text-green-700 mt-1\">\r\n                                {formData.confirmationMessage || 'Your submission was successful.'}\r\n                              </p>\r\n                            </div>\r\n                          </div>\r\n                        </div>\r\n                        <div className=\"text-sm text-gray-500\">\r\n                          <p>\r\n                            This is a preview of your confirmation message. Users will see this\r\n                            after submitting the form.\r\n                          </p>\r\n                        </div>\r\n                      </div>\r\n                    ) : (\r\n                      <div className=\"space-y-4\">\r\n                        <div className=\"p-4 bg-blue-50 rounded-lg border border-blue-100\">\r\n                          <p className=\"text-blue-800 break-all\">\r\n                            {formData.redirectUrl || 'No redirect URL provided'}\r\n                          </p>\r\n                          {formData.redirectUrl && !isValidUrl(formData.redirectUrl) && (\r\n                            <p className=\"text-red-500 text-sm mt-2\">\r\n                              Warning: This does not appear to be a valid URL\r\n                            </p>\r\n                          )}\r\n                        </div>\r\n                        <div className=\"text-sm text-gray-500\">\r\n                          <p>\r\n                            Users will be automatically redirected to this URL after submission.\r\n                          </p>\r\n                          {formData.redirectUrl && isValidUrl(formData.redirectUrl) && (\r\n                            <button\r\n                              onClick={handleRedirect}\r\n                              className=\"mt-2 inline-flex items-center text-blue-600 hover:underline text-sm\"\r\n                            >\r\n                              Test redirect <ExternalLink className=\"w-3.5 h-3.5 ml-1\" />\r\n                            </button>\r\n                          )}\r\n                        </div>\r\n                      </div>\r\n                    )}\r\n                  </div>\r\n\r\n                  <div className=\"flex justify-end pt-2\">\r\n                    <Button\r\n                      onClick={handleCloseTest}\r\n                      variant=\"outline\"\r\n                      className=\"mr-2\"\r\n                    >\r\n                      Close\r\n                    </Button>\r\n                    {formData.confirmationType === 'redirect' &&\r\n                      formData.redirectUrl &&\r\n                      isValidUrl(formData.redirectUrl) && (\r\n                        <Button\r\n                          onClick={handleRedirect}\r\n                          className=\"bg-blue-600 hover:bg-blue-700\"\r\n                        >\r\n                          Open URL\r\n                        </Button>\r\n                      )}\r\n                  </div>\r\n                </DialogContent>\r\n              </Dialog>\r\n            </div>\r\n          </div>\r\n        </CardContent>\r\n      </Card>\r\n\r\n      <Card>\r\n        <CardHeader>\r\n          <div className=\"flex items-center gap-2\">\r\n            <CardTitle>Advanced Settings</CardTitle>\r\n            <button\r\n              type=\"button\"\r\n              className=\"text-gray-400 hover:text-gray-600\"\r\n              onClick={() => {\r\n                // TODO: Show help tooltip\r\n                // console.log('Show advanced settings help');\r\n              }}\r\n              aria-label=\"Help\"\r\n            >\r\n              <svg\r\n                xmlns=\"http://www.w3.org/2000/svg\"\r\n                className=\"h-4 w-4\"\r\n                viewBox=\"0 0 20 20\"\r\n                fill=\"currentColor\"\r\n              >\r\n                <path\r\n                  fillRule=\"evenodd\"\r\n                  d=\"M18 10a8 8 0 11-16 0 8 8 0 0116 0zm-8-3a1 1 0 00-.867.5 1 1 0 11-1.731-1A3 3 0 0113 8a3.001 3.001 0 01-2 2.83V11a1 1 0 11-2 0v-1a1 1 0 011-1 1 1 0 100-2zm0 8a1 1 0 100-2 1 1 0 000 2z\"\r\n                  clipRule=\"evenodd\"\r\n                />\r\n              </svg>\r\n            </button>\r\n          </div>\r\n          <CardDescription>Additional options for your waitlist</CardDescription>\r\n        </CardHeader>\r\n        <CardContent className=\"space-y-6\">\r\n          <div className=\"space-y-4\">\r\n            <h3 className=\"text-sm font-medium\">Signup Settings</h3>\r\n            <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\r\n              <div className=\"flex items-start gap-3\">\r\n                <div className=\"flex items-center h-5 mt-0.5\">\r\n                  <input\r\n                    type=\"checkbox\"\r\n                    id=\"enableNotifications\"\r\n                    checked={formData.enableNotifications}\r\n                    onChange={(e) =>\r\n                      setFormData((prev) => ({\r\n                        ...prev,\r\n                        enableNotifications: e.target.checked,\r\n                      }))\r\n                    }\r\n                    className=\"h-4 w-4 rounded border-gray-300 text-primary focus:ring-primary\"\r\n                  />\r\n                </div>\r\n                <div>\r\n                  <label\r\n                    htmlFor=\"enableNotifications\"\r\n                    className=\"text-sm font-medium\"\r\n                  >\r\n                    Email notifications\r\n                  </label>\r\n                  <p className=\"text-xs text-gray-500 mt-0.5\">\r\n                    Get notified when someone joins the waitlist\r\n                  </p>\r\n                </div>\r\n              </div>\r\n\r\n              <div className=\"flex items-start gap-3\">\r\n                <div className=\"flex items-center h-5 mt-0.5\">\r\n                  <input\r\n                    type=\"checkbox\"\r\n                    id=\"requireEmailVerification\"\r\n                    checked={formData.requireEmailVerification}\r\n                    onChange={(e) =>\r\n                      setFormData((prev) => ({\r\n                        ...prev,\r\n                        requireEmailVerification: e.target.checked,\r\n                      }))\r\n                    }\r\n                    className=\"h-4 w-4 rounded border-gray-300 text-primary focus:ring-primary\"\r\n                  />\r\n                </div>\r\n                <div>\r\n                  <label\r\n                    htmlFor=\"requireEmailVerification\"\r\n                    className=\"text-sm font-medium\"\r\n                  >\r\n                    Email verification\r\n                  </label>\r\n                  <p className=\"text-xs text-gray-500 mt-0.5\">\r\n                    Require users to verify their email address\r\n                  </p>\r\n                </div>\r\n              </div>\r\n\r\n              <div className=\"flex items-start gap-3\">\r\n                <div className=\"flex items-center h-5 mt-0.5\">\r\n                  <input\r\n                    type=\"checkbox\"\r\n                    id=\"allowDuplicates\"\r\n                    checked={formData.settings.allowDuplicates}\r\n                    onChange={(e) =>\r\n                      setFormData((prev) => ({\r\n                        ...prev,\r\n                        settings: {\r\n                          ...prev.settings,\r\n                          allowDuplicates: e.target.checked,\r\n                        },\r\n                      }))\r\n                    }\r\n                    className=\"h-4 w-4 rounded border-gray-300 text-primary focus:ring-primary\"\r\n                  />\r\n                </div>\r\n                <div>\r\n                  <label\r\n                    htmlFor=\"allowDuplicates\"\r\n                    className=\"text-sm font-medium\"\r\n                  >\r\n                    Allow duplicate emails\r\n                  </label>\r\n                  <p className=\"text-xs text-gray-500 mt-0.5\">\r\n                    Let the same email sign up multiple times\r\n                  </p>\r\n                </div>\r\n              </div>\r\n\r\n              <div className=\"flex items-start gap-3\">\r\n                <div className=\"flex items-center h-5 mt-0.5\">\r\n                  <input\r\n                    type=\"checkbox\"\r\n                    id=\"enableReferrals\"\r\n                    checked={formData.enableReferrals}\r\n                    onChange={(e) =>\r\n                      setFormData((prev) => ({\r\n                        ...prev,\r\n                        enableReferrals: e.target.checked,\r\n                      }))\r\n                    }\r\n                    className=\"h-4 w-4 rounded border-gray-300 text-primary focus:ring-primary\"\r\n                  />\r\n                </div>\r\n                <div>\r\n                  <label\r\n                    htmlFor=\"enableReferrals\"\r\n                    className=\"text-sm font-medium\"\r\n                  >\r\n                    Enable referrals\r\n                  </label>\r\n                  <p className=\"text-xs text-gray-500 mt-0.5\">\r\n                    Let users refer friends to move up the list\r\n                  </p>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"space-y-4\">\r\n            <div className=\"space-y-2\">\r\n              <div className=\"flex items-center gap-2\">\r\n                <Label htmlFor=\"maxSignups\">Maximum Signups</Label>\r\n                <span className=\"text-xs text-gray-500\">(optional)</span>\r\n              </div>\r\n              <div className=\"relative\">\r\n                <Input\r\n                  id=\"maxSignups\"\r\n                  type=\"number\"\r\n                  min=\"1\"\r\n                  value={formData.maxSignups || ''}\r\n                  onChange={(e) => {\r\n                    const value = e.target.value ? Math.max(1, Number(e.target.value)) : undefined;\r\n                    setFormData((prev) => ({\r\n                      ...prev,\r\n                      maxSignups: value,\r\n                    }));\r\n                  }}\r\n                  placeholder=\"Leave empty for unlimited\"\r\n                  className={`pr-16 ${errors?.maxSignups ? 'border-red-500' : ''}`}\r\n                />\r\n                {formData.maxSignups && (\r\n                  <div className=\"absolute inset-y-0 right-0 flex items-center pr-3 text-xs text-gray-500\">\r\n                    {formData.maxSignups.toLocaleString()}{' '}\r\n                    {formData.maxSignups === 1 ? 'signup' : 'signups'}\r\n                  </div>\r\n                )}\r\n              </div>\r\n              {errors?.maxSignups ? (\r\n                <p className=\"text-red-500 text-sm\">{errors.maxSignups}</p>\r\n              ) : (\r\n                <p className=\"text-xs text-gray-500\">\r\n                  Set a limit on total signups. Leave empty for no limit.\r\n                </p>\r\n              )}\r\n            </div>\r\n\r\n            {formData.enableReferrals && (\r\n              <div className=\"space-y-2\">\r\n                <div className=\"flex items-center gap-2\">\r\n                  <Label htmlFor=\"referralReward\">Referral Reward</Label>\r\n                  <span className=\"text-xs px-2 py-0.5 bg-blue-50 text-blue-700 rounded-full\">\r\n                    Beta\r\n                  </span>\r\n                </div>\r\n                <Input\r\n                  id=\"referralReward\"\r\n                  value={formData.referralReward || ''}\r\n                  onChange={(e) =>\r\n                    setFormData((prev) => ({\r\n                      ...prev,\r\n                      referralReward: e.target.value,\r\n                    }))\r\n                  }\r\n                  placeholder=\"e.g., Get 1 month free, Earn 100 points, etc.\"\r\n                />\r\n                <p className=\"text-xs text-gray-500\">What will users get for referring others?</p>\r\n              </div>\r\n            )}\r\n          </div>\r\n        </CardContent>\r\n      </Card>\r\n\r\n      <Card>\r\n        <CardHeader>\r\n          <CardTitle>Integration</CardTitle>\r\n          <CardDescription>Add this waitlist to your website</CardDescription>\r\n        </CardHeader>\r\n        <CardContent className=\"space-y-4\">\r\n          <div className=\"space-y-4\">\r\n            <div className=\"flex border-b\">\r\n              <button\r\n                type=\"button\"\r\n                className={`px-4 py-2 text-sm font-medium ${\r\n                  embedType === 'js'\r\n                    ? 'border-b-2 border-primary text-primary'\r\n                    : 'text-muted-foreground hover:text-foreground'\r\n                }`}\r\n                onClick={() => setEmbedType('js')}\r\n              >\r\n                JavaScript Snippet\r\n              </button>\r\n              <button\r\n                type=\"button\"\r\n                className={`px-4 py-2 text-sm font-medium ${\r\n                  embedType === 'iframe'\r\n                    ? 'border-b-2 border-primary text-primary'\r\n                    : 'text-muted-foreground hover:text-foreground'\r\n                }`}\r\n                onClick={() => setEmbedType('iframe')}\r\n              >\r\n                iFrame\r\n              </button>\r\n            </div>\r\n\r\n            <div className=\"space-y-2\">\r\n              <div className=\"flex items-center justify-between\">\r\n                <Label>{embedType === 'js' ? 'JavaScript Embed Code' : 'iFrame Embed Code'}</Label>\r\n                <Button\r\n                  type=\"button\"\r\n                  variant=\"outline\"\r\n                  size=\"sm\"\r\n                  onClick={copyEmbedCode}\r\n                  className=\"flex items-center gap-2\"\r\n                >\r\n                  <Copy className=\"h-4 w-4\" />\r\n                  Copy\r\n                </Button>\r\n              </div>\r\n              <div className=\"relative\">\r\n                <pre className=\"bg-muted p-4 rounded-md text-sm overflow-x-auto whitespace-pre-wrap\">\r\n                  <code>{embedCode}</code>\r\n                </pre>\r\n              </div>\r\n              <p className=\"text-xs text-muted-foreground\">\r\n                {embedType === 'js'\r\n                  ? \"Add this script tag to your website's HTML where you want the waitlist form to appear.\"\r\n                  : \"Add this iframe code to your website's HTML where you want the waitlist form to appear.\"}\r\n              </p>\r\n            </div>\r\n\r\n            <div className=\"p-4 bg-muted/50 rounded-md\">\r\n              <h4 className=\"font-medium mb-2\">Preview</h4>\r\n              <div className=\"border rounded-md p-4 bg-background\">\r\n                {embedType === 'js' ? (\r\n                  <div className=\"aspect-video bg-muted/30 rounded flex flex-col items-center justify-center p-6 text-center\">\r\n                    <div className=\"mx-auto h-12 w-12 bg-muted/50 rounded-full flex items-center justify-center mb-3\">\r\n                      <svg\r\n                        className=\"h-6 w-6 text-muted-foreground\"\r\n                        fill=\"none\"\r\n                        viewBox=\"0 0 24 24\"\r\n                        stroke=\"currentColor\"\r\n                      >\r\n                        <path\r\n                          strokeLinecap=\"round\"\r\n                          strokeLinejoin=\"round\"\r\n                          strokeWidth={2}\r\n                          d=\"M8 16H6a2 2 0 01-2-2V6a2 2 0 012-2h8a2 2 0 012 2v2m-6 12h8a2 2 0 002-2v-8a2 2 0 00-2-2h-8a2 2 0 00-2 2v8a2 2 0 002 2z\"\r\n                        />\r\n                      </svg>\r\n                    </div>\r\n                    <h4 className=\"font-medium mb-1\">JavaScript Embed</h4>\r\n                    <p className=\"text-sm text-muted-foreground max-w-md\">\r\n                      The actual form will be rendered on your website where you place the script\r\n                      tag.\r\n                    </p>\r\n                  </div>\r\n                ) : (\r\n                  <div className=\"aspect-video bg-muted/30 rounded-md border-2 border-dashed flex flex-col items-center justify-center p-6 text-center\">\r\n                    <div className=\"mx-auto h-12 w-12 bg-muted/50 rounded-full flex items-center justify-center mb-3\">\r\n                      <svg\r\n                        className=\"h-6 w-6 text-muted-foreground\"\r\n                        fill=\"none\"\r\n                        viewBox=\"0 0 24 24\"\r\n                        stroke=\"currentColor\"\r\n                      >\r\n                        <path\r\n                          strokeLinecap=\"round\"\r\n                          strokeLinejoin=\"round\"\r\n                          strokeWidth={2}\r\n                          d=\"M8 16H6a2 2 0 01-2-2V6a2 2 0 012-2h8a2 2 0 012 2v2m-6 12h8a2 2 0 002-2v-8a2 2 0 00-2-2h-8a2 2 0 00-2 2v8a2 2 0 002 2z\"\r\n                        />\r\n                      </svg>\r\n                    </div>\r\n                    <h4 className=\"font-medium mb-1\">iFrame Embed</h4>\r\n                    <p className=\"text-sm text-muted-foreground max-w-md mb-3\">\r\n                      The form will be displayed within an iframe on your website.\r\n                    </p>\r\n                    <div className=\"w-full max-w-xs p-2 bg-gray-50 dark:bg-gray-800 rounded text-xs text-left font-mono overflow-x-auto\">\r\n                      {embedCode}\r\n                    </div>\r\n                  </div>\r\n                )}\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"space-y-2\">\r\n            <Label>Direct Link</Label>\r\n            <div className=\"flex items-center gap-2\">\r\n              <Input\r\n                readOnly\r\n                value={'https://yourdomain.com/waitlist/new'}\r\n                className=\"bg-muted\"\r\n              />\r\n              <Button\r\n                type=\"button\"\r\n                variant=\"outline\"\r\n                size=\"sm\"\r\n                onClick={() => navigator.clipboard.writeText('https://yourdomain.com/waitlist/new')}\r\n              >\r\n                <Copy className=\"h-4 w-4\" />\r\n              </Button>\r\n            </div>\r\n            <p className=\"text-xs text-muted-foreground\">\r\n              Share this link directly with your audience.\r\n            </p>\r\n          </div>\r\n        </CardContent>\r\n      </Card>\r\n    </div>\r\n  );\r\n}\r\n\r\ninterface WaitlistPreviewProps {\r\n  formData: FormData;\r\n}\r\n\r\n/**\r\n * Renders a preview of a waitlist form based on the provided formData.\r\n *\r\n * This component dynamically generates a styled and interactive preview of the waitlist form,\r\n * incorporating custom fields, labels, buttons, and additional information such as max signups,\r\n * referrals, and email verification requirements. The form's style is determined by props from\r\n * formData, including background color, text color, font family, padding, border radius, button\r\n * styles, and layout options.\r\n *\r\n * @param {WaitlistPreviewProps} formData - An object containing all necessary data to render the form preview.\r\n */\r\nfunction WaitlistPreview({ formData }: WaitlistPreviewProps) {\r\n  // Helper function to get border radius value based on buttonRounded option\r\n  const getBorderRadius = (size: ButtonRounded = 'md'): string => {\r\n    const radiusMap = {\r\n      none: '0px',\r\n      sm: '0.25rem',\r\n      md: '0.375rem',\r\n      lg: '0.5rem',\r\n      full: '9999px',\r\n    };\r\n    return radiusMap[size] || '0.375rem';\r\n  };\r\n\r\n  // Determine form layout classes\r\n  const formLayoutClass =\r\n    formData.style?.formLayout === 'inline' ? 'flex flex-wrap gap-4 items-end' : 'space-y-4';\r\n\r\n  // Determine if we should show field labels\r\n  const showLabels = formData.style?.showLabels !== false; // Default to true if not specified\r\n  // Set CSS variables for primary color\r\n  const style = {\r\n    '--primary': formData.style?.primaryColor || '#3b82f6',\r\n    '--primary-foreground': formData.style?.buttonTextColor || '#ffffff',\r\n  } as React.CSSProperties;\r\n\r\n  return (\r\n    <div\r\n      className=\"min-h-screen flex items-center justify-center p-6\"\r\n      style={{\r\n        ...style,\r\n        backgroundColor: formData.style?.backgroundColor || '#f3f4f6',\r\n        fontFamily: formData.style?.fontFamily || 'Inter, sans-serif',\r\n      }}\r\n    >\r\n      <div className=\"w-full max-w-md\">\r\n        {/* Browser-style header */}\r\n        <div className=\"bg-gray-200 rounded-t-xl px-4 py-3 flex items-center space-x-3\">\r\n          <div className=\"flex space-x-2\">\r\n            <div className=\"w-3 h-3 bg-red-500 rounded-full\" />\r\n            <div className=\"w-3 h-3 bg-yellow-500 rounded-full\" />\r\n            <div className=\"w-3 h-3 bg-green-500 rounded-full\" />\r\n          </div>\r\n          <div className=\"flex-1 text-center\">\r\n            <span className=\"text-gray-700 text-sm font-normal\">waitlist.yourdomain.com</span>\r\n          </div>\r\n        </div>\r\n\r\n        {/* Main content card */}\r\n        <div\r\n          className=\"rounded-b-xl shadow-lg overflow-hidden transition-colors duration-200\"\r\n          style={{\r\n            backgroundColor: formData.style?.backgroundColor || '#ffffff',\r\n            color: formData.style?.textColor || '#1f2937',\r\n          }}\r\n        >\r\n          <div className=\"px-12 py-16 text-center\">\r\n            <h1\r\n              className=\"text-4xl font-bold mb-6 leading-tight\"\r\n              style={{\r\n                color: formData.style?.textColor || '#111827',\r\n              }}\r\n            >\r\n              {formData.name || 'Join the Waitlist'}\r\n            </h1>\r\n\r\n            {formData.description ? (\r\n              <p\r\n                className=\"text-lg mb-12 leading-relaxed font-normal\"\r\n                style={{\r\n                  color: formData.style?.textColor ? `${formData.style.textColor}CC` : '#4b5563',\r\n                }}\r\n              >\r\n                {formData.description}\r\n              </p>\r\n            ) : (\r\n              <p\r\n                className=\"text-lg mb-12 leading-relaxed font-normal\"\r\n                style={{\r\n                  color: formData.style?.textColor ? `${formData.style.textColor}CC` : '#4b5563',\r\n                }}\r\n              >\r\n                Be the first to know when we launch. Early adopters get exclusive perks!\r\n              </p>\r\n            )}\r\n\r\n            <div className={`mb-8 ${formLayoutClass}`}>\r\n              {/* Email input */}\r\n              <div\r\n                className={\r\n                  formData.style?.formLayout === 'inline' ? 'flex-1 min-w-[200px]' : 'w-full'\r\n                }\r\n              >\r\n                {showLabels && (\r\n                  <label\r\n                    htmlFor=\"email\"\r\n                    className=\"block text-left mb-2 text-sm font-medium\"\r\n                    style={{\r\n                      color: formData.style?.textColor || '#374151',\r\n                    }}\r\n                  >\r\n                    Email Address\r\n                  </label>\r\n                )}\r\n                <div className=\"relative\">\r\n                  <input\r\n                    id=\"email\"\r\n                    type=\"email\"\r\n                    placeholder=\"Enter your email\"\r\n                    className={\r\n                      'w-full px-6 py-4 border rounded-xl text-base transition-all duration-200 focus:outline-none focus:ring-2 placeholder-gray-400 font-normal'\r\n                    }\r\n                    style={\r\n                      {\r\n                        backgroundColor:\r\n                          formData.style?.backgroundColor === formData.style?.textColor\r\n                            ? '#ffffff'\r\n                            : formData.style?.backgroundColor || '#ffffff',\r\n                        color: formData.style?.textColor || '#1f2937',\r\n                        borderColor: formData.style?.primaryColor\r\n                          ? `${formData.style.primaryColor}40`\r\n                          : '#e5e7eb',\r\n                        borderWidth: '1px',\r\n                        borderRadius: formData.style?.buttonRounded\r\n                          ? getBorderRadius(formData.style.buttonRounded as ButtonRounded)\r\n                          : '0.5rem',\r\n                        '--tw-ring-color': formData.style?.primaryColor || '#3b82f6',\r\n                        '--tw-ring-opacity': '0.2',\r\n                        '--tw-ring-offset-shadow':\r\n                          'var(--tw-ring-inset) 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color)',\r\n                        '--tw-ring-shadow':\r\n                          'var(--tw-ring-inset) 0 0 0 calc(2px + var(--tw-ring-offset-width)) var(--tw-ring-color)',\r\n                        '--tw-ring-offset-width': '0px',\r\n                        '--tw-ring-offset-color': '#fff',\r\n                      } as React.CSSProperties\r\n                    }\r\n                  />\r\n                  <div className=\"absolute right-5 top-1/2 transform -translate-y-1/2\">\r\n                    <span className=\"text-xl\">🎯</span>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n\r\n              {/* Custom fields */}\r\n              {formData.customFields.map((field) => (\r\n                <div\r\n                  key={field.id}\r\n                  className={\r\n                    formData.style?.formLayout === 'inline' ? 'flex-1 min-w-[200px]' : 'w-full'\r\n                  }\r\n                >\r\n                  {showLabels && (\r\n                    <label\r\n                      htmlFor={field.id}\r\n                      className=\"block text-left mb-2 text-sm font-medium\"\r\n                      style={{\r\n                        color: formData.style?.textColor || '#374151',\r\n                      }}\r\n                    >\r\n                      {field.name}\r\n                      {field.required && <span className=\"text-red-500 ml-1\">*</span>}\r\n                    </label>\r\n                  )}\r\n                  <input\r\n                    id={field.id}\r\n                    type={field.type === 'email' ? 'email' : 'text'}\r\n                    placeholder={field.placeholder || field.name}\r\n                    className={\r\n                      'w-full px-6 py-4 border text-base transition-all duration-200 focus:outline-none focus:ring-2 placeholder-gray-400 font-normal'\r\n                    }\r\n                    style={\r\n                      {\r\n                        backgroundColor:\r\n                          formData.style?.backgroundColor === formData.style?.textColor\r\n                            ? '#ffffff'\r\n                            : formData.style?.backgroundColor || '#ffffff',\r\n                        color: formData.style?.textColor || '#1f2937',\r\n                        borderColor: formData.style?.primaryColor\r\n                          ? `${formData.style.primaryColor}40`\r\n                          : '#e5e7eb',\r\n                        borderWidth: '1px',\r\n                        borderRadius: formData.style?.buttonRounded\r\n                          ? getBorderRadius(formData.style.buttonRounded as ButtonRounded)\r\n                          : '0.5rem',\r\n                        '--tw-ring-color': formData.style?.primaryColor || '#3b82f6',\r\n                        '--tw-ring-opacity': '0.2',\r\n                        '--tw-ring-offset-shadow':\r\n                          'var(--tw-ring-inset) 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color)',\r\n                        '--tw-ring-shadow':\r\n                          'var(--tw-ring-inset) 0 0 0 calc(2px + var(--tw-ring-offset-width)) var(--tw-ring-color)',\r\n                        '--tw-ring-offset-width': '0px',\r\n                        '--tw-ring-offset-color': formData.style?.backgroundColor || '#ffffff',\r\n                      } as React.CSSProperties\r\n                    }\r\n                  />\r\n                </div>\r\n              ))}\r\n\r\n              {/* Join button */}\r\n              <div\r\n                className={\r\n                  formData.style?.formLayout === 'inline' ? 'flex-1 min-w-[200px]' : 'w-full'\r\n                }\r\n              >\r\n                <button\r\n                  className={cn(\r\n                    'w-full px-8 py-4 text-base font-semibold cursor-pointer transition-all duration-200 transform hover:scale-[1.02] active:scale-[0.98] focus:outline-none focus:ring-2 focus:ring-offset-2',\r\n                    {\r\n                      'bg-[--primary] text-[--primary-foreground] hover:bg-opacity-90':\r\n                        formData.style?.buttonVariant === 'default',\r\n                      'border border-[--primary] text-[--primary] hover:bg-[--primary] hover:bg-opacity-10':\r\n                        formData.style?.buttonVariant === 'outline',\r\n                      'bg-secondary text-secondary-foreground':\r\n                        formData.style?.buttonVariant === 'secondary',\r\n                      'text-[--primary] hover:bg-[--primary] hover:bg-opacity-10':\r\n                        formData.style?.buttonVariant === 'ghost',\r\n                      'text-[--primary] underline-offset-4 hover:underline p-0':\r\n                        formData.style?.buttonVariant === 'link',\r\n                    },\r\n                  )}\r\n                  style={{\r\n                    backgroundColor:\r\n                      formData.style?.buttonVariant === 'default' ||\r\n                      formData.style?.buttonVariant === 'secondary'\r\n                        ? formData.style?.buttonColor\r\n                        : 'transparent',\r\n                    color:\r\n                      formData.style?.buttonVariant === 'default' ||\r\n                      formData.style?.buttonVariant === 'secondary'\r\n                        ? formData.style?.buttonTextColor\r\n                        : formData.style?.buttonColor || formData.style?.primaryColor,\r\n                    borderColor:\r\n                      formData.style?.buttonVariant === 'outline'\r\n                        ? formData.style?.buttonColor\r\n                        : 'transparent',\r\n                    borderRadius: formData.style?.buttonRounded\r\n                      ? getBorderRadius(formData.style.buttonRounded as ButtonRounded)\r\n                      : '0.5rem',\r\n                    fontFamily: formData.style?.fontFamily || 'Inter, sans-serif',\r\n                    borderWidth: formData.style?.buttonVariant === 'outline' ? '1px' : '0',\r\n                    ...(formData.style?.buttonVariant === 'link'\r\n                      ? {\r\n                          padding: 0,\r\n                          height: 'auto',\r\n                          display: 'inline',\r\n                          width: 'auto',\r\n                        }\r\n                      : {}),\r\n                  }}\r\n                >\r\n                  {formData.style?.buttonText || 'Join Waitlist'}\r\n                </button>\r\n              </div>\r\n            </div>\r\n\r\n            <div className=\"space-y-4\">\r\n              <p className=\"text-gray-500 text-base font-normal\">\r\n                Join {formData.maxSignups ? `${formData.maxSignups.toLocaleString()}` : '1,247'}{' '}\r\n                others on the waitlist\r\n              </p>\r\n\r\n              {formData.showBranding && (\r\n                <div className=\"flex items-center justify-center gap-2 text-gray-400 text-sm\">\r\n                  <span>Powered by</span>\r\n                  <span className=\"font-semibold text-gray-600\">WaitlistNow</span>\r\n                </div>\r\n              )}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\nfunction setIsTesting(arg0: boolean) {\r\n  throw new Error('Function not implemented.');\r\n}\r\n\r\nfunction setShowConfirmation(arg0: boolean) {\r\n  throw new Error('Function not implemented.');\r\n}\r\n"]}