{"version":3,"file":"cdn-utils.js","sourceRoot":"","sources":["cdn-utils.ts"],"names":[],"mappings":"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","sourcesContent":["/**\n * Utility functions for working with CDN URLs\n */\n\n/**\n * Get the full URL for a static asset with cache busting\n * @param path Path to the asset (e.g., '/images/logo.png')\n * @returns Full URL to the asset, either from CDN or local\n */\nexport function getStaticAssetUrl(path: string): string {\n  // Remove leading slash if present\n  const cleanPath = path.startsWith('/') ? path.slice(1) : path;\n  \n  // In development or if no CDN is configured, use the local path\n  if (process.env.NODE_ENV !== 'production' || !process.env.NEXT_PUBLIC_CDN_URL) {\n    return `/${cleanPath}`;\n  }\n  \n  // Create URL with cache busting\n  const url = new URL(cleanPath, process.env.NEXT_PUBLIC_CDN_URL);\n  \n  // Add cache busting parameter if available\n  if (process.env.NEXT_PUBLIC_BUILD_ID) {\n    url.searchParams.set('v', process.env.NEXT_PUBLIC_BUILD_ID);\n  }\n  \n  return url.toString();\n}\n\n/**\n * Preload a resource to improve performance\n * @param url URL of the resource to preload\n * @param as Type of resource ('script', 'style', 'font', etc.)\n */\nexport function preloadResource(url: string, as: string): void {\n  if (typeof document === 'undefined') return;\n  \n  const link = document.createElement('link');\n  link.rel = 'preload';\n  link.href = url;\n  link.as = as;\n  \n  // Add crossOrigin attribute for fonts\n  if (as === 'font') {\n    link.crossOrigin = 'anonymous';\n  }\n  \n  document.head.appendChild(link);\n}\n\n/**\n * Preconnect to required origins to improve performance\n * @param urls Array of URLs to preconnect to\n */\nexport function preconnectToOrigins(urls: string[]): void {\n  if (typeof document === 'undefined') return;\n  \n  const origins = new Set(\n    urls\n      .filter(url => url.startsWith('http'))\n      .map(url => {\n        try {\n          const { origin } = new URL(url);\n          return origin;\n        } catch {\n          return null;\n        }\n      })\n      .filter(Boolean) as string[]\n  );\n  \n  origins.forEach(origin => {\n    const link = document.createElement('link');\n    link.rel = 'preconnect';\n    link.href = origin;\n    document.head.appendChild(link);\n  });\n}\n\n/**\n * Preload critical assets for faster page loads\n */\nexport function preloadCriticalAssets(): void {\n  if (typeof document === 'undefined') return;\n  \n  // Preconnect to required origins\n  preconnectToOrigins([\n    process.env.NEXT_PUBLIC_APP_URL || '',\n    process.env.NEXT_PUBLIC_CDN_URL || '',\n    'https://fonts.googleapis.com',\n    'https://fonts.gstatic.com',\n  ]);\n  \n  // Preload critical fonts\n  const criticalFonts = [\n    // Add paths to your critical fonts here\n    '/fonts/inter-var-latin.woff2',\n  ];\n  \n  criticalFonts.forEach(font => {\n    preloadResource(getStaticAssetUrl(font), 'font');\n  });\n}\n"]}