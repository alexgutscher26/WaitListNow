{"version":3,"file":"dynamic-imports.jsx","sourceRoot":"","sources":["dynamic-imports.tsx"],"names":[],"mappings":";AAAA,OAAO,KAAK,EAAE,EAAE,QAAQ,EAAE,IAAI,EAA4C,MAAM,OAAO,CAAC;AACxF,OAAO,EAAE,OAAO,EAAE,MAAM,cAAc,CAAC;AAWvC,IAAM,cAAc,GAAG,cAAM,OAAA,CAC3B,CAAC,GAAG,CAAC,SAAS,CAAC,gDAAgD,CAC7D;IAAA,CAAC,OAAO,CAAC,SAAS,CAAC,sBAAsB,EAC3C;EAAA,EAAE,GAAG,CAAC,CACP,EAJ4B,CAI5B,CAAC;AAEF,IAAM,YAAY,GAAG,UAAC,KAAY,IAAK,OAAA,CACrC,CAAC,GAAG,CAAC,SAAS,CAAC,kBAAkB,CAC/B;IAAA,CAAC,CAAC,CAAC,wBAAwB,EAAE,CAAC,CAC9B;IAAA,CAAC,OAAO,CAAC,GAAG,CAAC,QAAQ,KAAK,aAAa,IAAI,CACzC,CAAC,GAAG,CAAC,SAAS,CAAC,cAAc,CAAC,CAAC,KAAK,CAAC,OAAO,CAAC,EAAE,GAAG,CAAC,CACpD,CACH;EAAA,EAAE,GAAG,CAAC,CACP,EAPsC,CAOtC,CAAC;AAEF;IAA4B,iCAGkB;IAH9C;;QAIE,WAAK,GAAG,EAAE,QAAQ,EAAE,KAAK,EAAE,KAAK,EAAE,IAAI,EAAE,CAAC;;IAY3C,CAAC;IAVQ,sCAAwB,GAA/B,UAAgC,KAAY;QAC1C,OAAO,EAAE,QAAQ,EAAE,IAAI,EAAE,KAAK,OAAA,EAAE,CAAC;IACnC,CAAC;IAED,8BAAM,GAAN;QACE,IAAI,IAAI,CAAC,KAAK,CAAC,QAAQ,IAAI,IAAI,CAAC,KAAK,CAAC,KAAK,EAAE,CAAC;YAC5C,OAAO,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC;QAC/C,CAAC;QACD,OAAO,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC;IAC7B,CAAC;IACH,oBAAC;AAAD,CAAC,AAhBD,CAA4B,KAAK,CAAC,SAAS,GAgB1C;AAED,MAAM,UAAU,aAAa,CAC3B,QAAuC,EACvC,EAA4D;QAA5D,qBAA0D,EAAE,KAAA,EAA1D,OAAO,aAAA,EAAE,aAAoB,EAApB,KAAK,mBAAG,YAAY,KAAA;IAE/B,IAAM,SAAS,GAAG,IAAI,CAAC,QAAQ,CAAC,CAAC;IACjC,IAAM,gBAAgB,GAAG,OAAO,IAAI,cAAc,CAAC;IAEnD,OAAO,SAAS,gBAAgB,CAAC,KAA+B;QAC9D,OAAO,CACL,CAAC,aAAa,CAAC,QAAQ,CAAC,CAAC,KAAK,CAAC,CAC7B;QAAA,CAAC,QAAQ,CAAC,QAAQ,CAAC,CAAC,CAAC,gBAAgB,CAAC,AAAD,EAAG,CAAC,CACvC;UAAA,CAAC,SAAS,CAAC,IAAK,KAAa,CAAC,EAChC;QAAA,EAAE,QAAQ,CACZ;MAAA,EAAE,aAAa,CAAC,CACjB,CAAC;IACJ,CAAC,CAAC;AACJ,CAAC;AAED,iBAAiB;AACjB;;;;;;;;EAQE","sourcesContent":["import React, { Suspense, lazy, ComponentType, ReactNode, ComponentProps } from 'react';\nimport { Loader2 } from 'lucide-react';\n\ninterface DynamicImportOptions {\n  loading?: () => ReactNode;\n  error?: (error: Error) => ReactNode;\n}\n\ntype PropsOf<T> = T extends ComponentType<infer P> ? P : Record<string, unknown>;\n\ntype DynamicComponentProps<T extends ComponentType<unknown>> = ComponentProps<T>;\n\nconst defaultLoading = () => (\n  <div className=\"flex items-center justify-center min-h-[200px]\">\n    <Loader2 className=\"h-8 w-8 animate-spin\" />\n  </div>\n);\n\nconst defaultError = (error: Error) => (\n  <div className=\"text-red-500 p-4\">\n    <p>Failed to load component</p>\n    {process.env.NODE_ENV === 'development' && (\n      <pre className=\"text-xs mt-2\">{error.message}</pre>\n    )}\n  </div>\n);\n\nclass ErrorBoundary extends React.Component<{\n  fallback: (error: Error) => ReactNode;\n  children: ReactNode;\n}, { hasError: boolean; error: Error | null }> {\n  state = { hasError: false, error: null };\n\n  static getDerivedStateFromError(error: Error) {\n    return { hasError: true, error };\n  }\n\n  render() {\n    if (this.state.hasError && this.state.error) {\n      return this.props.fallback(this.state.error);\n    }\n    return this.props.children;\n  }\n}\n\nexport function dynamicImport<T extends ComponentType<unknown>>(\n  importFn: () => Promise<{ default: T }>,\n  { loading, error = defaultError }: DynamicImportOptions = {}\n) {\n  const Component = lazy(importFn);\n  const LoadingComponent = loading || defaultLoading;\n  \n  return function DynamicComponent(props: DynamicComponentProps<T>) {\n    return (\n      <ErrorBoundary fallback={error}>\n        <Suspense fallback={<LoadingComponent />}>\n          <Component {...(props as any)} />\n        </Suspense>\n      </ErrorBoundary>\n    );\n  };\n}\n\n// Example usage:\n/*\nconst HeavyComponent = dynamicImport(\n  () => import('@/components/HeavyComponent'),\n  {\n    loading: () => <div>Loading...</div>,\n    error: (error) => <div>Error loading component: {error.message}</div>\n  }\n);\n*/\n"]}