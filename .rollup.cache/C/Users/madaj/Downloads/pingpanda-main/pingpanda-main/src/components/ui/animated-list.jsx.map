{"version":3,"file":"animated-list.jsx","sourceRoot":"","sources":["animated-list.tsx"],"names":[],"mappings":"AAAA,YAAY,CAAC;;AAEb,OAAO,KAAK,EAAE,EAA2B,SAAS,EAAW,QAAQ,EAAE,MAAM,OAAO,CAAC;AACrF,OAAO,EAAE,eAAe,EAAE,MAAM,EAAE,MAAM,eAAe,CAAC;AAQxD,MAAM,CAAC,IAAM,YAAY,GAAG,KAAK,CAAC,IAAI,CACpC,UAAC,EAAwD;QAAtD,SAAS,eAAA,EAAE,QAAQ,cAAA,EAAE,aAAY,EAAZ,KAAK,mBAAG,IAAI,KAAA;IAC5B,IAAA,KAA0B,QAAQ,CAAc,EAAE,CAAC,EAAlD,QAAQ,QAAA,EAAE,WAAW,QAA6B,CAAC;IAC1D,IAAM,aAAa,GAAG,KAAK,CAAC,QAAQ,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC;IAEvD,SAAS,CAAC;QACR,IAAM,QAAQ,GAAG,WAAW,CAAC;YAC3B,IAAI,QAAQ,CAAC,MAAM,GAAG,aAAa,CAAC,MAAM,EAAE,CAAC;gBAC3C,WAAW,CAAC,UAAC,IAAI,IAAK,sBAAC,aAAa,CAAC,QAAQ,CAAC,MAAM,CAAC,GAAK,IAAI,SAAxC,CAAyC,CAAC,CAAC;YACnE,CAAC;iBAAM,CAAC;gBACN,aAAa,CAAC,QAAQ,CAAC,CAAC;YAC1B,CAAC;QACH,CAAC,EAAE,KAAK,CAAC,CAAC;QAEV,OAAO,cAAM,OAAA,aAAa,CAAC,QAAQ,CAAC,EAAvB,CAAuB,CAAC;IACvC,CAAC,EAAE,CAAC,aAAa,EAAE,KAAK,EAAE,QAAQ,CAAC,MAAM,CAAC,CAAC,CAAC;IAE5C,OAAO,CACL,CAAC,GAAG,CAAC,SAAS,CAAC,CAAC,mDAA4C,SAAS,CAAE,CAAC,CACtE;QAAA,CAAC,eAAe,CACd;UAAA,CAAC,QAAQ,CAAC,GAAG,CAAC,UAAC,IAAI,IAAK,OAAA,CACtB,CAAC,gBAAgB,CAAC,GAAG,CAAC,CAAE,IAAqB,CAAC,GAAG,CAAC,CAAC,CAAC,IAAI,CAAC,EAAE,gBAAgB,CAAC,CAC7E,EAFuB,CAEvB,CAAC,CACJ;QAAA,EAAE,eAAe,CACnB;MAAA,EAAE,GAAG,CAAC,CACP,CAAC;AACJ,CAAC,CACF,CAAC;AAEF,YAAY,CAAC,WAAW,GAAG,cAAc,CAAC;AAE1C;;GAEG;AACH,MAAM,UAAU,gBAAgB,CAAC,EAA2C;QAAzC,QAAQ,cAAA;IACzC,IAAM,UAAU,GAAG;QACjB,OAAO,EAAE,EAAE,KAAK,EAAE,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE;QACjC,OAAO,EAAE,EAAE,KAAK,EAAE,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE;QAC7C,IAAI,EAAE,EAAE,KAAK,EAAE,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE;QAC9B,UAAU,EAAE,EAAE,IAAI,EAAE,QAAQ,EAAE,SAAS,EAAE,GAAG,EAAE,OAAO,EAAE,EAAE,EAAE;KAC5D,CAAC;IAEF,OAAO,CACL,CAAC,MAAM,CAAC,GAAG,CACT,IAAI,UAAU,CAAC,CACf,MAAM,CACN,SAAS,CAAC,gBAAgB,CAE1B;MAAA,CAAC,QAAQ,CACX;IAAA,EAAE,MAAM,CAAC,GAAG,CAAC,CACd,CAAC;AACJ,CAAC","sourcesContent":["'use client';\r\n\r\nimport React, { ReactElement, ReactNode, useEffect, useMemo, useState } from 'react';\r\nimport { AnimatePresence, motion } from 'framer-motion';\r\n\r\nexport interface AnimatedListProps {\r\n  className?: string;\r\n  children: React.ReactNode;\r\n  delay?: number;\r\n}\r\n\r\nexport const AnimatedList = React.memo(\r\n  ({ className, children, delay = 1000 }: AnimatedListProps) => {\r\n    const [messages, setMessages] = useState<ReactNode[]>([]);\r\n    const childrenArray = React.Children.toArray(children);\r\n\r\n    useEffect(() => {\r\n      const interval = setInterval(() => {\r\n        if (messages.length < childrenArray.length) {\r\n          setMessages((prev) => [childrenArray[messages.length], ...prev]);\r\n        } else {\r\n          clearInterval(interval);\r\n        }\r\n      }, delay);\r\n\r\n      return () => clearInterval(interval);\r\n    }, [childrenArray, delay, messages.length]);\r\n\r\n    return (\r\n      <div className={`flex flex-col-reverse items-center gap-4 ${className}`}>\r\n        <AnimatePresence>\r\n          {messages.map((item) => (\r\n            <AnimatedListItem key={(item as ReactElement).key}>{item}</AnimatedListItem>\r\n          ))}\r\n        </AnimatePresence>\r\n      </div>\r\n    );\r\n  },\r\n);\r\n\r\nAnimatedList.displayName = 'AnimatedList';\r\n\r\n/**\r\n * Renders an animated list item using Framer Motion.\r\n */\r\nexport function AnimatedListItem({ children }: { children: React.ReactNode }) {\r\n  const animations = {\r\n    initial: { scale: 0, opacity: 0 },\r\n    animate: { scale: 1, opacity: 1, originY: 0 },\r\n    exit: { scale: 0, opacity: 0 },\r\n    transition: { type: 'spring', stiffness: 350, damping: 40 },\r\n  };\r\n\r\n  return (\r\n    <motion.div\r\n      {...animations}\r\n      layout\r\n      className=\"mx-auto w-full\"\r\n    >\r\n      {children}\r\n    </motion.div>\r\n  );\r\n}\r\n"]}