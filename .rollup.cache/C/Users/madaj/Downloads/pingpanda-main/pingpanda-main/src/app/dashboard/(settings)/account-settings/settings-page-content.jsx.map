{"version":3,"file":"settings-page-content.jsx","sourceRoot":"","sources":["settings-page-content.tsx"],"names":[],"mappings":"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","sourcesContent":["'use client';\r\n\r\nimport React from \"react\";\r\n\r\nimport { useRouter } from 'next/navigation';\r\nimport { Button } from '@/components/ui/button';\r\nimport { Card, CardContent, CardDescription, CardHeader, CardTitle } from '@/components/ui/card';\r\nimport { Input } from '@/components/ui/input';\r\nimport { useToast } from '@/components/ui/use-toast';\r\nimport { Label } from '@/components/ui/label';\r\nimport { Switch } from '@/components/ui/switch';\r\nimport { Badge } from '@/components/ui/badge';\r\nimport {\r\n  Select,\r\n  SelectContent,\r\n  SelectItem,\r\n  SelectTrigger,\r\n  SelectValue,\r\n} from '@/components/ui/select';\r\nimport { Textarea } from '@/components/ui/textarea';\r\nimport { useUser } from '@clerk/nextjs';\r\nimport {\r\n  Mail,\r\n  Bell,\r\n  Lock,\r\n  User,\r\n  CheckCircle2,\r\n  Users,\r\n  TrendingUp,\r\n  Calendar,\r\n  Globe,\r\n  Zap,\r\n  Crown,\r\n  AlertCircle,\r\n  Copy,\r\n  ExternalLink,\r\n  ArrowUp,\r\n  ArrowRight,\r\n  ListChecks,\r\n  Save,\r\n} from 'lucide-react';\r\nimport { useState, useEffect } from 'react';\r\n\r\n/**\r\n * A React component that renders a user's account settings page.\r\n *\r\n * This component includes sections for profile information, notification preferences,\r\n * referral program details, and security settings. Users can update their personal\r\n * details, manage how they receive notifications about their waitlists, share their\r\n * referral link, and enhance the security of their account.\r\n *\r\n * Features include:\r\n * - Editing profile information such as name and email.\r\n * - Toggling various notification types via switches.\r\n * - Copying a referral link for sharing with others.\r\n * - Changing passwords and setting up two-factor authentication.\r\n *\r\n * @returns {JSX.Element} The rendered component displaying the user's account settings page.\r\n */\r\nconst AccountSettingsContent = () => {\r\n  const router = useRouter();\r\n  const { toast } = useToast();\r\n  const { user } = useUser();\r\n\r\n  const [isLoading, setIsLoading] = useState(true);\r\n  const [isSaving, setIsSaving] = useState(false);\r\n\r\n  // Profile form state with proper type and default values\r\n  type FormData = {\r\n    name: string;\r\n    email: string;\r\n    company: string;\r\n    website: string;\r\n    bio: string;\r\n    timezone: string;\r\n  };\r\n\r\n  // Waitlist preferences state\r\n  type WaitlistPreferences = {\r\n    defaultWaitlistLimit: number;\r\n    autoApproveSubscribers: boolean;\r\n    emailNotifications: boolean;\r\n    maxSubscribers: number;\r\n    requireEmailVerification: boolean;\r\n  };\r\n\r\n  const [formData, setFormData] = useState<FormData>({\r\n    name: '',\r\n    email: user?.emailAddresses[0]?.emailAddress || '',\r\n    company: '',\r\n    website: '',\r\n    bio: '',\r\n    timezone: 'UTC',\r\n  });\r\n\r\n  const [waitlistPrefs, setWaitlistPrefs] = useState<WaitlistPreferences>({\r\n    defaultWaitlistLimit: 1,\r\n    autoApproveSubscribers: true,\r\n    emailNotifications: true,\r\n    maxSubscribers: 1000,\r\n    requireEmailVerification: false,\r\n  });\r\n  const [isSavingPrefs, setIsSavingPrefs] = useState(false);\r\n\r\n  const [notifications, setNotifications] = useState({\r\n    email: true,\r\n    waitlistMilestones: true,\r\n    dailyReports: true,\r\n    weeklyDigest: true,\r\n    signupAlerts: false,\r\n    integrationUpdates: true,\r\n    securityAlerts: true,\r\n    marketing: false,\r\n  });\r\n  const [isSavingNotifications, setIsSavingNotifications] = useState(false);\r\n\r\n  const [preferences, setPreferences] = useState({\r\n    defaultView: 'overview',\r\n    autoArchive: false,\r\n    publicProfile: true,\r\n    allowReferrals: true,\r\n  });\r\n\r\n  const [isSaved, setIsSaved] = useState(false);\r\n  // Plan configurations - must match Prisma schema enum values exactly\r\n  const planConfigs = {\r\n    FREE: {\r\n      name: 'Free',\r\n      maxWaitlists: 1,\r\n      maxSignups: 100,\r\n      features: [\r\n        '1 active waitlist',\r\n        '100 signups per month',\r\n        'Basic analytics',\r\n        'Email support',\r\n        'Basic branding',\r\n      ],\r\n      upgradeText: 'Upgrade to Starter for more',\r\n      color: 'gray',\r\n    },\r\n    STARTER: {\r\n      name: 'Starter',\r\n      maxWaitlists: 3,\r\n      maxSignups: 1000,\r\n      features: [\r\n        '3 active waitlists',\r\n        '1,000 signups per month',\r\n        'Basic analytics',\r\n        'Email support',\r\n        'Remove branding',\r\n        'Basic custom domains',\r\n      ],\r\n      upgradeText: 'Upgrade to Growth for more',\r\n      color: 'blue',\r\n    },\r\n    GROWTH: {\r\n      name: 'Growth',\r\n      maxWaitlists: 10,\r\n      maxSignups: 10000,\r\n      features: [\r\n        '10 active waitlists',\r\n        '10,000 signups per month',\r\n        'Advanced analytics',\r\n        'Priority support',\r\n        'Custom domains',\r\n        'API access',\r\n        'Custom branding',\r\n      ],\r\n      upgradeText: 'Upgrade to Pro for unlimited',\r\n      color: 'indigo',\r\n    },\r\n    PRO: {\r\n      name: 'Pro',\r\n      maxWaitlists: 50,\r\n      maxSignups: 50000,\r\n      features: [\r\n        '50 active waitlists',\r\n        '50,000 signups per month',\r\n        'Advanced analytics',\r\n        'Priority 24/7 support',\r\n        'Custom domains',\r\n        'API access',\r\n        'Dedicated account manager',\r\n        'Custom integrations',\r\n        'White-labeling',\r\n        'Priority feature requests',\r\n      ],\r\n      upgradeText: 'You have the best plan!',\r\n      color: 'purple',\r\n    },\r\n  } as const;\r\n\r\n  // Initialize metrics with defaults\r\n  const [metrics, setMetrics] = useState({\r\n    activeWaitlists: 0,\r\n    totalSignups: 0,\r\n    conversionRate: 0,\r\n    plan: 'FREE' as keyof typeof planConfigs,\r\n  });\r\n\r\n  // Get current plan config\r\n  const currentPlan = planConfigs[metrics.plan] || planConfigs.FREE;\r\n  const [lastUpdate, setLastUpdate] = useState(0); // Used to force re-renders\r\n  const [usage, setUsage] = useState({\r\n    waitlistUsage: 0,\r\n    signupUsage: 0,\r\n    storageUsage: 0,\r\n    lastBillingDate: new Date().toISOString().split('T')[0],\r\n    nextBillingDate: new Date(Date.now() + 30 * 24 * 60 * 60 * 1000).toISOString().split('T')[0],\r\n  });\r\n\r\n  // Fetch profile and preferences data on component mount\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      if (!user) return;\r\n\r\n      setIsLoading(true);\r\n\r\n      try {\r\n        // Fetch both profile and preferences in parallel\r\n        const [profileRes, prefsRes] = await Promise.all([\r\n          fetch('/api/account/profile'),\r\n          fetch('/api/account/waitlist-preferences'),\r\n        ]);\r\n\r\n        // Handle profile response\r\n        if (profileRes.ok) {\r\n          const profileData = await profileRes.json();\r\n          setFormData((prev) => ({\r\n            ...prev,\r\n            name: profileData.name || '',\r\n            email: profileData.email || user.emailAddresses[0]?.emailAddress || '',\r\n            company: profileData.company || '',\r\n            website: profileData.website || '',\r\n            bio: profileData.bio || '',\r\n            timezone: profileData.timezone || 'UTC',\r\n          }));\r\n        }\r\n\r\n        // Handle waitlist preferences response\r\n        if (prefsRes.ok) {\r\n          const prefsData = await prefsRes.json();\r\n          setWaitlistPrefs((prev) => ({\r\n            ...prev,\r\n            ...prefsData,\r\n            maxSubscribers: prefsData.maxSubscribers || 1000,\r\n          }));\r\n        }\r\n      } catch (error) {\r\n        console.error('Error loading data:', error);\r\n        toast({\r\n          title: 'Error',\r\n          description: 'Failed to load profile data',\r\n          variant: 'destructive',\r\n        });\r\n      } finally {\r\n        setIsLoading(false);\r\n      }\r\n    };\r\n\r\n    fetchData();\r\n  }, [user, toast]);\r\n\r\n  // Handle form input changes with null check\r\n  const handleChange = (e: React.ChangeEvent<HTMLInputElement | HTMLTextAreaElement>) => {\r\n    const { name, value } = e.target;\r\n    setFormData((prev) => ({\r\n      ...prev,\r\n      [name]: value ?? '', // Ensure value is never null\r\n    }));\r\n  };\r\n\r\n  // Handle timezone select change\r\n  const handleTimezoneChange = (value: string) => {\r\n    setFormData((prev) => ({\r\n      ...prev,\r\n      timezone: value,\r\n    }));\r\n  };\r\n\r\n  // Handle profile form submission\r\n  const handleSubmit = async (e: React.FormEvent) => {\r\n    e.preventDefault();\r\n    setIsSaving(true);\r\n\r\n    try {\r\n      const response = await fetch('/api/account/profile', {\r\n        method: 'PUT',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify(formData),\r\n      });\r\n\r\n      if (!response.ok) {\r\n        throw new Error('Failed to update profile');\r\n      }\r\n\r\n      const data = await response.json();\r\n\r\n      // Update form with potentially sanitized data from server\r\n      setFormData((prev) => ({\r\n        ...prev,\r\n        ...data,\r\n      }));\r\n\r\n      // Show success message\r\n      toast({\r\n        title: 'Success',\r\n        description: 'Your profile has been updated',\r\n      });\r\n\r\n      // Refresh the page to ensure all data is up to date\r\n      router.refresh();\r\n    } catch (error) {\r\n      console.error('Error updating profile:', error);\r\n      toast({\r\n        title: 'Error',\r\n        description: 'Failed to update profile. Please try again.',\r\n        variant: 'destructive',\r\n      });\r\n    } finally {\r\n      setIsSaving(false);\r\n    }\r\n  };\r\n\r\n  // Handle waitlist preferences change\r\n  const handlePrefsChange = (field: keyof WaitlistPreferences, value: any) => {\r\n    setWaitlistPrefs((prev) => ({\r\n      ...prev,\r\n      [field]: value,\r\n    }));\r\n  };\r\n\r\n  // Handle waitlist preferences submission\r\n  const handleSavePrefs = async () => {\r\n    setIsSavingPrefs(true);\r\n\r\n    try {\r\n      const response = await fetch('/api/account/waitlist-preferences', {\r\n        method: 'PUT',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify(waitlistPrefs),\r\n      });\r\n\r\n      if (!response.ok) {\r\n        throw new Error('Failed to update waitlist preferences');\r\n      }\r\n\r\n      const data = await response.json();\r\n\r\n      // Update prefs with potentially sanitized data from server\r\n      setWaitlistPrefs((prev) => ({\r\n        ...prev,\r\n        ...data,\r\n      }));\r\n\r\n      // Show success message\r\n      toast({\r\n        title: 'Success',\r\n        description: 'Your waitlist preferences have been updated',\r\n      });\r\n    } catch (error) {\r\n      console.error('Error updating waitlist preferences:', error);\r\n      toast({\r\n        title: 'Error',\r\n        description: 'Failed to update waitlist preferences. Please try again.',\r\n        variant: 'destructive',\r\n      });\r\n    } finally {\r\n      setIsSavingPrefs(false);\r\n    }\r\n  };\r\n\r\n  // Fetch notification preferences on component mount\r\n  const fetchNotificationPreferences = async () => {\r\n    try {\r\n      setIsLoading(true);\r\n      const response = await fetch('/api/account/notification-preferences', {\r\n        method: 'GET',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n        cache: 'no-store',\r\n      });\r\n\r\n      if (!response.ok) {\r\n        throw new Error(`HTTP error! status: ${response.status}`);\r\n      }\r\n\r\n      const data = await response.json();\r\n      setNotifications((prev) => ({\r\n        ...prev,\r\n        ...data,\r\n      }));\r\n    } catch (error) {\r\n      console.error('Error fetching notification preferences:', error);\r\n      toast({\r\n        title: 'Error',\r\n        description:\r\n          'Failed to load notification preferences. Please refresh the page to try again.',\r\n        variant: 'destructive',\r\n      });\r\n    } finally {\r\n      setIsLoading(false);\r\n    }\r\n  };\r\n\r\n  // Save notification preferences\r\n  const saveNotificationPreferences = async () => {\r\n    if (isSavingNotifications) return;\r\n\r\n    setIsSavingNotifications(true);\r\n    try {\r\n      const response = await fetch('/api/account/notification-preferences', {\r\n        method: 'PUT',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify(notifications),\r\n        cache: 'no-store',\r\n      });\r\n\r\n      if (!response.ok) {\r\n        const errorData = await response.json().catch(() => ({}));\r\n        throw new Error(errorData.error || 'Failed to update notification preferences');\r\n      }\r\n\r\n      const updatedPrefs = await response.json();\r\n\r\n      // Update local state with the server response\r\n      setNotifications(updatedPrefs);\r\n\r\n      toast({\r\n        title: 'Success',\r\n        description: 'Your notification preferences have been updated',\r\n      });\r\n\r\n      return true;\r\n    } catch (error) {\r\n      console.error('Error updating notification preferences:', error);\r\n      toast({\r\n        title: 'Error',\r\n        description:\r\n          error instanceof Error ? error.message : 'Failed to update notification preferences',\r\n        variant: 'destructive',\r\n      });\r\n      return false;\r\n    } finally {\r\n      setIsSavingNotifications(false);\r\n    }\r\n  };\r\n\r\n  // Fetch metrics on component mount and when the plan changes\r\n  useEffect(() => {\r\n    const fetchMetrics = async () => {\r\n      try {\r\n        setIsLoading(true);\r\n        const response = await fetch('/api/account/metrics', {\r\n          cache: 'no-store', // Prevent caching to get fresh data\r\n        });\r\n\r\n        if (response.ok) {\r\n          const data = await response.json();\r\n\r\n          // Ensure we have a valid plan from the server\r\n          const validPlan =\r\n            data.plan && Object.keys(planConfigs).includes(data.plan)\r\n              ? (data.plan as keyof typeof planConfigs)\r\n              : 'FREE';\r\n\r\n          setMetrics({\r\n            activeWaitlists: data.activeWaitlists || 0,\r\n            totalSignups: data.totalSignups || 0,\r\n            conversionRate: data.conversionRate || 0,\r\n            plan: validPlan,\r\n          });\r\n\r\n          // Force a re-render to ensure UI updates with new plan\r\n          setLastUpdate(Date.now());\r\n        } else {\r\n          console.error('Failed to fetch metrics:', response.status);\r\n        }\r\n      } catch (error) {\r\n        console.error('Error fetching metrics:', error);\r\n      } finally {\r\n        setIsLoading(false);\r\n      }\r\n    };\r\n\r\n    fetchMetrics();\r\n    fetchNotificationPreferences();\r\n\r\n    // Refresh metrics every 30 seconds\r\n    const interval = setInterval(fetchMetrics, 30000);\r\n\r\n    return () => clearInterval(interval);\r\n  }, []);\r\n\r\n  // Get the next plan for upgrade\r\n  const getNextPlan = () => {\r\n    const planOrder = ['FREE', 'STARTER', 'GROWTH', 'PRO'] as const;\r\n    const currentIndex = planOrder.indexOf(metrics.plan);\r\n    return currentIndex < planOrder.length - 1 ? planOrder[currentIndex + 1] : null;\r\n  };\r\n\r\n  const nextPlan = getNextPlan();\r\n  const nextPlanConfig = nextPlan ? planConfigs[nextPlan] : null;\r\n\r\n  /**\r\n   * Manages save process with loading and saved state transitions.\r\n   */\r\n  const handleSave = async () => {\r\n    setIsSaving(true);\r\n    // Simulate API call\r\n    await new Promise((resolve) => setTimeout(resolve, 1500));\r\n    setIsSaving(false);\r\n    setIsSaved(true);\r\n    setTimeout(() => setIsSaved(false), 3000);\r\n  };\r\n\r\n  /**\r\n   * Toggles the notification state for a specified key.\r\n   */\r\n  const handleNotificationToggle = async (key: keyof typeof notifications) => {\r\n    // Create the new state\r\n    const newValue = !notifications[key];\r\n    const newNotifications = {\r\n      ...notifications,\r\n      [key]: newValue,\r\n    };\r\n\r\n    // If turning off email, also turn off all email-based notifications\r\n    if (key === 'email' && !newValue) {\r\n      Object.keys(newNotifications).forEach((k) => {\r\n        if (k !== 'email') {\r\n          newNotifications[k as keyof typeof notifications] = false;\r\n        }\r\n      });\r\n    }\r\n\r\n    // Update local state immediately for better UX\r\n    setNotifications(newNotifications);\r\n\r\n    // Save to the server\r\n    try {\r\n      await saveNotificationPreferences();\r\n    } catch (error) {\r\n      // Revert the UI if save fails\r\n      setNotifications((prev) => ({\r\n        ...prev,\r\n        [key]: !newValue, // Revert the toggle\r\n      }));\r\n    }\r\n  };\r\n\r\n  /**\r\n   * Toggles the boolean value of a specified preference key.\r\n   */\r\n  const handlePreferenceToggle = (key: keyof typeof preferences) => {\r\n    setPreferences((prev) => ({\r\n      ...prev,\r\n      [key]: !prev[key],\r\n    }));\r\n  };\r\n\r\n  /**\r\n   * Copies a predefined referral link to the clipboard.\r\n   */\r\n  const copyReferralLink = () => {\r\n    navigator.clipboard.writeText('https://yourwaitlist.com/ref/user123');\r\n  };\r\n\r\n  return (\r\n    <div className=\"space-y-6\">\r\n      {/* Account Overview */}\r\n      <Card className={`border-l-4 border-l-${currentPlan.color}-500`}>\r\n        <CardHeader>\r\n          <div className=\"flex flex-col md:flex-row md:items-center md:justify-between gap-4\">\r\n            <div>\r\n              <CardTitle className=\"flex items-center gap-2\">\r\n                {currentPlan.name} Plan Dashboard\r\n                <Badge\r\n                  className={`ml-2 bg-gradient-to-r from-${currentPlan.color}-600 to-${currentPlan.color === 'gray' ? 'gray' : 'purple'}-600 text-white`}\r\n                >\r\n                  {metrics.plan === 'PRO' && <Crown className=\"w-3 h-3 mr-1\" />}\r\n                  {currentPlan.name.toUpperCase()}\r\n                </Badge>\r\n              </CardTitle>\r\n              <CardDescription className=\"mt-1\">\r\n                {metrics.plan !== 'FREE' ? (\r\n                  <>\r\n                    Next billing date: {usage.nextBillingDate} •\r\n                    <Button\r\n                      variant=\"link\"\r\n                      className=\"h-auto p-0 ml-1 text-indigo-600\"\r\n                    >\r\n                      Manage subscription\r\n                    </Button>\r\n                  </>\r\n                ) : (\r\n                  <span>Start your free trial today!</span>\r\n                )}\r\n              </CardDescription>\r\n            </div>\r\n            <div className=\"flex items-center space-x-2\">\r\n              <Button\r\n                variant=\"outline\"\r\n                size=\"sm\"\r\n                className=\"gap-2\"\r\n              >\r\n                <TrendingUp className=\"h-4 w-4\" />\r\n                Usage Analytics\r\n              </Button>\r\n              {nextPlan && (\r\n                <Button\r\n                  variant=\"default\"\r\n                  size=\"sm\"\r\n                  className=\"gap-2 bg-gradient-to-r from-purple-600 to-pink-600 hover:opacity-90\"\r\n                >\r\n                  <ArrowUp className=\"h-4 w-4\" />\r\n                  Upgrade to {nextPlan}\r\n                </Button>\r\n              )}\r\n            </div>\r\n          </div>\r\n        </CardHeader>\r\n        <CardContent>\r\n          <div className=\"space-y-6\">\r\n            {/* Usage Stats */}\r\n            <div className=\"grid grid-cols-1 md:grid-cols-3 gap-4\">\r\n              <div\r\n                className={`flex items-center gap-3 p-4 bg-gradient-to-br from-${currentPlan.color}-50 to-white rounded-lg border border-${currentPlan.color}-100`}\r\n              >\r\n                <div className={`p-2 bg-${currentPlan.color}-100 rounded-lg`}>\r\n                  <Users className={`h-6 w-6 text-${currentPlan.color}-600`} />\r\n                </div>\r\n                <div className=\"flex-1\">\r\n                  <div className=\"flex justify-between items-start\">\r\n                    <p className=\"text-sm font-medium text-gray-700\">Active Waitlists</p>\r\n                    <span\r\n                      className={`text-xs bg-${currentPlan.color}-100 text-${currentPlan.color}-800 px-2 py-0.5 rounded-full`}\r\n                    >\r\n                      {(metrics.activeWaitlists || 0).toLocaleString()} /{' '}\r\n                      {currentPlan.maxWaitlists.toLocaleString()}\r\n                    </span>\r\n                  </div>\r\n                  <div className=\"mt-1\">\r\n                    <div className=\"w-full bg-gray-200 rounded-full h-2\">\r\n                      <div\r\n                        className={`bg-${currentPlan.color}-600 h-2 rounded-full`}\r\n                        style={{\r\n                          width: `${Math.min(\r\n                            100,\r\n                            (Number(metrics.activeWaitlists || 0) / currentPlan.maxWaitlists) * 100,\r\n                          )}%`,\r\n                        }}\r\n                      />\r\n                    </div>\r\n                  </div>\r\n                  <p className=\"text-xs text-gray-500 mt-1\">\r\n                    {Math.max(0, currentPlan.maxWaitlists - Number(metrics.activeWaitlists || 0))}{' '}\r\n                    waitlists remaining\r\n                    {metrics.plan !== 'PRO' && nextPlan && (\r\n                      <Button\r\n                        variant=\"link\"\r\n                        className=\"h-auto p-0 ml-1 text-blue-600 text-xs\"\r\n                      >\r\n                        ({currentPlan.upgradeText})\r\n                      </Button>\r\n                    )}\r\n                  </p>\r\n                </div>\r\n              </div>\r\n\r\n              <div\r\n                className={\r\n                  'flex items-center gap-3 p-4 bg-gradient-to-br from-green-50 to-white rounded-lg border border-green-100'\r\n                }\r\n              >\r\n                <div className=\"p-2 bg-green-100 rounded-lg\">\r\n                  <TrendingUp className=\"h-6 w-6 text-green-600\" />\r\n                </div>\r\n                <div className=\"flex-1\">\r\n                  <div className=\"flex justify-between items-start\">\r\n                    <p className=\"text-sm font-medium text-gray-700\">Monthly Signups</p>\r\n                    <span className=\"text-xs bg-green-100 text-green-800 px-2 py-0.5 rounded-full\">\r\n                      {(metrics.totalSignups || 0).toLocaleString()} /{' '}\r\n                      {currentPlan.maxSignups.toLocaleString()}\r\n                    </span>\r\n                  </div>\r\n                  <div className=\"mt-1\">\r\n                    <div className=\"w-full bg-gray-200 rounded-full h-2\">\r\n                      <div\r\n                        className=\"bg-green-600 h-2 rounded-full\"\r\n                        style={{\r\n                          width: `${Math.min(\r\n                            100,\r\n                            (Number(metrics.totalSignups || 0) / currentPlan.maxSignups) * 100,\r\n                          )}%`,\r\n                        }}\r\n                      />\r\n                    </div>\r\n                  </div>\r\n                  <p className=\"text-xs text-gray-500 mt-1\">\r\n                    {Math.max(\r\n                      0,\r\n                      currentPlan.maxSignups - Number(metrics.totalSignups || 0),\r\n                    ).toLocaleString()}{' '}\r\n                    signups remaining\r\n                    {metrics.plan !== 'PRO' && nextPlan && (\r\n                      <Button\r\n                        variant=\"link\"\r\n                        className=\"h-auto p-0 ml-1 text-blue-600 text-xs\"\r\n                      >\r\n                        ({currentPlan.upgradeText})\r\n                      </Button>\r\n                    )}\r\n                  </p>\r\n                </div>\r\n              </div>\r\n\r\n              <div\r\n                className={\r\n                  'flex items-center gap-3 p-4 bg-gradient-to-br from-purple-50 to-white rounded-lg border border-purple-100'\r\n                }\r\n              >\r\n                <div className=\"p-2 bg-purple-100 rounded-lg\">\r\n                  <Zap className=\"h-6 w-6 text-purple-600\" />\r\n                </div>\r\n                <div>\r\n                  <p className=\"text-sm font-medium text-gray-700\">Conversion Rate</p>\r\n                  <p className=\"text-2xl font-bold text-purple-600\">\r\n                    {isLoading ? '...' : `${Number(metrics.conversionRate || 0).toFixed(1)}%`}\r\n                  </p>\r\n                  <p className=\"text-xs text-gray-500\">\r\n                    {isLoading ? 'Calculating...' : 'Based on last 30 days'}\r\n                  </p>\r\n                </div>\r\n              </div>\r\n            </div>\r\n\r\n            {/* Plan Features */}\r\n            <div\r\n              className={`bg-${currentPlan.color}-50 rounded-lg p-4 border border-${currentPlan.color}-100`}\r\n            >\r\n              <div className=\"flex justify-between items-center mb-2\">\r\n                <h3 className=\"font-medium text-gray-900\">{currentPlan.name} Plan Features</h3>\r\n                {nextPlan && (\r\n                  <Button\r\n                    variant=\"link\"\r\n                    className=\"h-auto p-0 text-sm text-blue-600\"\r\n                  >\r\n                    Compare plans <ArrowRight className=\"ml-1 h-4 w-4\" />\r\n                  </Button>\r\n                )}\r\n              </div>\r\n              <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-2\">\r\n                {currentPlan.features.map((feature, index) => (\r\n                  <div\r\n                    key={index}\r\n                    className=\"flex items-start\"\r\n                  >\r\n                    <CheckCircle2\r\n                      className={`h-4 w-4 text-${currentPlan.color}-600 mt-0.5 mr-2 flex-shrink-0`}\r\n                    />\r\n                    <span className=\"text-sm text-gray-700\">{feature}</span>\r\n                  </div>\r\n                ))}\r\n                {nextPlan && (\r\n                  <div className=\"flex items-center mt-2 pt-2 border-t border-gray-200\">\r\n                    <div className=\"flex-1\">\r\n                      <p className=\"text-xs text-gray-500\">{currentPlan.upgradeText}</p>\r\n                      <Button\r\n                        variant=\"link\"\r\n                        className=\"h-auto p-0 text-sm font-medium text-blue-600\"\r\n                      >\r\n                        Upgrade to {nextPlan} <ArrowRight className=\"ml-1 h-4 w-4\" />\r\n                      </Button>\r\n                    </div>\r\n                  </div>\r\n                )}\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </CardContent>\r\n      </Card>\r\n\r\n      {/* Waitlist Preferences make sure they are updated and carried over to the waitlist page*/}\r\n      <Card>\r\n        <CardHeader>\r\n          <CardTitle className=\"flex items-center gap-2\">\r\n            <ListChecks className=\"h-5 w-5\" />\r\n            Waitlist Preferences\r\n          </CardTitle>\r\n          <CardDescription>Configure default settings for your waitlists</CardDescription>\r\n        </CardHeader>\r\n        <CardContent className=\"space-y-6\">\r\n          <div className=\"space-y-4\">\r\n            <div className=\"flex items-center justify-between\">\r\n              <div className=\"space-y-0.5\">\r\n                <Label htmlFor=\"auto-approve\">Auto-approve Subscribers</Label>\r\n                <p className=\"text-sm text-muted-foreground\">\r\n                  Automatically approve new subscribers without manual review\r\n                </p>\r\n              </div>\r\n              <Switch\r\n                id=\"auto-approve\"\r\n                checked={waitlistPrefs.autoApproveSubscribers}\r\n                onCheckedChange={(checked) => handlePrefsChange('autoApproveSubscribers', checked)}\r\n              />\r\n            </div>\r\n\r\n            <div className=\"flex items-center justify-between\">\r\n              <div className=\"space-y-0.5\">\r\n                <Label htmlFor=\"email-verification\">Require Email Verification</Label>\r\n                <p className=\"text-sm text-muted-foreground\">\r\n                  Require subscribers to verify their email address\r\n                </p>\r\n              </div>\r\n              <Switch\r\n                id=\"email-verification\"\r\n                checked={waitlistPrefs.requireEmailVerification}\r\n                onCheckedChange={(checked) =>\r\n                  handlePrefsChange('requireEmailVerification', checked)\r\n                }\r\n              />\r\n            </div>\r\n\r\n            <div className=\"flex items-center justify-between\">\r\n              <div className=\"space-y-0.5\">\r\n                <Label htmlFor=\"email-notifications\">Email Notifications</Label>\r\n                <p className=\"text-sm text-muted-foreground\">\r\n                  Receive email notifications for new subscribers\r\n                </p>\r\n              </div>\r\n              <Switch\r\n                id=\"email-notifications\"\r\n                checked={waitlistPrefs.emailNotifications}\r\n                onCheckedChange={(checked) => handlePrefsChange('emailNotifications', checked)}\r\n              />\r\n            </div>\r\n\r\n            <div className=\"space-y-2\">\r\n              <Label htmlFor=\"default-limit\">Default Waitlist Limit</Label>\r\n              <Input\r\n                id=\"default-limit\"\r\n                type=\"number\"\r\n                min=\"1\"\r\n                max=\"100\"\r\n                value={waitlistPrefs.defaultWaitlistLimit}\r\n                onChange={(e) =>\r\n                  handlePrefsChange('defaultWaitlistLimit', parseInt(e.target.value) || 1)\r\n                }\r\n                className=\"max-w-[120px]\"\r\n              />\r\n              <p className=\"text-sm text-muted-foreground\">\r\n                Default maximum number of waitlists you can create\r\n              </p>\r\n            </div>\r\n\r\n            <div className=\"space-y-2\">\r\n              <Label htmlFor=\"max-subscribers\">Maximum Subscribers</Label>\r\n              <Input\r\n                id=\"max-subscribers\"\r\n                type=\"number\"\r\n                min=\"100\"\r\n                max=\"10000\"\r\n                step=\"100\"\r\n                value={waitlistPrefs.maxSubscribers}\r\n                onChange={(e) =>\r\n                  handlePrefsChange(\r\n                    'maxSubscribers',\r\n                    Math.min(10000, Math.max(100, parseInt(e.target.value) || 1000)),\r\n                  )\r\n                }\r\n                className=\"max-w-[150px]\"\r\n              />\r\n              <p className=\"text-sm text-muted-foreground\">\r\n                Maximum number of subscribers allowed per waitlist (100-10,000)\r\n              </p>\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"flex justify-end pt-2\">\r\n            <Button\r\n              onClick={handleSavePrefs}\r\n              disabled={isSavingPrefs}\r\n            >\r\n              {isSavingPrefs ? (\r\n                <>\r\n                  <span className=\"opacity-0\">Saving...</span>\r\n                  <span className=\"absolute inset-0 flex items-center justify-center\">\r\n                    <span className=\"animate-spin rounded-full h-4 w-4 border-b-2 border-white\" />\r\n                  </span>\r\n                </>\r\n              ) : (\r\n                'Save Preferences'\r\n              )}\r\n            </Button>\r\n          </div>\r\n        </CardContent>\r\n      </Card>\r\n\r\n      {/* Profile Information */}\r\n      <Card>\r\n        <CardHeader>\r\n          <CardTitle className=\"flex items-center gap-2\">\r\n            <User className=\"h-5 w-5\" />\r\n            Profile Information\r\n          </CardTitle>\r\n          <CardDescription>Update your account details and public profile</CardDescription>\r\n        </CardHeader>\r\n        <CardContent>\r\n          {isLoading ? (\r\n            <div className=\"flex justify-center py-8\">\r\n              <div className=\"animate-spin rounded-full h-8 w-8 border-b-2 border-gray-900\" />\r\n            </div>\r\n          ) : (\r\n            <form\r\n              onSubmit={handleSubmit}\r\n              className=\"space-y-4\"\r\n            >\r\n              <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\r\n                <div className=\"space-y-2\">\r\n                  <Label htmlFor=\"name\">Full Name *</Label>\r\n                  <Input\r\n                    id=\"name\"\r\n                    name=\"name\"\r\n                    value={formData.name}\r\n                    onChange={handleChange}\r\n                    placeholder=\"Your full name\"\r\n                    required\r\n                  />\r\n                </div>\r\n                <div className=\"space-y-2\">\r\n                  <Label htmlFor=\"email\">Email Address</Label>\r\n                  <Input\r\n                    id=\"email\"\r\n                    type=\"email\"\r\n                    value={formData.email}\r\n                    disabled\r\n                    className=\"bg-gray-100\"\r\n                  />\r\n                  <p className=\"text-xs text-muted-foreground\">\r\n                    Contact support to change your email\r\n                  </p>\r\n                </div>\r\n              </div>\r\n\r\n              <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\r\n                <div className=\"space-y-2\">\r\n                  <Label htmlFor=\"company\">Company/Organization</Label>\r\n                  <Input\r\n                    id=\"company\"\r\n                    name=\"company\"\r\n                    value={formData.company}\r\n                    onChange={handleChange}\r\n                    placeholder=\"Your company name\"\r\n                  />\r\n                </div>\r\n                <div className=\"space-y-2\">\r\n                  <Label htmlFor=\"website\">Website</Label>\r\n                  <Input\r\n                    id=\"website\"\r\n                    name=\"website\"\r\n                    type=\"url\"\r\n                    value={formData.website}\r\n                    onChange={handleChange}\r\n                    placeholder=\"https://yourwebsite.com\"\r\n                  />\r\n                </div>\r\n              </div>\r\n\r\n              <div className=\"space-y-2\">\r\n                <Label htmlFor=\"bio\">Bio</Label>\r\n                <Textarea\r\n                  id=\"bio\"\r\n                  name=\"bio\"\r\n                  value={formData.bio}\r\n                  onChange={handleChange}\r\n                  placeholder=\"Tell us about yourself or your project...\"\r\n                  className=\"min-h-[100px]\"\r\n                />\r\n              </div>\r\n\r\n              <div className=\"space-y-2\">\r\n                <Label htmlFor=\"timezone\">Timezone</Label>\r\n                <Select\r\n                  value={formData.timezone}\r\n                  onValueChange={handleTimezoneChange}\r\n                >\r\n                  <SelectTrigger className=\"max-w-md\">\r\n                    <SelectValue />\r\n                  </SelectTrigger>\r\n                  <SelectContent>\r\n                    <SelectItem value=\"UTC\">UTC (Coordinated Universal Time)</SelectItem>\r\n                    <SelectItem value=\"America/New_York\">EST (Eastern Standard Time)</SelectItem>\r\n                    <SelectItem value=\"America/Los_Angeles\">PST (Pacific Standard Time)</SelectItem>\r\n                    <SelectItem value=\"America/Chicago\">CST (Central Standard Time)</SelectItem>\r\n                    <SelectItem value=\"America/Denver\">MST (Mountain Standard Time)</SelectItem>\r\n                    <SelectItem value=\"Europe/London\">GMT (Greenwich Mean Time)</SelectItem>\r\n                    <SelectItem value=\"Europe/Paris\">CET (Central European Time)</SelectItem>\r\n                    <SelectItem value=\"Asia/Tokyo\">JST (Japan Standard Time)</SelectItem>\r\n                    <SelectItem value=\"Australia/Sydney\">AEST (Australian Eastern Time)</SelectItem>\r\n                  </SelectContent>\r\n                </Select>\r\n              </div>\r\n\r\n              <div className=\"flex justify-end pt-4\">\r\n                <Button\r\n                  type=\"submit\"\r\n                  disabled={isSaving}\r\n                >\r\n                  {isSaving ? (\r\n                    <>\r\n                      <span className=\"opacity-0\">Saving...</span>\r\n                      <span className=\"absolute inset-0 flex items-center justify-center\">\r\n                        <span className=\"animate-spin rounded-full h-4 w-4 border-b-2 border-white\" />\r\n                      </span>\r\n                    </>\r\n                  ) : (\r\n                    'Save Changes'\r\n                  )}\r\n                </Button>\r\n              </div>\r\n            </form>\r\n          )}\r\n        </CardContent>\r\n      </Card>\r\n\r\n      {/* Notification Preferences */}\r\n      <Card>\r\n        <CardHeader>\r\n          <CardTitle className=\"flex items-center gap-2\">\r\n            <Bell className=\"h-5 w-5\" />\r\n            Notification Preferences\r\n          </CardTitle>\r\n          <CardDescription>Manage how you receive updates about your waitlists</CardDescription>\r\n        </CardHeader>\r\n        <CardContent className=\"space-y-4\">\r\n          <div className=\"flex items-center justify-between\">\r\n            <div className=\"space-y-0.5\">\r\n              <Label htmlFor=\"email-notifications\">Email Notifications</Label>\r\n              <p className=\"text-sm text-muted-foreground\">\r\n                Master toggle for all email notifications\r\n              </p>\r\n            </div>\r\n            <Switch\r\n              id=\"email-notifications\"\r\n              checked={notifications.email}\r\n              onCheckedChange={() => handleNotificationToggle('email')}\r\n            />\r\n          </div>\r\n\r\n          <div className=\"ml-4 space-y-4 border-l-2 border-gray-100 pl-4\">\r\n            <div className=\"flex items-center justify-between\">\r\n              <div className=\"space-y-0.5\">\r\n                <Label htmlFor=\"signup-alerts\">Real-time Signup Alerts</Label>\r\n                <p className=\"text-sm text-muted-foreground\">Get notified for each new signup</p>\r\n              </div>\r\n              <Switch\r\n                id=\"signup-alerts\"\r\n                checked={notifications.signupAlerts}\r\n                onCheckedChange={() => handleNotificationToggle('signupAlerts')}\r\n                disabled={!notifications.email}\r\n              />\r\n            </div>\r\n\r\n            <div className=\"flex items-center justify-between\">\r\n              <div className=\"space-y-0.5\">\r\n                <Label htmlFor=\"waitlist-milestones\">Waitlist Milestones</Label>\r\n                <p className=\"text-sm text-muted-foreground\">\r\n                  Celebrate reaching signup milestones\r\n                </p>\r\n              </div>\r\n              <Switch\r\n                id=\"waitlist-milestones\"\r\n                checked={notifications.waitlistMilestones}\r\n                onCheckedChange={() => handleNotificationToggle('waitlistMilestones')}\r\n                disabled={!notifications.email}\r\n              />\r\n            </div>\r\n\r\n            <div className=\"flex items-center justify-between\">\r\n              <div className=\"space-y-0.5\">\r\n                <Label htmlFor=\"daily-reports\">Daily Reports</Label>\r\n                <p className=\"text-sm text-muted-foreground\">\r\n                  Daily summary of your waitlist activity\r\n                </p>\r\n              </div>\r\n              <Switch\r\n                id=\"daily-reports\"\r\n                checked={notifications.dailyReports}\r\n                onCheckedChange={() => handleNotificationToggle('dailyReports')}\r\n                disabled={!notifications.email}\r\n              />\r\n            </div>\r\n\r\n            <div className=\"flex items-center justify-between\">\r\n              <div className=\"space-y-0.5\">\r\n                <Label htmlFor=\"weekly-digest\">Weekly Digest</Label>\r\n                <p className=\"text-sm text-muted-foreground\">Weekly analytics and insights</p>\r\n              </div>\r\n              <Switch\r\n                id=\"weekly-digest\"\r\n                checked={notifications.weeklyDigest}\r\n                onCheckedChange={() => handleNotificationToggle('weeklyDigest')}\r\n                disabled={!notifications.email}\r\n              />\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"flex items-center justify-between\">\r\n            <div className=\"space-y-0.5\">\r\n              <Label htmlFor=\"integration-updates\">Integration Updates</Label>\r\n              <p className=\"text-sm text-muted-foreground\">\r\n                Updates about third-party integrations\r\n              </p>\r\n            </div>\r\n            <Switch\r\n              id=\"integration-updates\"\r\n              checked={notifications.integrationUpdates}\r\n              onCheckedChange={() => handleNotificationToggle('integrationUpdates')}\r\n            />\r\n          </div>\r\n\r\n          <div className=\"flex items-center justify-between\">\r\n            <div className=\"space-y-0.5 flex items-center gap-2\">\r\n              <Label htmlFor=\"security-alerts\">Security Alerts</Label>\r\n              <AlertCircle className=\"h-4 w-4 text-orange-500\" />\r\n              <p className=\"text-sm text-muted-foreground\">\r\n                Important security notifications (recommended)\r\n              </p>\r\n            </div>\r\n            <Switch\r\n              id=\"security-alerts\"\r\n              checked={notifications.securityAlerts}\r\n              onCheckedChange={() => handleNotificationToggle('securityAlerts')}\r\n            />\r\n          </div>\r\n\r\n          <div className=\"flex items-center justify-between\">\r\n            <div className=\"space-y-0.5\">\r\n              <Label htmlFor=\"marketing\">Marketing Emails</Label>\r\n              <p className=\"text-sm text-muted-foreground\">\r\n                Product updates and promotional content\r\n              </p>\r\n            </div>\r\n            <Switch\r\n              id=\"marketing\"\r\n              checked={notifications.marketing}\r\n              onCheckedChange={() => handleNotificationToggle('marketing')}\r\n            />\r\n          </div>\r\n        </CardContent>\r\n      </Card>\r\n\r\n      {/* Referral Program */}\r\n      <Card>\r\n        <CardHeader>\r\n          <CardTitle className=\"flex items-center gap-2\">\r\n            <Users className=\"h-5 w-5\" />\r\n            Referral Program\r\n          </CardTitle>\r\n          <CardDescription>Share your referral link and earn rewards</CardDescription>\r\n        </CardHeader>\r\n        <CardContent className=\"space-y-4\">\r\n          <div className=\"p-4 bg-gradient-to-r from-blue-50 to-purple-50 rounded-lg border\">\r\n            <div className=\"flex items-center justify-between mb-2\">\r\n              <h4 className=\"font-medium\">Your Referral Link</h4>\r\n              <Badge variant=\"secondary\">5 referrals</Badge>\r\n            </div>\r\n            <div className=\"flex items-center gap-2\">\r\n              <code className=\"flex-1 p-2 bg-white rounded border text-sm\">\r\n                https://yourwaitlist.com/ref/user123\r\n              </code>\r\n              <Button\r\n                size=\"sm\"\r\n                variant=\"outline\"\r\n                onClick={copyReferralLink}\r\n              >\r\n                <Copy className=\"h-4 w-4\" />\r\n              </Button>\r\n            </div>\r\n            <p className=\"text-sm text-muted-foreground mt-2\">\r\n              Earn 10% commission on all referral subscriptions\r\n            </p>\r\n          </div>\r\n        </CardContent>\r\n      </Card>\r\n\r\n      {/* Account Security */}\r\n      <Card>\r\n        <CardHeader>\r\n          <CardTitle className=\"flex items-center gap-2\">\r\n            <Lock className=\"h-5 w-5\" />\r\n            Account Security\r\n          </CardTitle>\r\n          <CardDescription>Manage your account security settings</CardDescription>\r\n        </CardHeader>\r\n        <CardContent className=\"space-y-4\">\r\n          <div className=\"flex items-center justify-between\">\r\n            <div className=\"space-y-0.5\">\r\n              <Label>Password</Label>\r\n              <p className=\"text-sm text-muted-foreground\">Last changed 3 months ago</p>\r\n            </div>\r\n            <Button\r\n              variant=\"outline\"\r\n              size=\"sm\"\r\n            >\r\n              Change Password\r\n            </Button>\r\n          </div>\r\n\r\n          <div className=\"flex items-center justify-between\">\r\n            <div className=\"space-y-0.5\">\r\n              <Label>Two-Factor Authentication</Label>\r\n              <p className=\"text-sm text-muted-foreground\">Add an extra layer of security</p>\r\n            </div>\r\n            <Button\r\n              variant=\"outline\"\r\n              size=\"sm\"\r\n            >\r\n              Set Up 2FA\r\n            </Button>\r\n          </div>\r\n\r\n          <div className=\"flex items-center justify-between\">\r\n            <div className=\"space-y-0.5\">\r\n              <Label>API Keys</Label>\r\n              <p className=\"text-sm text-muted-foreground\">Manage your API access tokens</p>\r\n            </div>\r\n            <Button\r\n              variant=\"outline\"\r\n              size=\"sm\"\r\n            >\r\n              <ExternalLink className=\"h-4 w-4 mr-2\" />\r\n              Manage Keys\r\n            </Button>\r\n          </div>\r\n\r\n          <div className=\"flex items-center justify-between\">\r\n            <div className=\"space-y-0.5\">\r\n              <Label>Active Sessions</Label>\r\n              <p className=\"text-sm text-muted-foreground\">View and manage your active sessions</p>\r\n            </div>\r\n            <Button\r\n              variant=\"outline\"\r\n              size=\"sm\"\r\n            >\r\n              View Sessions\r\n            </Button>\r\n          </div>\r\n        </CardContent>\r\n      </Card>\r\n\r\n      {/* Save Button */}\r\n      <div className=\"flex justify-between items-center\">\r\n        <div className=\"text-sm text-muted-foreground\">Changes are saved automatically</div>\r\n        <div className=\"flex items-center gap-4\">\r\n          {isSaved && (\r\n            <div className=\"flex items-center gap-2 text-sm text-green-600\">\r\n              <CheckCircle2 className=\"h-4 w-4\" />\r\n              <span>Changes saved successfully!</span>\r\n            </div>\r\n          )}\r\n          <Button\r\n            onClick={handleSave}\r\n            disabled={isSaving}\r\n          >\r\n            {isSaving ? 'Saving...' : 'Save Changes'}\r\n          </Button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\n/**\r\n * Renders account settings component once mounted.\r\n */\r\nexport const AccountSettings = () => {\r\n  const [isMounted, setIsMounted] = useState(false);\r\n\r\n  useEffect(() => {\r\n    setIsMounted(true);\r\n  }, []);\r\n\r\n  if (!isMounted) {\r\n    return null;\r\n  }\r\n\r\n  return <AccountSettingsContent />;\r\n};\r\n"]}