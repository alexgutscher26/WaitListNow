{"version":3,"file":"avatar.jsx","sourceRoot":"","sources":["avatar.tsx"],"names":[],"mappings":";AAAA,OAAO,KAAK,KAAK,MAAM,OAAO,CAAC;AAC/B,OAAO,EAAE,EAAE,EAAE,MAAM,SAAS,CAAC;AAE7B,IAAM,MAAM,GAAG,KAAK,CAAC,UAAU,CAO7B,UAAC,EAA2C,EAAE,GAAG;IAA9C,IAAA,SAAS,eAAA,EAAE,GAAG,SAAA,EAAE,GAAG,SAAA,EAAE,QAAQ,cAAA,EAAK,KAAK,cAAzC,uCAA2C,CAAF;IAC1C,OAAO,CACL,CAAC,IAAI,CACH,GAAG,CAAC,CAAC,GAAG,CAAC,CACT,SAAS,CAAC,CAAC,EAAE,CAAC,+DAA+D,EAAE,SAAS,CAAC,CAAC,CAC1F,IAAI,KAAK,CAAC,CAEV;MAAA,CAAC,GAAG,CAAC,CAAC,CAAC,CACL,CAAC,WAAW,CACV,GAAG,CAAC,CAAC,GAAG,CAAC,CACT,GAAG,CAAC,CAAC,GAAG,IAAI,EAAE,CAAC,CACf,KAAK,CAAC,CAAC,EAAE,CAAC,CACV,MAAM,CAAC,CAAC,EAAE,CAAC,CACX,SAAS,CAAC,6BAA6B,EACvC,CACH,CAAC,CAAC,CAAC,CACF,CAAC,IAAI,CAAC,SAAS,CAAC,sEAAsE,CACpF;UAAA,CAAC,QAAQ,CACX;QAAA,EAAE,IAAI,CAAC,CACR,CACH;IAAA,EAAE,IAAI,CAAC,CACR,CAAC;AACJ,CAAC,CAAC,CAAC;AACH,MAAM,CAAC,WAAW,GAAG,QAAQ,CAAC;AAE9B,OAAO,KAAK,MAAM,YAAY,CAAC;AAE/B,IAAM,WAAW,GAAG,KAAK,CAAC,UAAU,CAClC,UAAC,EAAiC,EAAE,GAAG;IAApC,IAAA,SAAS,eAAA,EAAE,WAAQ,EAAR,GAAG,mBAAG,EAAE,KAAA,EAAK,KAAK,cAA/B,oBAAiC,CAAF;IAAY,OAAA,CAC1C,CAAC,KAAK,CACJ,GAAG,CAAC,CAAC,GAAG,CAAC,CACT,GAAG,CAAC,CAAC,GAAG,CAAC,CACT,SAAS,CAAC,CAAC,EAAE,CAAC,6BAA6B,EAAE,SAAS,CAAC,CAAC,CACxD,IAAI,KAAK,CAAC,EACV,CACH,CAAA;CAAA,CACF,CAAC;AACF,WAAW,CAAC,WAAW,GAAG,aAAa,CAAC;AAExC,IAAM,cAAc,GAAG,KAAK,CAAC,UAAU,CACrC,UAAC,EAAuB,EAAE,GAAG;IAA1B,IAAA,SAAS,eAAA,EAAK,KAAK,cAArB,aAAuB,CAAF;IAAY,OAAA,CAChC,CAAC,IAAI,CACH,GAAG,CAAC,CAAC,GAAG,CAAC,CACT,SAAS,CAAC,CAAC,EAAE,CACX,sEAAsE,EACtE,SAAS,CACV,CAAC,CACF,IAAI,KAAK,CAAC,EACV,CACH,CAAA;CAAA,CACF,CAAC;AACF,cAAc,CAAC,WAAW,GAAG,gBAAgB,CAAC;AAE9C,OAAO,EAAE,MAAM,EAAE,WAAW,EAAE,cAAc,EAAE,CAAC","sourcesContent":["import * as React from 'react';\r\nimport { cn } from '@/utils';\r\n\r\nconst Avatar = React.forwardRef<\r\n  HTMLSpanElement,\r\n  React.HTMLAttributes<HTMLSpanElement> & {\r\n    src?: string;\r\n    alt?: string;\r\n    fallback?: React.ReactNode;\r\n  }\r\n>(({ className, src, alt, fallback, ...props }, ref) => {\r\n  return (\r\n    <span\r\n      ref={ref}\r\n      className={cn('relative flex h-10 w-10 shrink-0 overflow-hidden rounded-full', className)}\r\n      {...props}\r\n    >\r\n      {src ? (\r\n        <AvatarImage\r\n          src={src}\r\n          alt={alt || ''}\r\n          width={40}\r\n          height={40}\r\n          className=\"aspect-square h-full w-full\"\r\n        />\r\n      ) : (\r\n        <span className=\"flex h-full w-full items-center justify-center rounded-full bg-muted\">\r\n          {fallback}\r\n        </span>\r\n      )}\r\n    </span>\r\n  );\r\n});\r\nAvatar.displayName = 'Avatar';\r\n\r\nimport Image from 'next/image';\r\n\r\nconst AvatarImage = React.forwardRef<HTMLImageElement, React.ComponentProps<typeof Image>>(\r\n  ({ className, alt = '', ...props }, ref) => (\r\n    <Image\r\n      ref={ref}\r\n      alt={alt}\r\n      className={cn('aspect-square h-full w-full', className)}\r\n      {...props}\r\n    />\r\n  ),\r\n);\r\nAvatarImage.displayName = 'AvatarImage';\r\n\r\nconst AvatarFallback = React.forwardRef<HTMLSpanElement, React.HTMLAttributes<HTMLSpanElement>>(\r\n  ({ className, ...props }, ref) => (\r\n    <span\r\n      ref={ref}\r\n      className={cn(\r\n        'flex h-full w-full items-center justify-center rounded-full bg-muted',\r\n        className,\r\n      )}\r\n      {...props}\r\n    />\r\n  ),\r\n);\r\nAvatarFallback.displayName = 'AvatarFallback';\r\n\r\nexport { Avatar, AvatarImage, AvatarFallback };\r\n"]}