{"version":3,"file":"posthog-provider.jsx","sourceRoot":"","sources":["posthog-provider.tsx"],"names":[],"mappings":"AAAA,YAAY,CAAC;AAEb,OAAO,KAAK,MAAM,OAAO,CAAC;AAC1B,OAAO,OAAO,MAAM,YAAY,CAAC;AACjC,OAAO,EAAE,eAAe,IAAI,UAAU,EAAE,UAAU,EAAE,MAAM,kBAAkB,CAAC;AAC7E,OAAO,EAAE,QAAQ,EAAE,SAAS,EAAE,MAAM,OAAO,CAAC;AAC5C,OAAO,EAAE,WAAW,EAAE,eAAe,EAAE,MAAM,iBAAiB,CAAC;AAE/D,MAAM,UAAU,eAAe,CAAC,EAA2C;QAAzC,QAAQ,cAAA;IACxC,SAAS,CAAC;QACR,oCAAoC;IACtC,CAAC,EAAE,EAAE,CAAC,CAAC;IAEP,OAAO,CACL,CAAC,UAAU,CAAC,MAAM,CAAC,CAAC,OAAO,CAAC,CAC1B;MAAA,CAAC,wBAAwB,CAAC,AAAD,EACzB;MAAA,CAAC,QAAQ,CACX;IAAA,EAAE,UAAU,CAAC,CACd,CAAC;AACJ,CAAC;AAED,SAAS,eAAe;IACtB,IAAM,QAAQ,GAAG,WAAW,EAAE,CAAC;IAC/B,IAAM,YAAY,GAAG,eAAe,EAAE,CAAC;IACvC,IAAM,OAAO,GAAG,UAAU,EAAE,CAAC;IAE7B,SAAS,CAAC;QACR,IAAI,QAAQ,IAAI,OAAO,EAAE,CAAC;YACxB,IAAI,GAAG,GAAG,MAAM,CAAC,MAAM,GAAG,QAAQ,CAAC;YACnC,IAAM,MAAM,GAAG,YAAY,CAAC,QAAQ,EAAE,CAAC;YACvC,IAAI,MAAM,EAAE,CAAC;gBACX,GAAG,IAAI,GAAG,GAAG,MAAM,CAAC;YACtB,CAAC;YACD,OAAO,CAAC,OAAO,CAAC,WAAW,EAAE,EAAE,YAAY,EAAE,GAAG,EAAE,CAAC,CAAC;QACtD,CAAC;IACH,CAAC,EAAE,CAAC,QAAQ,EAAE,YAAY,EAAE,OAAO,CAAC,CAAC,CAAC;IAEtC,OAAO,IAAI,CAAC;AACd,CAAC;AAED,SAAS,wBAAwB;IAC/B,OAAO,CACL,CAAC,QAAQ,CAAC,QAAQ,CAAC,CAAC,IAAI,CAAC,CACvB;MAAA,CAAC,eAAe,CAAC,AAAD,EAClB;IAAA,EAAE,QAAQ,CAAC,CACZ,CAAC;AACJ,CAAC","sourcesContent":["'use client';\r\n\r\nimport React from 'react';\r\nimport posthog from 'posthog-js';\r\nimport { PostHogProvider as PHProvider, usePostHog } from 'posthog-js/react';\r\nimport { Suspense, useEffect } from 'react';\r\nimport { usePathname, useSearchParams } from 'next/navigation';\r\n\r\nexport function PostHogProvider({ children }: { children: React.ReactNode }) {\r\n  useEffect(() => {\r\n    // Initialize PostHog here if needed\r\n  }, []);\r\n\r\n  return (\r\n    <PHProvider client={posthog}>\r\n      <SuspendedPostHogPageView />\r\n      {children}\r\n    </PHProvider>\r\n  );\r\n}\r\n\r\nfunction PostHogPageView() {\r\n  const pathname = usePathname();\r\n  const searchParams = useSearchParams();\r\n  const posthog = usePostHog();\r\n\r\n  useEffect(() => {\r\n    if (pathname && posthog) {\r\n      let url = window.origin + pathname;\r\n      const search = searchParams.toString();\r\n      if (search) {\r\n        url += '?' + search;\r\n      }\r\n      posthog.capture('$pageview', { $current_url: url });\r\n    }\r\n  }, [pathname, searchParams, posthog]);\r\n\r\n  return null;\r\n}\r\n\r\nfunction SuspendedPostHogPageView() {\r\n  return (\r\n    <Suspense fallback={null}>\r\n      <PostHogPageView />\r\n    </Suspense>\r\n  );\r\n}\r\n"]}