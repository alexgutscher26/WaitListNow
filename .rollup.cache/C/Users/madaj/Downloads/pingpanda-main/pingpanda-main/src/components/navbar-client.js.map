{"version":3,"file":"navbar-client.js","sourceRoot":"","sources":["navbar-client.tsx"],"names":[],"mappings":"AAAA,YAAY,CAAC;;AAGb,OAAO,IAAI,MAAM,WAAW,CAAC;AAC7B,OAAO,EAAE,eAAe,EAAE,MAAM,qBAAqB,CAAC;AACtD,OAAO,EAAE,aAAa,EAAE,OAAO,EAAE,MAAM,eAAe,CAAC;AACvD,OAAO,EAAE,MAAM,EAAE,cAAc,EAAE,MAAM,aAAa,CAAC;AACrD,OAAO,EAAE,UAAU,EAAE,MAAM,cAAc,CAAC;AAE1C;;;GAGG;AACH,MAAM,CAAC,IAAM,YAAY,GAAG;IACpB,IAAA,KAA2B,OAAO,EAAE,EAAlC,QAAQ,cAAA,EAAE,UAAU,gBAAc,CAAC;IAE3C,IAAI,CAAC,QAAQ,EAAE,CAAC;QACd,kDAAkD;QAClD,OAAO,CACL,cAAK,SAAS,EAAC,iHAAiH,YAC9H,KAAC,eAAe,cACd,eAAK,SAAS,EAAC,wCAAwC,aACrD,cAAK,SAAS,EAAC,4CAA4C,GAAG,EAC9D,cAAK,SAAS,EAAC,4CAA4C,GAAG,IAC1D,GACU,GACd,CACP,CAAC;IACJ,CAAC;IAED,OAAO,CACL,cAAK,SAAS,EAAC,iHAAiH,YAC9H,KAAC,eAAe,cACd,eAAK,SAAS,EAAC,wCAAwC,aACrD,MAAC,IAAI,IACH,IAAI,EAAC,GAAG,EACR,SAAS,EAAC,yBAAyB,yBAE3B,eAAM,SAAS,EAAC,gBAAgB,oBAAW,IAC9C,EAEP,cAAK,SAAS,EAAC,oCAAoC,YAChD,UAAU,CAAC,CAAC,CAAC,CACZ,8BACE,KAAC,aAAa,cACZ,KAAC,MAAM,IACL,IAAI,EAAC,IAAI,EACT,OAAO,EAAC,OAAO,yBAGR,GACK,EAChB,MAAC,IAAI,IACH,IAAI,EAAC,YAAY,EACjB,SAAS,EAAE,cAAc,CAAC;wCACxB,IAAI,EAAE,IAAI;wCACV,SAAS,EAAE,mCAAmC;qCAC/C,CAAC,2BAEQ,KAAC,UAAU,IAAC,SAAS,EAAC,SAAS,GAAG,IACvC,IACN,CACJ,CAAC,CAAC,CAAC,CACF,8BACE,KAAC,IAAI,IACH,IAAI,EAAC,UAAU,EACf,SAAS,EAAE,cAAc,CAAC;wCACxB,OAAO,EAAE,OAAO;wCAChB,IAAI,EAAE,IAAI;qCACX,CAAC,wBAGG,EACP,MAAC,IAAI,IACH,IAAI,EAAC,UAAU,EACf,SAAS,EAAE,cAAc,CAAC;wCACxB,IAAI,EAAE,IAAI;wCACV,SAAS,EAAE,mCAAmC;qCAC/C,CAAC,6BAEU,KAAC,UAAU,IAAC,SAAS,EAAC,SAAS,GAAG,IACzC,IACN,CACJ,GACG,IACF,GACU,GACd,CACP,CAAC;AACJ,CAAC,CAAC","sourcesContent":["'use client';\r\n\r\nimport React from 'react';\r\nimport Link from 'next/link';\r\nimport { MaxWidthWrapper } from './max-width-wrapper';\r\nimport { SignOutButton, useUser } from '@clerk/nextjs';\r\nimport { Button, buttonVariants } from './ui/button';\r\nimport { ArrowRight } from 'lucide-react';\r\n\r\n/**\r\n * Client-side navigation bar component that displays user authentication status and respective links.\r\n * Uses Clerk's useUser hook to get the current user on the client side.\r\n */\r\nexport const NavbarClient = () => {\r\n  const { isLoaded, isSignedIn } = useUser();\r\n\r\n  if (!isLoaded) {\r\n    // You can return a loading state or skeleton here\r\n    return (\r\n      <nav className=\"sticky z-[100] h-16 inset-x-0 top-0 w-full border-b border-gray-200 bg-white/80 backdrop-blur-lg transition-all\">\r\n        <MaxWidthWrapper>\r\n          <div className=\"flex h-16 items-center justify-between\">\r\n            <div className=\"h-8 w-32 bg-gray-200 rounded animate-pulse\" />\r\n            <div className=\"h-8 w-24 bg-gray-200 rounded animate-pulse\" />\r\n          </div>\r\n        </MaxWidthWrapper>\r\n      </nav>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <nav className=\"sticky z-[100] h-16 inset-x-0 top-0 w-full border-b border-gray-200 bg-white/80 backdrop-blur-lg transition-all\">\r\n      <MaxWidthWrapper>\r\n        <div className=\"flex h-16 items-center justify-between\">\r\n          <Link\r\n            href=\"/\"\r\n            className=\"flex z-40 font-semibold\"\r\n          >\r\n            Waitlist<span className=\"text-brand-700\">Now</span>\r\n          </Link>\r\n\r\n          <div className=\"h-full flex items-center space-x-4\">\r\n            {isSignedIn ? (\r\n              <>\r\n                <SignOutButton>\r\n                  <Button\r\n                    size=\"sm\"\r\n                    variant=\"ghost\"\r\n                  >\r\n                    Sign out\r\n                  </Button>\r\n                </SignOutButton>\r\n                <Link\r\n                  href=\"/dashboard\"\r\n                  className={buttonVariants({\r\n                    size: 'sm',\r\n                    className: 'hidden sm:flex items-center gap-1',\r\n                  })}\r\n                >\r\n                  Dashboard <ArrowRight className=\"h-4 w-4\" />\r\n                </Link>\r\n              </>\r\n            ) : (\r\n              <>\r\n                <Link\r\n                  href=\"/sign-in\"\r\n                  className={buttonVariants({\r\n                    variant: 'ghost',\r\n                    size: 'sm',\r\n                  })}\r\n                >\r\n                  Sign in\r\n                </Link>\r\n                <Link\r\n                  href=\"/sign-up\"\r\n                  className={buttonVariants({\r\n                    size: 'sm',\r\n                    className: 'hidden sm:flex items-center gap-1',\r\n                  })}\r\n                >\r\n                  Get started <ArrowRight className=\"h-4 w-4\" />\r\n                </Link>\r\n              </>\r\n            )}\r\n          </div>\r\n        </div>\r\n      </MaxWidthWrapper>\r\n    </nav>\r\n  );\r\n};\r\n"]}