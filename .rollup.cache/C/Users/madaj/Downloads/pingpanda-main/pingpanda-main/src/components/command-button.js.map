{"version":3,"file":"command-button.js","sourceRoot":"","sources":["command-button.tsx"],"names":[],"mappings":"AAAA,YAAY,CAAC;;;AAEb,OAAc,EAAE,SAAS,EAAE,QAAQ,EAAE,MAAM,OAAO,CAAC;AACnD,OAAO,EAAE,MAAM,EAAE,MAAM,wBAAwB,CAAC;AAChD,OAAO,EAAE,EAAE,EAAE,MAAM,SAAS,CAAC;AAC7B,OAAO,EACL,aAAa,EACb,YAAY,EACZ,YAAY,EACZ,YAAY,EACZ,WAAW,EACX,WAAW,EACX,eAAe,GAChB,MAAM,yBAAyB,CAAC;AACjC,OAAO,EAAE,cAAc,EAAE,MAAM,qBAAqB,CAAC;AACrD,OAAO,EAAE,OAAO,IAAI,WAAW,EAAE,MAAM,cAAc,CAAC;AAEtD;;GAEG;AACH,MAAM,UAAU,aAAa,CAAC,EAAgE;IAA9D,IAAA,SAAS,eAAA,EAAK,KAAK,cAArB,aAAuB,CAAF;IAC3C,IAAA,KAA2B,cAAc,EAAE,EAAzC,IAAI,UAAA,EAAE,OAAO,aAAA,EAAE,KAAK,WAAqB,CAAC;IAC5C,IAAA,KAA4B,QAAQ,CAAC,KAAK,CAAC,EAA1C,SAAS,QAAA,EAAE,YAAY,QAAmB,CAAC;IAElD,SAAS,CAAC;QACR,YAAY,CAAC,IAAI,CAAC,CAAC;IACrB,CAAC,EAAE,EAAE,CAAC,CAAC;IAEP,IAAI,CAAC,SAAS,EAAE,CAAC;QACf,OAAO,IAAI,CAAC;IACd,CAAC;IAED,OAAO,CACL,8BACE,MAAC,MAAM,IACL,OAAO,EAAC,SAAS,EACjB,IAAI,EAAC,IAAI,EACT,SAAS,EAAE,EAAE,CACX,kGAAkG,EAClG,SAAS,CACV,EACD,OAAO,EAAE,cAAM,OAAA,OAAO,CAAC,IAAI,CAAC,EAAb,CAAa,aAE5B,KAAC,WAAW,IAAC,SAAS,EAAC,SAAS,GAAG,EACnC,eAAM,SAAS,EAAC,SAAS,kCAAyB,IAC3C,EAET,MAAC,aAAa,IACZ,IAAI,EAAE,IAAI,EACV,YAAY,EAAE,OAAO,aAErB,KAAC,YAAY,IAAC,WAAW,EAAC,6BAA6B,GAAG,EAC1D,MAAC,WAAW,eACV,KAAC,YAAY,oCAAiC,EAC9C,KAAC,YAAY,IAAC,OAAO,EAAC,OAAO,YAC1B,KAAK,CAAC,GAAG,CAAC,UAAC,IAAI,IAAK,OAAA,CACnB,MAAC,WAAW,IAEV,QAAQ,EAAE;wCACR,IAAI,CAAC,QAAQ,EAAE,CAAC;wCAChB,OAAO,CAAC,KAAK,CAAC,CAAC;oCACjB,CAAC,EACD,SAAS,EAAC,gBAAgB,aAE1B,eAAM,SAAS,EAAC,MAAM,YAAE,IAAI,CAAC,IAAI,GAAQ,EACzC,yBAAO,IAAI,CAAC,IAAI,GAAQ,EACxB,MAAC,eAAe,yBAAG,IAAI,CAAC,QAAQ,IAAmB,KAT9C,IAAI,CAAC,IAAI,CAUF,CACf,EAboB,CAapB,CAAC,GACW,IACH,IACA,IACf,CACJ,CAAC;AACJ,CAAC","sourcesContent":["'use client';\r\n\r\nimport React, { useEffect, useState } from 'react';\r\nimport { Button } from '@/components/ui/button';\r\nimport { cn } from '@/utils';\r\nimport {\r\n  CommandDialog,\r\n  CommandEmpty,\r\n  CommandGroup,\r\n  CommandInput,\r\n  CommandItem,\r\n  CommandList,\r\n  CommandShortcut,\r\n} from '@/components/ui/command';\r\nimport { useCommandMenu } from '@/hooks/use-command';\r\nimport { Command as CommandIcon } from 'lucide-react';\r\n\r\n/**\r\n * Renders a command button that opens a dialog with a list of pages.\r\n */\r\nexport function CommandButton({ className, ...props }: React.HTMLAttributes<HTMLButtonElement>) {\r\n  const { open, setOpen, pages } = useCommandMenu();\r\n  const [isMounted, setIsMounted] = useState(false);\r\n\r\n  useEffect(() => {\r\n    setIsMounted(true);\r\n  }, []);\r\n\r\n  if (!isMounted) {\r\n    return null;\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Button\r\n        variant=\"outline\"\r\n        size=\"sm\"\r\n        className={cn(\r\n          'ml-2 h-9 w-9 p-0 flex items-center justify-center rounded-full border border-input bg-background',\r\n          className,\r\n        )}\r\n        onClick={() => setOpen(true)}\r\n      >\r\n        <CommandIcon className=\"h-4 w-4\" />\r\n        <span className=\"sr-only\">Open command menu</span>\r\n      </Button>\r\n\r\n      <CommandDialog\r\n        open={open}\r\n        onOpenChange={setOpen}\r\n      >\r\n        <CommandInput placeholder=\"Type a command or search...\" />\r\n        <CommandList>\r\n          <CommandEmpty>No results found.</CommandEmpty>\r\n          <CommandGroup heading=\"Pages\">\r\n            {pages.map((page) => (\r\n              <CommandItem\r\n                key={page.name}\r\n                onSelect={() => {\r\n                  page.onSelect();\r\n                  setOpen(false);\r\n                }}\r\n                className=\"cursor-pointer\"\r\n              >\r\n                <span className=\"mr-2\">{page.icon}</span>\r\n                <span>{page.name}</span>\r\n                <CommandShortcut>âŒ˜{page.shortcut}</CommandShortcut>\r\n              </CommandItem>\r\n            ))}\r\n          </CommandGroup>\r\n        </CommandList>\r\n      </CommandDialog>\r\n    </>\r\n  );\r\n}\r\n"]}