{"version":3,"file":"query-provider-wrapper.js","sourceRoot":"","sources":["query-provider-wrapper.tsx"],"names":[],"mappings":"AAAA,YAAY,CAAC;;AAEb,OAAc,EAAE,QAAQ,EAAE,MAAM,OAAO,CAAC;AACxC,OAAO,EAAE,WAAW,EAAE,mBAAmB,EAAE,MAAM,uBAAuB,CAAC;AACzE,OAAO,EAAE,kBAAkB,EAAE,MAAM,gCAAgC,CAAC;AAEpE,MAAM,UAAU,aAAa,CAAC,EAA2C;QAAzC,QAAQ,cAAA;IAC/B,IAAA,WAAW,GAAI,QAAQ,CAC5B;QACE,OAAA,IAAI,WAAW,CAAC;YACd,cAAc,EAAE;gBACd,OAAO,EAAE;oBACP,SAAS,EAAE,EAAE,GAAG,IAAI,EAAE,WAAW;oBACjC,oBAAoB,EAAE,KAAK;oBAC3B,KAAK,EAAE,CAAC;iBACT;aACF;SACF,CAAC;IARF,CAQE,CACL,GAXiB,CAWhB;IAEF,OAAO,CACL,MAAC,mBAAmB,IAAC,MAAM,EAAE,WAAW,aACrC,QAAQ,EACT,KAAC,kBAAkB,IAAC,aAAa,EAAE,KAAK,GAAI,IACxB,CACvB,CAAC;AACJ,CAAC","sourcesContent":["'use client';\n\nimport React, { useState } from 'react';\nimport { QueryClient, QueryClientProvider } from '@tanstack/react-query';\nimport { ReactQueryDevtools } from '@tanstack/react-query-devtools';\n\nexport function QueryProvider({ children }: { children: React.ReactNode }) {\n  const [queryClient] = useState(\n    () =>\n      new QueryClient({\n        defaultOptions: {\n          queries: {\n            staleTime: 60 * 1000, // 1 minute\n            refetchOnWindowFocus: false,\n            retry: 1,\n          },\n        },\n      })\n  );\n\n  return (\n    <QueryClientProvider client={queryClient}>\n      {children}\n      <ReactQueryDevtools initialIsOpen={false} />\n    </QueryClientProvider>\n  );\n}\n"]}