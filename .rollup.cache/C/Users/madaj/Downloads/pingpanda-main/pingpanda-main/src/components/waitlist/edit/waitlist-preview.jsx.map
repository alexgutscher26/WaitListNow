{"version":3,"file":"waitlist-preview.jsx","sourceRoot":"","sources":["waitlist-preview.tsx"],"names":[],"mappings":"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","sourcesContent":["import { useMemo } from 'react';\r\nimport { Button } from '@/components/ui/button';\r\nimport { Input } from '@/components/ui/input';\r\nimport { Label } from '@/components/ui/label';\r\n\r\ntype FieldType = 'text' | 'email' | 'number' | 'url' | 'tel' | 'textarea' | 'select';\r\ntype ButtonVariant = 'default' | 'outline' | 'secondary' | 'ghost' | 'link';\r\ntype ButtonRounded = 'none' | 'sm' | 'md' | 'lg' | 'full';\r\ntype FormLayout = 'stacked' | 'inline';\r\n\r\ninterface CustomField {\r\n  id: string;\r\n  name: string;\r\n  type: FieldType;\r\n  required: boolean;\r\n  placeholder?: string;\r\n  options?: string[];\r\n}\r\n\r\ninterface WaitlistStyle {\r\n  primaryColor: string;\r\n  buttonText: string;\r\n  buttonColor: string;\r\n  buttonTextColor: string;\r\n  buttonVariant: ButtonVariant;\r\n  buttonRounded: ButtonRounded;\r\n  formLayout: FormLayout;\r\n  showLabels: boolean;\r\n  backgroundColor: string;\r\n  textColor: string;\r\n  fontFamily: string;\r\n  boxShadow: string;\r\n  padding: string;\r\n  borderRadius: string;\r\n}\r\n\r\ninterface FormData {\r\n  name: string;\r\n  description: string;\r\n  websiteUrl: string;\r\n  redirectUrl: string;\r\n  logoUrl: string;\r\n  maxSignups?: number;\r\n  customFields: CustomField[];\r\n  style: WaitlistStyle;\r\n  settings: {\r\n    maxSignups?: number;\r\n    emailVerification: boolean;\r\n    allowDuplicates: boolean;\r\n    referralEnabled: boolean;\r\n    referralReward?: string;\r\n    customCss?: string;\r\n    customJs?: string;\r\n    showBranding?: boolean;\r\n  };\r\n}\r\n\r\ninterface WaitlistPreviewProps {\r\n  formData: FormData;\r\n}\r\n\r\nexport function WaitlistPreview({ formData }: WaitlistPreviewProps) {\r\n  // Helper function to get border radius value based on buttonRounded option\r\n  const getBorderRadius = (size: ButtonRounded = 'md'): string => {\r\n    const radiusMap = {\r\n      none: '0px',\r\n      sm: '0.25rem',\r\n      md: '0.375rem',\r\n      lg: '0.5rem',\r\n      full: '9999px',\r\n    };\r\n    return radiusMap[size] || '0.375rem';\r\n  };\r\n\r\n  // Determine form layout classes\r\n  const formLayoutClass =\r\n    formData.style?.formLayout === 'inline' ? 'flex flex-wrap gap-4 items-end' : 'space-y-4';\r\n\r\n  // Determine if we should show field labels\r\n  const showLabels = formData.style?.showLabels !== false; // Default to true if not specified\r\n\r\n  // Set CSS variables for primary color\r\n  const style = {\r\n    '--primary': formData.style?.primaryColor || '#3b82f6',\r\n    '--primary-foreground': formData.style?.buttonTextColor || '#ffffff',\r\n  } as React.CSSProperties;\r\n\r\n  const getBoxShadow = (size: string) => {\r\n    switch (size) {\r\n      case 'sm':\r\n        return '0 1px 2px 0 rgba(0, 0, 0, 0.05)';\r\n      case 'md':\r\n        return '0 4px 6px -1px rgba(0, 0, 0, 0.1), 0 2px 4px -1px rgba(0, 0, 0, 0.06)';\r\n      case 'lg':\r\n        return '0 10px 15px -3px rgba(0, 0, 0, 0.1), 0 4px 6px -2px rgba(0, 0, 0, 0.05)';\r\n      case 'xl':\r\n        return '0 20px 25px -5px rgba(0, 0, 0, 0.1), 0 10px 10px -5px rgba(0, 0, 0, 0.04)';\r\n      default:\r\n        return 'none';\r\n    }\r\n  };\r\n\r\n  const getFontFamily = (font: string) => {\r\n    const fonts: Record<string, string> = {\r\n      sans: 'ui-sans-serif, system-ui, -apple-system, BlinkMacSystemFont, \"Segoe UI\", Roboto, \"Helvetica Neue\", Arial, \"Noto Sans\", sans-serif, \"Apple Color Emoji\", \"Segoe UI Emoji\", \"Segoe UI Symbol\", \"Noto Color Emoji\"',\r\n      serif: 'ui-serif, Georgia, Cambria, \"Times New Roman\", Times, serif',\r\n      mono: 'ui-monospace, SFMono-Regular, Menlo, Monaco, Consolas, \"Liberation Mono\", \"Courier New\", monospace',\r\n      inter: '\"Inter\", ui-sans-serif, system-ui, -apple-system, sans-serif',\r\n      poppins: '\"Poppins\", ui-sans-serif, system-ui, -apple-system, sans-serif',\r\n    };\r\n    return fonts[font] || fonts.sans;\r\n  };\r\n\r\n  const containerStyle = useMemo(\r\n    () => ({\r\n      backgroundColor: formData.style.backgroundColor,\r\n      color: formData.style.textColor,\r\n      fontFamily: getFontFamily(formData.style.fontFamily),\r\n      boxShadow: getBoxShadow(formData.style.boxShadow),\r\n      borderRadius: getBorderRadius(formData.style.borderRadius as ButtonRounded),\r\n      padding: `${parseInt(formData.style.padding) * 0.5}rem`,\r\n    }),\r\n    [formData.style],\r\n  );\r\n\r\n  const buttonStyle = useMemo(\r\n    () => ({\r\n      backgroundColor: formData.style.buttonColor,\r\n      color: formData.style.buttonTextColor,\r\n      borderRadius: getBorderRadius(formData.style.buttonRounded as ButtonRounded),\r\n    }),\r\n    [formData.style],\r\n  );\r\n\r\n  const renderField = (field: CustomField) => {\r\n    const commonProps = {\r\n      key: field.id,\r\n      id: `field-${field.id}`,\r\n      name: field.name.toLowerCase().replace(/\\s+/g, '-'),\r\n      placeholder: field.placeholder || `Enter your ${field.name.toLowerCase()}`,\r\n      required: field.required,\r\n      className: 'w-full mt-1',\r\n      style: {\r\n        borderRadius: getBorderRadius(formData.style.borderRadius as ButtonRounded),\r\n        padding: '0.5rem 0.75rem',\r\n        border: '1px solid #e5e7eb',\r\n        backgroundColor:\r\n          formData.style.backgroundColor === formData.style.textColor\r\n            ? '#ffffff'\r\n            : formData.style.backgroundColor,\r\n        color: formData.style.textColor,\r\n      },\r\n    };\r\n\r\n    switch (field.type) {\r\n      case 'email':\r\n        return (\r\n          <Input\r\n            type=\"email\"\r\n            {...commonProps}\r\n          />\r\n        );\r\n      case 'number':\r\n        return (\r\n          <Input\r\n            type=\"number\"\r\n            {...commonProps}\r\n          />\r\n        );\r\n      case 'url':\r\n        return (\r\n          <Input\r\n            type=\"url\"\r\n            {...commonProps}\r\n          />\r\n        );\r\n      case 'tel':\r\n        return (\r\n          <Input\r\n            type=\"tel\"\r\n            {...commonProps}\r\n          />\r\n        );\r\n      case 'textarea':\r\n        return (\r\n          <textarea\r\n            {...commonProps}\r\n            rows={3}\r\n          />\r\n        );\r\n      case 'select':\r\n        return (\r\n          <select {...commonProps}>\r\n            <option value=\"\">Select {field.name.toLowerCase()}</option>\r\n            {field.options?.map((option, i) => (\r\n              <option\r\n                key={i}\r\n                value={option}\r\n              >\r\n                {option}\r\n              </option>\r\n            ))}\r\n          </select>\r\n        );\r\n      default:\r\n        return (\r\n          <Input\r\n            type=\"text\"\r\n            {...commonProps}\r\n          />\r\n        );\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div\r\n      className=\"min-h-screen flex items-center justify-center p-6\"\r\n      style={{\r\n        ...style,\r\n        backgroundColor: formData.style?.backgroundColor || '#f3f4f6',\r\n        fontFamily: formData.style?.fontFamily || 'Inter, sans-serif',\r\n      }}\r\n    >\r\n      <div className=\"w-full max-w-md\">\r\n        {/* Browser-style header */}\r\n        <div className=\"bg-gray-200 rounded-t-xl px-4 py-3 flex items-center space-x-3\">\r\n          <div className=\"flex space-x-2\">\r\n            <div className=\"w-3 h-3 bg-red-500 rounded-full\" />\r\n            <div className=\"w-3 h-3 bg-yellow-500 rounded-full\" />\r\n            <div className=\"w-3 h-3 bg-green-500 rounded-full\" />\r\n          </div>\r\n          <div className=\"flex-1 text-center\">\r\n            <span className=\"text-gray-700 text-sm font-normal\">waitlist.yourdomain.com</span>\r\n          </div>\r\n        </div>\r\n\r\n        {/* Main content card */}\r\n        <div\r\n          className=\"rounded-b-xl shadow-lg overflow-hidden transition-colors duration-200\"\r\n          style={{\r\n            backgroundColor: formData.style?.backgroundColor || '#ffffff',\r\n            color: formData.style?.textColor || '#1f2937',\r\n          }}\r\n        >\r\n          <div className=\"px-12 py-16 text-center\">\r\n            <h1\r\n              className=\"text-4xl font-bold mb-6 leading-tight\"\r\n              style={{\r\n                color: formData.style?.textColor || '#111827',\r\n              }}\r\n            >\r\n              {formData.name || 'Join the Waitlist'}\r\n            </h1>\r\n\r\n            {formData.description ? (\r\n              <p\r\n                className=\"text-lg mb-12 leading-relaxed font-normal\"\r\n                style={{\r\n                  color: formData.style?.textColor ? `${formData.style.textColor}CC` : '#4b5563',\r\n                }}\r\n              >\r\n                {formData.description}\r\n              </p>\r\n            ) : (\r\n              <p\r\n                className=\"text-lg mb-12 leading-relaxed font-normal\"\r\n                style={{\r\n                  color: formData.style?.textColor ? `${formData.style.textColor}CC` : '#4b5563',\r\n                }}\r\n              >\r\n                Be the first to know when we launch. Early adopters get exclusive perks!\r\n              </p>\r\n            )}\r\n\r\n            <div className={`mb-8 ${formLayoutClass}`}>\r\n              {/* Email input */}\r\n              <div\r\n                className={\r\n                  formData.style?.formLayout === 'inline' ? 'flex-1 min-w-[200px]' : 'w-full'\r\n                }\r\n              >\r\n                {showLabels && (\r\n                  <label\r\n                    htmlFor=\"email\"\r\n                    className=\"block text-left mb-2 text-sm font-medium\"\r\n                    style={{\r\n                      color: formData.style?.textColor || '#374151',\r\n                    }}\r\n                  >\r\n                    Email Address\r\n                  </label>\r\n                )}\r\n                <div className=\"relative\">\r\n                  <input\r\n                    id=\"email\"\r\n                    type=\"email\"\r\n                    placeholder=\"Enter your email\"\r\n                    className={\r\n                      'w-full px-6 py-4 border rounded-xl text-base transition-all duration-200 focus:outline-none focus:ring-2 placeholder-gray-400 font-normal'\r\n                    }\r\n                    style={\r\n                      {\r\n                        backgroundColor:\r\n                          formData.style?.backgroundColor === formData.style?.textColor\r\n                            ? '#ffffff'\r\n                            : formData.style?.backgroundColor || '#ffffff',\r\n                        color: formData.style?.textColor || '#1f2937',\r\n                        borderColor: formData.style?.primaryColor\r\n                          ? `${formData.style.primaryColor}40`\r\n                          : '#e5e7eb',\r\n                        borderWidth: '1px',\r\n                        borderRadius: formData.style?.buttonRounded\r\n                          ? getBorderRadius(formData.style.buttonRounded)\r\n                          : '0.5rem',\r\n                        '--tw-ring-color': formData.style?.primaryColor || '#3b82f6',\r\n                        '--tw-ring-opacity': '0.2',\r\n                        '--tw-ring-offset-shadow':\r\n                          'var(--tw-ring-inset) 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color)',\r\n                        '--tw-ring-shadow':\r\n                          'var(--tw-ring-inset) 0 0 0 calc(2px + var(--tw-ring-offset-width)) var(--tw-ring-color)',\r\n                        '--tw-ring-offset-width': '0px',\r\n                        '--tw-ring-offset-color': '#fff',\r\n                      } as React.CSSProperties\r\n                    }\r\n                  />\r\n                  <div className=\"absolute right-5 top-1/2 transform -translate-y-1/2\">\r\n                    <span className=\"text-xl\">🎯</span>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n\r\n              {/* Custom fields */}\r\n              {formData.customFields.map((field) => (\r\n                <div\r\n                  key={field.id}\r\n                  className={\r\n                    formData.style?.formLayout === 'inline' ? 'flex-1 min-w-[200px]' : 'w-full'\r\n                  }\r\n                >\r\n                  {showLabels && (\r\n                    <label\r\n                      htmlFor={field.id}\r\n                      className=\"block text-left mb-2 text-sm font-medium\"\r\n                      style={{\r\n                        color: formData.style?.textColor || '#374151',\r\n                      }}\r\n                    >\r\n                      {field.name}\r\n                      {field.required && <span className=\"text-red-500 ml-1\">*</span>}\r\n                    </label>\r\n                  )}\r\n                  <input\r\n                    id={field.id}\r\n                    type={field.type === 'email' ? 'email' : 'text'}\r\n                    placeholder={field.placeholder || `Enter your ${field.name.toLowerCase()}`}\r\n                    className={\r\n                      'w-full px-6 py-4 border rounded-xl text-base transition-all duration-200 focus:outline-none focus:ring-2 placeholder-gray-400 font-normal'\r\n                    }\r\n                    style={\r\n                      {\r\n                        backgroundColor:\r\n                          formData.style?.backgroundColor === formData.style?.textColor\r\n                            ? '#ffffff'\r\n                            : formData.style?.backgroundColor || '#ffffff',\r\n                        color: formData.style?.textColor || '#1f2937',\r\n                        borderColor: formData.style?.primaryColor\r\n                          ? `${formData.style.primaryColor}40`\r\n                          : '#e5e7eb',\r\n                        borderWidth: '1px',\r\n                        borderRadius: formData.style?.buttonRounded\r\n                          ? getBorderRadius(formData.style.buttonRounded)\r\n                          : '0.5rem',\r\n                        '--tw-ring-color': formData.style?.primaryColor || '#3b82f6',\r\n                        '--tw-ring-opacity': '0.2',\r\n                        '--tw-ring-offset-shadow':\r\n                          'var(--tw-ring-inset) 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color)',\r\n                        '--tw-ring-shadow':\r\n                          'var(--tw-ring-inset) 0 0 0 calc(2px + var(--tw-ring-offset-width)) var(--tw-ring-color)',\r\n                        '--tw-ring-offset-width': '0px',\r\n                        '--tw-ring-offset-color': '#fff',\r\n                      } as React.CSSProperties\r\n                    }\r\n                  />\r\n                </div>\r\n              ))}\r\n\r\n              {/* Submit button */}\r\n              <div\r\n                className={\r\n                  formData.style?.formLayout === 'inline' ? 'flex-1 min-w-[200px]' : 'w-full'\r\n                }\r\n              >\r\n                <button\r\n                  type=\"button\"\r\n                  className={\r\n                    'w-full px-8 py-4 text-base font-medium transition-all duration-200 focus:outline-none focus:ring-2 focus:ring-offset-2'\r\n                  }\r\n                  style={\r\n                    {\r\n                      backgroundColor:\r\n                        formData.style?.buttonColor || formData.style?.primaryColor || '#3b82f6',\r\n                      color: formData.style?.buttonTextColor || '#ffffff',\r\n                      borderRadius: formData.style?.buttonRounded\r\n                        ? getBorderRadius(formData.style.buttonRounded)\r\n                        : '0.5rem',\r\n                      '--tw-ring-offset-shadow':\r\n                        'var(--tw-ring-inset) 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color)',\r\n                      '--tw-ring-shadow':\r\n                        'var(--tw-ring-inset) 0 0 0 calc(2px + var(--tw-ring-offset-width)) var(--tw-ring-color)',\r\n                      '--tw-ring-color': formData.style?.primaryColor\r\n                        ? `${formData.style.primaryColor}80`\r\n                        : '#3b82f6',\r\n                      '--tw-ring-offset-width': '2px',\r\n                      '--tw-ring-offset-color': formData.style?.backgroundColor || '#ffffff',\r\n                      '--tw-ring-opacity': '0.5',\r\n                    } as React.CSSProperties\r\n                  }\r\n                >\r\n                  {formData.style?.buttonText || 'Join the Waitlist'}\r\n                </button>\r\n              </div>\r\n            </div>\r\n\r\n            {/* Additional information */}\r\n            {(formData.settings?.maxSignups || formData.settings?.emailVerification) && (\r\n              <div className=\"text-sm text-gray-500 space-y-2\">\r\n                {formData.settings?.maxSignups && (\r\n                  <p>Spots remaining: {formData.settings.maxSignups}</p>\r\n                )}\r\n                {formData.settings?.emailVerification && (\r\n                  <p className=\"flex items-center justify-center space-x-2\">\r\n                    <svg\r\n                      className=\"w-4 h-4 text-green-500\"\r\n                      fill=\"none\"\r\n                      stroke=\"currentColor\"\r\n                      viewBox=\"0 0 24 24\"\r\n                      xmlns=\"http://www.w3.org/2000/svg\"\r\n                    >\r\n                      <path\r\n                        strokeLinecap=\"round\"\r\n                        strokeLinejoin=\"round\"\r\n                        strokeWidth={2}\r\n                        d=\"M5 13l4 4L19 7\"\r\n                      />\r\n                    </svg>\r\n                    <span>Email verification required</span>\r\n                  </p>\r\n                )}\r\n              </div>\r\n            )}\r\n\r\n            {/* Branding */}\r\n            {formData.settings?.showBranding !== false && (\r\n              <div className=\"mt-8 pt-6 border-t border-gray-100\">\r\n                <p className=\"text-xs text-gray-400\">\r\n                  Powered by <span className=\"font-medium\">WaitlistNow</span>\r\n                </p>\r\n              </div>\r\n            )}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n"]}