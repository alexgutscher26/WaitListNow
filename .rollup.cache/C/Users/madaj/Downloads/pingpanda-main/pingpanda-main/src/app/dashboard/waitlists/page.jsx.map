{"version":3,"file":"page.jsx","sourceRoot":"","sources":["page.tsx"],"names":[],"mappings":"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","sourcesContent":["'use client';\r\n\r\nimport { Button } from '@/components/ui/button';\r\nimport { Card, CardContent, CardDescription, CardHeader, CardTitle } from '@/components/ui/card';\r\nimport { Plus, Users, Eye, Copy, Trash2, MoreVertical, AlertCircle, RefreshCw } from 'lucide-react';\r\nimport { Badge } from '@/components/ui/badge';\r\nimport { Skeleton } from '@/components/ui/skeleton';\r\nimport { useQuery, useMutation, useQueryClient, UseQueryResult } from '@tanstack/react-query';\r\nimport { useToast } from '@/components/ui/use-toast';\r\nimport { useRouter } from 'next/navigation';\r\nimport Link from 'next/link';\r\nimport {\r\n  DropdownMenu,\r\n  DropdownMenuContent,\r\n  DropdownMenuItem,\r\n  DropdownMenuTrigger,\r\n  DropdownMenuSub,\r\n  DropdownMenuSubTrigger,\r\n  DropdownMenuPortal,\r\n  DropdownMenuSubContent,\r\n  DropdownMenuSeparator,\r\n} from '@/components/ui/dropdown-menu';\r\nimport { DashboardPage } from '@/components/dashboard-page';\r\n\r\n// Define the Waitlist type based on the Prisma model\r\ntype Waitlist = {\r\n  id: string;\r\n  name: string;\r\n  status: 'DRAFT' | 'ACTIVE' | 'PAUSED' | 'ARCHIVED';\r\n  slug: string;\r\n  description: string | null;\r\n  websiteUrl: string | null;\r\n  redirectUrl: string | null;\r\n  userId: string;\r\n  createdAt: string | Date;\r\n  updatedAt: string | Date;\r\n};\r\n\r\ntype WaitlistWithCount = Waitlist & {\r\n  _count: {\r\n    subscribers: number;\r\n  };\r\n};\r\n\r\n// API response type for better type safety\r\ntype ApiResponse<T> = {\r\n  data?: T;\r\n  error?: string;\r\n  status: number;\r\n};\r\n\r\n// Renders a waitlist skeleton UI component with loading placeholders.\r\nfunction WaitlistSkeleton() {\r\n  return (\r\n    <div className=\"space-y-4\">\r\n      {[1, 2, 3].map((i) => (\r\n        <Card\r\n          key={i}\r\n          className=\"animate-pulse\"\r\n        >\r\n          <CardContent className=\"p-6\">\r\n            <div className=\"flex items-center justify-between\">\r\n              <div className=\"space-y-2\">\r\n                <Skeleton className=\"h-5 w-48\" />\r\n                <Skeleton className=\"h-4 w-64\" />\r\n              </div>\r\n              <div className=\"flex items-center space-x-4\">\r\n                <Skeleton className=\"h-9 w-20\" />\r\n                <Skeleton className=\"h-9 w-9 rounded-full\" />\r\n              </div>\r\n            </div>\r\n          </CardContent>\r\n        </Card>\r\n      ))}\r\n    </div>\r\n  );\r\n}\r\n\r\nasync function deleteWaitlist(id: string): Promise<{ success: boolean }> {\r\n  const res = await fetch(`/api/waitlists/${id}`, {\r\n    method: 'DELETE',\r\n  });\r\n\r\n  if (!res.ok) {\r\n    const error = await res.json();\r\n    throw new Error(error.message || 'Failed to delete waitlist');\r\n  }\r\n\r\n  return await res.json();\r\n}\r\n\r\nexport default function WaitlistsPage() {\r\n  const { toast } = useToast();\r\n  const router = useRouter();\r\n  const queryClient = useQueryClient();\r\n\r\n  // Fetch waitlists with proper typing and error handling\r\n  const {\r\n    data: waitlists = [],\r\n    isLoading,\r\n    isError,\r\n    error,\r\n    refetch,\r\n  } = useQuery<WaitlistWithCount[]>({\r\n    queryKey: ['waitlists'],\r\n    queryFn: async (): Promise<WaitlistWithCount[]> => {\r\n      // console.log('[WaitlistsPage] Fetching waitlists...');\r\n      const res = await fetch('/api/waitlists', {\r\n        method: 'GET',\r\n        headers: { 'Content-Type': 'application/json' },\r\n        cache: 'no-store',\r\n        credentials: 'include',\r\n      });\r\n\r\n      // console.log('[WaitlistsPage] Response status:', res.status);\r\n\r\n      if (!res.ok) {\r\n        const errorText = await res.text();\r\n        console.error('[WaitlistsPage] Error response:', errorText);\r\n        let errorData;\r\n        try {\r\n          errorData = JSON.parse(errorText);\r\n        } catch {\r\n          errorData = { message: 'Failed to parse error response' };\r\n        }\r\n        throw new Error(\r\n          errorData.message || `Failed to fetch waitlists (${res.status} ${res.statusText})`,\r\n        );\r\n      }\r\n\r\n      const data = await res.json();\r\n      // console.log('[WaitlistsPage] Raw API response:', data);\r\n\r\n      if (!Array.isArray(data)) {\r\n        console.error('[WaitlistsPage] Invalid response format:', data);\r\n        throw new Error('Invalid response format from server: expected an array');\r\n      }\r\n\r\n      // console.log(`[WaitlistsPage] Successfully fetched ${data.length} waitlists`);\r\n      return data;\r\n    },\r\n    refetchOnWindowFocus: false,\r\n    refetchOnMount: true,\r\n    retry: 1,\r\n    retryDelay: 1500,\r\n  });\r\n\r\n  // Delete mutation\r\n  const deleteMutation = useMutation({\r\n    mutationFn: deleteWaitlist,\r\n    onSuccess: () => {\r\n      queryClient.invalidateQueries({ queryKey: ['waitlists'] });\r\n      toast({\r\n        title: 'Success',\r\n        description: 'Waitlist deleted successfully',\r\n      });\r\n    },\r\n    onError: (error) => {\r\n      console.error('Error deleting waitlist:', error);\r\n      toast({\r\n        title: 'Error',\r\n        description: 'Failed to delete waitlist',\r\n        variant: 'destructive',\r\n      });\r\n    },\r\n  });\r\n\r\n  const updateStatusMutation = useMutation({\r\n    mutationFn: async ({ id, status }: { id: string; status: string }) => {\r\n      const response = await fetch(`/api/waitlists/${id}`, {\r\n        method: 'PATCH',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify({ status }),\r\n      });\r\n\r\n      if (!response.ok) {\r\n        const error = await response.json();\r\n        throw new Error(error.error || 'Failed to update status');\r\n      }\r\n      return response.json();\r\n    },\r\n    onSuccess: () => {\r\n      queryClient.invalidateQueries({ queryKey: ['waitlists'] });\r\n      toast({\r\n        title: 'Success',\r\n        description: 'Waitlist status updated successfully',\r\n      });\r\n    },\r\n    onError: (error: Error) => {\r\n      console.error('Error updating status:', error);\r\n      toast({\r\n        title: 'Error',\r\n        description: error.message || 'Failed to update status',\r\n        variant: 'destructive',\r\n      });\r\n    },\r\n  });\r\n\r\n  const handleStatusChange = (id: string, newStatus: string) => {\r\n    updateStatusMutation.mutate({ id, status: newStatus });\r\n  };\r\n\r\n  // Copy to clipboard function\r\n  const copyToClipboard = (text: string) => {\r\n    navigator.clipboard.writeText(text);\r\n    toast({\r\n      title: 'Copied!',\r\n      description: 'Link copied to clipboard',\r\n      variant: 'default',\r\n    });\r\n  };\r\n\r\n  // Format date helper with proper type checking\r\n  const formatDate = (dateInput: string | Date | null | undefined): string => {\r\n    if (!dateInput) return 'N/A';\r\n\r\n    try {\r\n      const date = dateInput instanceof Date ? dateInput : new Date(dateInput);\r\n\r\n      // Check if date is valid\r\n      if (isNaN(date.getTime())) {\r\n        console.warn('Invalid date provided to formatDate:', dateInput);\r\n        return 'Invalid date';\r\n      }\r\n\r\n      // Format the date\r\n      return date.toLocaleDateString('en-US', {\r\n        year: 'numeric',\r\n        month: 'short',\r\n        day: 'numeric',\r\n      });\r\n    } catch (error) {\r\n      console.error('Error formatting date:', error, 'Input:', dateInput);\r\n      return 'Invalid date';\r\n    }\r\n  };\r\n\r\n  // Ensure waitlists is always an array and properly typed\r\n  const safeWaitlists: WaitlistWithCount[] = (() => {\r\n    if (!Array.isArray(waitlists)) {\r\n      console.error('[WaitlistsPage] waitlists is not an array:', waitlists);\r\n      return [];\r\n    }\r\n\r\n    const filtered = waitlists.filter((wl): wl is WaitlistWithCount => {\r\n      const isValid =\r\n        wl !== null &&\r\n        typeof wl === 'object' &&\r\n        'id' in wl &&\r\n        '_count' in wl &&\r\n        wl._count !== null &&\r\n        typeof wl._count === 'object' &&\r\n        'subscribers' in wl._count;\r\n\r\n      if (!isValid) {\r\n        console.warn('[WaitlistsPage] Invalid waitlist item:', wl);\r\n      }\r\n\r\n      return isValid;\r\n    });\r\n\r\n    // console.log(\r\n    //    `[WaitlistsPage] Filtered ${filtered.length} valid waitlists out of ${waitlists.length}`,\r\n    // );\r\n    return filtered;\r\n  })();\r\n\r\n  const hasWaitlists = safeWaitlists.length > 0;\r\n  // console.log(`[WaitlistsPage] hasWaitlists: ${hasWaitlists} (${safeWaitlists.length} waitlists)`);\r\n\r\n  // Calculate total subscribers safely\r\n  const totalSubscribers = safeWaitlists.reduce<number>((sum, wl) => {\r\n    try {\r\n      const subscribers = wl._count?.subscribers;\r\n      return sum + (typeof subscribers === 'number' ? subscribers : 0);\r\n    } catch (error) {\r\n      console.error('Error calculating subscribers:', error);\r\n      return sum;\r\n    }\r\n  }, 0);\r\n\r\n  // Count active waitlists\r\n  const activeWaitlists = safeWaitlists.filter((wl) => wl.status === 'ACTIVE').length;\r\n\r\n  // Get the most recent update time with proper type checking\r\n  const lastUpdated = (() => {\r\n    if (!hasWaitlists) return formatDate(new Date());\r\n\r\n    try {\r\n      const sorted = [...safeWaitlists]\r\n        .filter((wl) => wl.updatedAt)\r\n        .sort((a, b) => {\r\n          const dateA = a.updatedAt ? new Date(a.updatedAt).getTime() : 0;\r\n          const dateB = b.updatedAt ? new Date(b.updatedAt).getTime() : 0;\r\n          return dateB - dateA;\r\n        });\r\n\r\n      const mostRecent = sorted[0]?.updatedAt;\r\n      return mostRecent ? formatDate(mostRecent) : formatDate(new Date());\r\n    } catch (error) {\r\n      console.error('Error determining last updated date:', error);\r\n      return formatDate(new Date());\r\n    }\r\n  })();\r\n\r\n  // Handle error state with retry button\r\n  if (isError) {\r\n    return (\r\n      <DashboardPage\r\n        title=\"Waitlists\"\r\n        description=\"Manage your waitlists\"\r\n        actions={\r\n          <Button asChild>\r\n            <Link href=\"/dashboard/waitlists/new\">\r\n              <Plus className=\"mr-2 h-4 w-4\" />\r\n              New Waitlist\r\n            </Link>\r\n          </Button>\r\n        }\r\n      >\r\n        <div className=\"flex flex-col items-center justify-center space-y-4 py-12\">\r\n          <div className=\"rounded-full bg-red-100 p-4\">\r\n            <AlertCircle className=\"h-8 w-8 text-red-600\" />\r\n          </div>\r\n          <h3 className=\"text-lg font-medium\">Failed to load waitlists</h3>\r\n          <p className=\"text-sm text-muted-foreground\">\r\n            {error?.message || 'An unknown error occurred'}\r\n          </p>\r\n          <Button\r\n            variant=\"outline\"\r\n            onClick={() => refetch()}\r\n            className=\"mt-4\"\r\n          >\r\n            <RefreshCw className=\"mr-2 h-4 w-4\" />\r\n            Retry\r\n          </Button>\r\n        </div>\r\n      </DashboardPage>\r\n    );\r\n  }\r\n\r\n  // Handle empty state\r\n  if (!isLoading && (!waitlists || waitlists.length === 0)) {\r\n    return (\r\n      <DashboardPage\r\n        title=\"Waitlists\"\r\n        cta={\r\n          <Button asChild>\r\n            <Link href=\"/dashboard/waitlists/new\">\r\n              <Plus className=\"mr-2 h-4 w-4\" />\r\n              New Waitlist\r\n            </Link>\r\n          </Button>\r\n        }\r\n      >\r\n        <div className=\"flex flex-col items-center justify-center space-y-4 p-8 text-center\">\r\n          <div className=\"rounded-full bg-muted p-4\">\r\n            <Users className=\"h-8 w-8 text-muted-foreground\" />\r\n          </div>\r\n          <h3 className=\"text-xl font-semibold\">No waitlists yet</h3>\r\n          <p className=\"text-muted-foreground\">\r\n            Get started by creating your first waitlist to collect subscribers.\r\n          </p>\r\n          <Button asChild>\r\n            <Link href=\"/dashboard/waitlists/new\">\r\n              <Plus className=\"mr-2 h-4 w-4\" />\r\n              Create Waitlist\r\n            </Link>\r\n          </Button>\r\n        </div>\r\n      </DashboardPage>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <DashboardPage\r\n      title=\"Waitlists\"\r\n      cta={\r\n        <Button asChild>\r\n          <Link href=\"/dashboard/waitlists/new\">\r\n            <Plus className=\"mr-2 h-4 w-4\" />\r\n            New Waitlist\r\n          </Link>\r\n        </Button>\r\n      }\r\n    >\r\n      <div className=\"space-y-6\">\r\n        {/* Stats Grid */}\r\n        <div className=\"grid gap-4 md:grid-cols-2 lg:grid-cols-4\">\r\n          <Card>\r\n            <CardHeader className=\"flex flex-row items-center justify-between space-y-0 pb-2\">\r\n              <CardTitle className=\"text-sm font-medium\">Total Waitlists</CardTitle>\r\n              <Users className=\"h-4 w-4 text-muted-foreground\" />\r\n            </CardHeader>\r\n            <CardContent>\r\n              {isLoading ? (\r\n                <Skeleton className=\"h-8 w-16\" />\r\n              ) : (\r\n                <div className=\"text-2xl font-bold\">{waitlists?.length || 0}</div>\r\n              )}\r\n              <div className=\"text-xs text-muted-foreground\">\r\n                {isLoading ? <Skeleton className=\"mt-2 h-4 w-32\" /> : 'All your waitlists'}\r\n              </div>\r\n            </CardContent>\r\n          </Card>\r\n\r\n          <Card>\r\n            <CardHeader className=\"flex flex-row items-center justify-between space-y-0 pb-2\">\r\n              <CardTitle className=\"text-sm font-medium\">Total Subscribers</CardTitle>\r\n              <Users className=\"h-4 w-4 text-muted-foreground\" />\r\n            </CardHeader>\r\n            <CardContent>\r\n              {isLoading ? (\r\n                <Skeleton className=\"h-8 w-16\" />\r\n              ) : (\r\n                <div className=\"text-2xl font-bold\">{totalSubscribers.toLocaleString()}</div>\r\n              )}\r\n              <div className=\"text-xs text-muted-foreground\">\r\n                {isLoading ? <Skeleton className=\"mt-2 h-4 w-32\" /> : 'Across all waitlists'}\r\n              </div>\r\n            </CardContent>\r\n          </Card>\r\n\r\n          <Card>\r\n            <CardHeader className=\"flex flex-row items-center justify-between space-y-0 pb-2\">\r\n              <CardTitle className=\"text-sm font-medium\">Active</CardTitle>\r\n              <div className=\"h-4 w-4 rounded-full bg-green-500\" />\r\n            </CardHeader>\r\n            <CardContent>\r\n              {isLoading ? (\r\n                <Skeleton className=\"h-8 w-16\" />\r\n              ) : (\r\n                <div className=\"text-2xl font-bold\">{activeWaitlists}</div>\r\n              )}\r\n              <div className=\"text-xs text-muted-foreground\">\r\n                {isLoading ? (\r\n                  <Skeleton className=\"mt-2 h-4 w-32\" />\r\n                ) : waitlists?.length ? (\r\n                  `${Math.round((activeWaitlists / (waitlists?.length || 1)) * 100)}% of total`\r\n                ) : (\r\n                  'No waitlists yet'\r\n                )}\r\n              </div>\r\n            </CardContent>\r\n          </Card>\r\n\r\n          <Card>\r\n            <CardHeader className=\"flex flex-row items-center justify-between space-y-0 pb-2\">\r\n              <CardTitle className=\"text-sm font-medium\">Last Updated</CardTitle>\r\n              <span className=\"h-4 w-4 text-muted-foreground\">🔄</span>\r\n            </CardHeader>\r\n            <CardContent>\r\n              {isLoading ? (\r\n                <Skeleton className=\"h-8 w-32\" />\r\n              ) : (\r\n                <div className=\"text-2xl font-bold\">{lastUpdated}</div>\r\n              )}\r\n              <div className=\"text-xs text-muted-foreground\">\r\n                {isLoading ? <Skeleton className=\"mt-2 h-4 w-20\" /> : 'Last activity'}\r\n              </div>\r\n            </CardContent>\r\n          </Card>\r\n        </div>\r\n\r\n        {/* Waitlists List */}\r\n        <Card>\r\n          <CardHeader>\r\n            <div className=\"flex items-center justify-between\">\r\n              <div>\r\n                <CardTitle>Your Waitlists</CardTitle>\r\n                <CardDescription>\r\n                  {hasWaitlists\r\n                    ? 'Manage your waitlists and view subscriber analytics'\r\n                    : 'Create your first waitlist to start collecting subscribers'}\r\n                </CardDescription>\r\n              </div>\r\n              <Button asChild>\r\n                <Link href=\"/dashboard/waitlists/new\">\r\n                  <Plus className=\"mr-2 h-4 w-4\" />\r\n                  New Waitlist\r\n                </Link>\r\n              </Button>\r\n            </div>\r\n          </CardHeader>\r\n          <CardContent>\r\n            {isLoading ? (\r\n              <div className=\"space-y-4\">\r\n                {[...Array(3)].map((_, i) => (\r\n                  <WaitlistSkeleton key={i} />\r\n                ))}\r\n              </div>\r\n            ) : hasWaitlists ? (\r\n              <div className=\"space-y-4\">\r\n                {waitlists.map((waitlist) => (\r\n                  <div\r\n                    key={waitlist.id}\r\n                    className=\"flex items-center justify-between rounded-lg border p-4 hover:bg-accent/50 transition-colors cursor-pointer\"\r\n                    onClick={() => router.push(`/dashboard/waitlists/${waitlist.id}`)}\r\n                  >\r\n                    <div className=\"flex items-center space-x-4\">\r\n                      <div className=\"rounded-md bg-primary/10 p-2\">\r\n                        <Users className=\"h-6 w-6 text-primary\" />\r\n                      </div>\r\n                      <div>\r\n                        <div className=\"flex items-center space-x-2\">\r\n                          <h3 className=\"font-medium\">{waitlist.name}</h3>\r\n                          <Badge variant={waitlist.status === 'ACTIVE' ? 'default' : 'secondary'}>\r\n                            {waitlist.status.charAt(0) + waitlist.status.slice(1).toLowerCase()}\r\n                          </Badge>\r\n                        </div>\r\n                        <p className=\"text-sm text-muted-foreground\">\r\n                          {waitlist._count.subscribers} subscribers • Created{' '}\r\n                          {formatDate(waitlist.createdAt.toString())}\r\n                        </p>\r\n                      </div>\r\n                    </div>\r\n                    <DropdownMenu>\r\n                      <DropdownMenuTrigger asChild>\r\n                        <Button\r\n                          variant=\"ghost\"\r\n                          size=\"icon\"\r\n                          onClick={(e) => e.stopPropagation()}\r\n                        >\r\n                          <MoreVertical className=\"h-4 w-4\" />\r\n                        </Button>\r\n                      </DropdownMenuTrigger>\r\n                      <DropdownMenuContent\r\n                        align=\"end\"\r\n                        className=\"w-48\"\r\n                      >\r\n                        <DropdownMenuItem\r\n                          onClick={(e) => {\r\n                            e.stopPropagation();\r\n                            router.push(`/dashboard/waitlists/${waitlist.id}`);\r\n                          }}\r\n                        >\r\n                          <Eye className=\"mr-2 h-4 w-4\" />\r\n                          View Details\r\n                        </DropdownMenuItem>\r\n                        <DropdownMenuItem\r\n                          onClick={(e) => {\r\n                            e.stopPropagation();\r\n                            const waitlistUrl = `${window.location.origin}/waitlist/${waitlist.slug}`;\r\n                            copyToClipboard(waitlistUrl);\r\n                          }}\r\n                        >\r\n                          <Copy className=\"mr-2 h-4 w-4\" />\r\n                          Copy Link\r\n                        </DropdownMenuItem>\r\n                        <DropdownMenuSeparator />\r\n                        <DropdownMenuSub>\r\n                          <DropdownMenuSubTrigger className=\"cursor-pointer\">\r\n                            <span className=\"flex items-center\">\r\n                              <span\r\n                                className=\"mr-2 h-2 w-2 rounded-full\"\r\n                                style={{\r\n                                  backgroundColor:\r\n                                    waitlist.status === 'ACTIVE'\r\n                                      ? '#10B981'\r\n                                      : waitlist.status === 'PAUSED'\r\n                                        ? '#F59E0B'\r\n                                        : waitlist.status === 'ARCHIVED'\r\n                                          ? '#6B7280'\r\n                                          : '#9CA3AF',\r\n                                }}\r\n                              />\r\n                              Status:{' '}\r\n                              {waitlist.status.charAt(0) + waitlist.status.slice(1).toLowerCase()}\r\n                            </span>\r\n                          </DropdownMenuSubTrigger>\r\n                          <DropdownMenuPortal>\r\n                            <DropdownMenuSubContent>\r\n                              {['DRAFT', 'ACTIVE', 'PAUSED', 'ARCHIVED'].map((status) => (\r\n                                <DropdownMenuItem\r\n                                  key={status}\r\n                                  className={status === waitlist.status ? 'bg-accent' : ''}\r\n                                  onClick={(e) => {\r\n                                    e.stopPropagation();\r\n                                    if (status !== waitlist.status) {\r\n                                      handleStatusChange(waitlist.id, status);\r\n                                    }\r\n                                  }}\r\n                                >\r\n                                  <span className=\"flex items-center\">\r\n                                    <span\r\n                                      className=\"mr-2 h-2 w-2 rounded-full\"\r\n                                      style={{\r\n                                        backgroundColor:\r\n                                          status === 'ACTIVE'\r\n                                            ? '#10B981'\r\n                                            : status === 'PAUSED'\r\n                                              ? '#F59E0B'\r\n                                              : status === 'ARCHIVED'\r\n                                                ? '#6B7280'\r\n                                                : '#9CA3AF',\r\n                                      }}\r\n                                    />\r\n                                    {status.charAt(0) + status.slice(1).toLowerCase()}\r\n                                  </span>\r\n                                </DropdownMenuItem>\r\n                              ))}\r\n                            </DropdownMenuSubContent>\r\n                          </DropdownMenuPortal>\r\n                        </DropdownMenuSub>\r\n                        <DropdownMenuSeparator />\r\n                        <DropdownMenuItem\r\n                          className=\"text-destructive\"\r\n                          onClick={(e) => {\r\n                            e.stopPropagation();\r\n                            if (\r\n                              confirm(\r\n                                'Are you sure you want to delete this waitlist? This action cannot be undone.',\r\n                              )\r\n                            ) {\r\n                              deleteMutation.mutate(waitlist.id);\r\n                            }\r\n                          }}\r\n                          disabled={deleteMutation.isPending}\r\n                        >\r\n                          {deleteMutation.isPending ? (\r\n                            <>\r\n                              <span className=\"mr-2 h-4 w-4 animate-spin\">↻</span>\r\n                              Deleting...\r\n                            </>\r\n                          ) : (\r\n                            <>\r\n                              <Trash2 className=\"mr-2 h-4 w-4\" />\r\n                              Delete\r\n                            </>\r\n                          )}\r\n                        </DropdownMenuItem>\r\n                      </DropdownMenuContent>\r\n                    </DropdownMenu>\r\n                  </div>\r\n                ))}\r\n              </div>\r\n            ) : (\r\n              <div className=\"flex flex-col items-center justify-center space-y-4 p-8 text-center\">\r\n                <div className=\"rounded-full bg-muted p-4\">\r\n                  <Users className=\"h-8 w-8 text-muted-foreground\" />\r\n                </div>\r\n                <h3 className=\"text-xl font-semibold\">No waitlists yet</h3>\r\n                <p className=\"text-muted-foreground\">\r\n                  Get started by creating your first waitlist to collect subscribers.\r\n                </p>\r\n                <Button asChild>\r\n                  <Link href=\"/dashboard/waitlists/new\">\r\n                    <Plus className=\"mr-2 h-4 w-4\" />\r\n                    Create Waitlist\r\n                  </Link>\r\n                </Button>\r\n              </div>\r\n            )}\r\n          </CardContent>\r\n        </Card>\r\n      </div>\r\n    </DashboardPage>\r\n  );\r\n}\r\n"]}