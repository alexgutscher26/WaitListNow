{"version":3,"file":"RecentActivityModal.js","sourceRoot":"","sources":["RecentActivityModal.tsx"],"names":[],"mappings":"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","sourcesContent":["'use client';\r\nimport React, { useState } from 'react';\r\nimport { Button } from '@/components/ui/button';\r\nimport {\r\n  Dialog,\r\n  DialogContent,\r\n  DialogHeader,\r\n  DialogTitle,\r\n  DialogDescription,\r\n  DialogFooter,\r\n} from '@/components/ui/dialog';\r\nimport { ChevronRight } from 'lucide-react';\r\nimport ActivityItem from './ActivityItem';\r\n\r\ninterface RecentActivityModalProps {\r\n  recentActivity: any[];\r\n}\r\n\r\nfunction formatActivityMessage(activity: any) {\r\n  switch (activity.type) {\r\n    case 'new_subscriber':\r\n      return (\r\n        <div>\r\n          <p className=\"text-sm font-medium\">\r\n            <span className=\"font-semibold\">{activity.name}</span> joined{' '}\r\n            <span className=\"text-primary\">{activity.waitlist}</span>\r\n          </p>\r\n          <p className=\"text-xs text-muted-foreground\">{activity.email}</p>\r\n        </div>\r\n      );\r\n    case 'waitlist_created':\r\n      return (\r\n        <div>\r\n          <p className=\"text-sm font-medium\">New waitlist created</p>\r\n          <p className=\"text-xs text-muted-foreground\">{activity.name}</p>\r\n        </div>\r\n      );\r\n    case 'referral':\r\n      return (\r\n        <div>\r\n          <p className=\"text-sm font-medium\">\r\n            <span className=\"font-semibold\">{activity.referrer}</span> referred someone\r\n          </p>\r\n          <p className=\"text-xs text-muted-foreground\">\r\n            {activity.referred} â€¢ Reward: {activity.reward}\r\n          </p>\r\n        </div>\r\n      );\r\n    case 'conversion':\r\n      return (\r\n        <div>\r\n          <p className=\"text-sm font-medium\">\r\n            <span className=\"font-semibold\">{activity.name}</span> converted from{' '}\r\n            <span className=\"text-primary\">{activity.waitlist}</span>\r\n          </p>\r\n          <p className=\"text-xs text-muted-foreground\">Revenue: {activity.revenue}</p>\r\n        </div>\r\n      );\r\n    case 'milestone':\r\n      return (\r\n        <div>\r\n          <p className=\"text-sm font-medium\">{activity.message}</p>\r\n        </div>\r\n      );\r\n    default:\r\n      return <p className=\"text-sm\">Unknown activity</p>;\r\n  }\r\n}\r\n\r\nconst RecentActivityModal: React.FC<RecentActivityModalProps> = ({ recentActivity }) => {\r\n  const [open, setOpen] = useState(false);\r\n\r\n  return (\r\n    <>\r\n      <Button\r\n        variant=\"ghost\"\r\n        size=\"sm\"\r\n        className=\"text-sm text-brand-600 hover:text-brand-700\"\r\n        onClick={() => setOpen(true)}\r\n      >\r\n        View all\r\n        <ChevronRight className=\"ml-1 h-4 w-4\" />\r\n      </Button>\r\n      <Dialog\r\n        open={open}\r\n        onOpenChange={setOpen}\r\n      >\r\n        <DialogContent className=\"max-w-2xl w-full\">\r\n          <DialogHeader>\r\n            <DialogTitle>All Recent Activity</DialogTitle>\r\n            <DialogDescription>\r\n              Full list of your recent actions across all waitlists.\r\n            </DialogDescription>\r\n          </DialogHeader>\r\n          <div className=\"max-h-[60vh] overflow-y-auto divide-y divide-gray-100\">\r\n            {recentActivity && recentActivity.length > 0 ? (\r\n              recentActivity.map((activity) => (\r\n                <ActivityItem\r\n                  key={activity.id}\r\n                  activity={activity}\r\n                  iconType={activity.type}\r\n                  message={formatActivityMessage(activity)}\r\n                />\r\n              ))\r\n            ) : (\r\n              <div className=\"p-6 text-center text-sm text-gray-500\">\r\n                No recent activities found\r\n              </div>\r\n            )}\r\n          </div>\r\n          <DialogFooter>\r\n            <Button\r\n              variant=\"outline\"\r\n              onClick={() => setOpen(false)}\r\n            >\r\n              Close\r\n            </Button>\r\n          </DialogFooter>\r\n        </DialogContent>\r\n      </Dialog>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default RecentActivityModal;\r\n"]}