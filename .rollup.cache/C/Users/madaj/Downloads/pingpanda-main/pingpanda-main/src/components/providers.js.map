{"version":3,"file":"providers.js","sourceRoot":"","sources":["providers.tsx"],"names":[],"mappings":"AAAA,YAAY,CAAC;;AAEb,OAAc,EAAqB,QAAQ,EAAE,MAAM,OAAO,CAAC;AAC3D,OAAO,EAAE,UAAU,EAAE,WAAW,EAAE,mBAAmB,EAAE,MAAM,uBAAuB,CAAC;AACrF,OAAO,EAAE,aAAa,EAAE,MAAM,qBAAqB,CAAC;AACpD,OAAO,EAAE,eAAe,EAAE,MAAM,+BAA+B,CAAC;AAEhE;;GAEG;AACH,MAAM,CAAC,IAAM,SAAS,GAAG,UAAC,EAA+B;QAA7B,QAAQ,cAAA;IAC3B,IAAA,WAAW,GAAI,QAAQ,CAC5B;QACE,OAAA,IAAI,WAAW,CAAC;YACd,UAAU,EAAE,IAAI,UAAU,CAAC;gBACzB,OAAO,EAAE,UAAC,GAAG;oBACX,IAAI,GAAG,YAAY,aAAa,EAAE,CAAC;wBACjC,qBAAqB;wBACrB,OAAO,CAAC,KAAK,CAAC,aAAa,EAAE,GAAG,CAAC,OAAO,CAAC,CAAC;oBAC5C,CAAC;yBAAM,IAAI,GAAG,YAAY,KAAK,EAAE,CAAC;wBAChC,sBAAsB;wBACtB,OAAO,CAAC,KAAK,CAAC,QAAQ,EAAE,GAAG,CAAC,OAAO,CAAC,CAAC;oBACvC,CAAC;yBAAM,CAAC;wBACN,wBAAwB;wBACxB,OAAO,CAAC,KAAK,CAAC,2BAA2B,CAAC,CAAC;oBAC7C,CAAC;oBACD,uCAAuC;oBACvC,6BAA6B;gBAC/B,CAAC;aACF,CAAC;SACH,CAAC;IAjBF,CAiBE,CACL,GApBiB,CAoBhB;IAEF,OAAO,CACL,KAAC,eAAe,cACd,KAAC,mBAAmB,IAAC,MAAM,EAAE,WAAW,YAAG,QAAQ,GAAuB,GAC1D,CACnB,CAAC;AACJ,CAAC,CAAC","sourcesContent":["'use client';\n\nimport React, { PropsWithChildren, useState } from 'react';\nimport { QueryCache, QueryClient, QueryClientProvider } from '@tanstack/react-query';\nimport { HTTPException } from 'hono/http-exception';\nimport { PostHogProvider } from '../providers/posthog-provider';\n\n/**\n * Provides a PostHogProvider and a QueryClientProvider with error handling for HTTP and generic errors.\n */\nexport const Providers = ({ children }: PropsWithChildren) => {\n  const [queryClient] = useState(\n    () =>\n      new QueryClient({\n        queryCache: new QueryCache({\n          onError: (err) => {\n            if (err instanceof HTTPException) {\n              // Handle HTTP errors\n              console.error('HTTP Error:', err.message);\n            } else if (err instanceof Error) {\n              // Handle other errors\n              console.error('Error:', err.message);\n            } else {\n              // Handle unknown errors\n              console.error('An unknown error occurred');\n            }\n            // toast notify user, log as an example\n            // console.log(errorMessage);\n          },\n        }),\n      }),\n  );\n\n  return (\n    <PostHogProvider>\n      <QueryClientProvider client={queryClient}>{children}</QueryClientProvider>\n    </PostHogProvider>\n  );\n};\n"]}