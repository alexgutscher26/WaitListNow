{"version":3,"file":"route.js","sourceRoot":"","sources":["route.ts"],"names":[],"mappings":"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","sourcesContent":["import { NextResponse } from 'next/server';\r\nimport { Resend } from 'resend';\r\nimport { db } from '@/lib/db';\r\nimport { getAuth } from '@clerk/nextjs/server';\r\nimport type { NextRequest } from 'next/server';\r\n\r\ninterface CustomFields {\r\n  verificationToken?: string;\r\n  [key: string]: any;\r\n}\r\n\r\nconst resend = new Resend(process.env.RESEND_API_KEY);\r\n\r\nexport async function POST(request: NextRequest) {\r\n  const origin = request.headers.get('origin') || 'http://localhost:3000';\r\n\r\n  // console.log('Request origin:', origin);\r\n\r\n  try {\r\n    // Verify authentication\r\n    const auth = getAuth(request);\r\n    const userId = auth.userId;\r\n    if (!userId) {\r\n      // console.log('Unauthorized: No user ID found');\r\n      return new NextResponse('Unauthorized', { status: 401 });\r\n    }\r\n\r\n    const { email } = await request.json();\r\n\r\n    if (!email) {\r\n      return new NextResponse('Email is required', { status: 400 });\r\n    }\r\n\r\n    // Find the subscriber\r\n    const subscriber = await db.subscriber.findFirst({\r\n      where: { email },\r\n      include: {\r\n        waitlist: {\r\n          include: {\r\n            user: {\r\n              select: { externalId: true },\r\n            },\r\n          },\r\n        },\r\n      },\r\n    });\r\n\r\n    // Verify the user owns the waitlist\r\n    if (!subscriber || subscriber.waitlist.user.externalId !== userId) {\r\n      return new NextResponse('Subscriber not found', { status: 404 });\r\n    }\r\n\r\n    // Generate a new verification token\r\n    const verificationToken = require('crypto').randomBytes(32).toString('hex');\r\n\r\n    // Update subscriber with verification token\r\n    const currentFields = (subscriber.customFields || {}) as CustomFields;\r\n    await db.subscriber.update({\r\n      where: { id: subscriber.id },\r\n      data: {\r\n        customFields: {\r\n          ...currentFields,\r\n          verificationToken,\r\n        } as CustomFields,\r\n      },\r\n    });\r\n\r\n    // Send verification email\r\n    try {\r\n      // console.log('Sending verification email to:', email);\r\n      // Use the full URL for the verification endpoint\r\n      const verifyUrl = new URL('/api/verify-email', origin).toString();\r\n      const verificationUrl = `${verifyUrl}?token=${verificationToken}&email=${encodeURIComponent(email)}`;\r\n      // console.log('Full verification URL:', verificationUrl);\r\n      // console.log('Verification URL:', verifyUrl);\r\n\r\n      const emailData = {\r\n        from: 'WaitListNow <onboarding@resend.dev>',\r\n        to: email,\r\n        subject: 'Please verify your email address - WaitListNow',\r\n        html: `\r\n          <!DOCTYPE html>\r\n          <html lang=\"en\">\r\n          <head>\r\n            <meta charset=\"UTF-8\">\r\n            <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\r\n            <title>Email Verification</title>\r\n            <style>\r\n              body {\r\n                font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, sans-serif;\r\n                line-height: 1.6;\r\n                color: #374151;\r\n                margin: 0;\r\n                padding: 0;\r\n                background-color: #f9fafb;\r\n              }\r\n              .container {\r\n                max-width: 600px;\r\n                margin: 0 auto;\r\n                padding: 20px;\r\n              }\r\n              .email-wrapper {\r\n                background-color: #ffffff;\r\n                border-radius: 12px;\r\n                box-shadow: 0 4px 6px -1px rgba(0, 0, 0, 0.1);\r\n                overflow: hidden;\r\n              }\r\n              .header {\r\n                background: linear-gradient(135deg, #4f46e5 0%, #7c3aed 100%);\r\n                padding: 40px 30px;\r\n                text-align: center;\r\n                color: white;\r\n              }\r\n              .header h1 {\r\n                margin: 0;\r\n                font-size: 28px;\r\n                font-weight: 700;\r\n                letter-spacing: -0.025em;\r\n              }\r\n              .header p {\r\n                margin: 8px 0 0 0;\r\n                font-size: 16px;\r\n                opacity: 0.9;\r\n              }\r\n              .content {\r\n                padding: 40px 30px;\r\n              }\r\n              .icon-container {\r\n                text-align: center;\r\n                margin-bottom: 30px;\r\n              }\r\n              .icon-bg {\r\n                display: inline-flex;\r\n                align-items: center;\r\n                justify-content: center;\r\n                width: 80px;\r\n                height: 80px;\r\n                background-color: #ede9fe;\r\n                border-radius: 50%;\r\n                margin-bottom: 20px;\r\n              }\r\n              .content h2 {\r\n                color: #111827;\r\n                font-size: 24px;\r\n                font-weight: 700;\r\n                margin: 0 0 20px 0;\r\n                text-align: center;\r\n              }\r\n              .content p {\r\n                color: #6b7280;\r\n                font-size: 16px;\r\n                margin: 0 0 20px 0;\r\n                line-height: 1.7;\r\n              }\r\n              .cta-container {\r\n                text-align: center;\r\n                margin: 40px 0;\r\n              }\r\n              .cta-button {\r\n                display: inline-block;\r\n                background: linear-gradient(135deg, #4f46e5 0%, #7c3aed 100%);\r\n                color: black;\r\n                padding: 16px 32px;\r\n                text-decoration: none;\r\n                border-radius: 8px;\r\n                font-weight: 600;\r\n                font-size: 16px;\r\n                box-shadow: 0 4px 14px 0 rgba(79, 70, 229, 0.3);\r\n                transition: all 0.2s ease;\r\n              }\r\n              .cta-button:hover {\r\n                transform: translateY(-1px);\r\n                box-shadow: 0 6px 20px 0 rgba(79, 70, 229, 0.4);\r\n              }\r\n              .alternative-section {\r\n                background-color: #f9fafb;\r\n                border: 1px solid #e5e7eb;\r\n                border-radius: 8px;\r\n                padding: 20px;\r\n                margin: 30px 0;\r\n              }\r\n              .alternative-section p {\r\n                margin: 0 0 10px 0;\r\n                font-size: 14px;\r\n                color: #6b7280;\r\n              }\r\n              .alternative-section .url {\r\n                background-color: #ffffff;\r\n                border: 1px solid #d1d5db;\r\n                border-radius: 6px;\r\n                padding: 12px;\r\n                font-family: 'Courier New', monospace;\r\n                font-size: 12px;\r\n                word-break: break-all;\r\n                color: #374151;\r\n                margin: 0;\r\n              }\r\n              .security-notice {\r\n                background-color: #fef3c7;\r\n                border: 1px solid #fcd34d;\r\n                border-radius: 8px;\r\n                padding: 16px;\r\n                margin: 30px 0;\r\n                display: flex;\r\n                align-items: flex-start;\r\n              }\r\n              .security-notice-icon {\r\n                flex-shrink: 0;\r\n                margin-right: 12px;\r\n                margin-top: 2px;\r\n              }\r\n              .security-notice p {\r\n                margin: 0;\r\n                font-size: 14px;\r\n                color: #92400e;\r\n              }\r\n              .footer {\r\n                background-color: #f9fafb;\r\n                border-top: 1px solid #e5e7eb;\r\n                padding: 30px;\r\n                text-align: center;\r\n              }\r\n              .footer p {\r\n                margin: 0 0 8px 0;\r\n                font-size: 14px;\r\n                color: #6b7280;\r\n              }\r\n              .footer .email-address {\r\n                font-weight: 600;\r\n                color: #374151;\r\n              }\r\n              @media only screen and (max-width: 600px) {\r\n                .container { padding: 10px; }\r\n                .content, .header, .footer { padding: 30px 20px; }\r\n                .header h1 { font-size: 24px; }\r\n                .content h2 { font-size: 20px; }\r\n              }\r\n            </style>\r\n          </head>\r\n          <body>\r\n            <div class=\"container\">\r\n              <div class=\"email-wrapper\">\r\n                <!-- Header -->\r\n                <div class=\"header\">\r\n                  <h1>WaitListNow</h1>\r\n                  <p>Email Verification Required</p>\r\n                </div>\r\n                \r\n                <!-- Content -->\r\n                <div class=\"content\">\r\n                  <div class=\"icon-container\">\r\n                    <div class=\"icon-bg\">\r\n                      <svg width=\"40\" height=\"40\" viewBox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\r\n                        <path d=\"M3 8L10.89 13.26C11.2187 13.4793 11.6049 13.5963 12 13.5963C12.3951 13.5963 12.7813 13.4793 13.11 13.26L21 8M5 19H19C19.5304 19 20.0391 18.7893 20.4142 18.4142C20.7893 18.0391 21 17.5304 21 17V7C21 6.46957 20.7893 5.96086 20.4142 5.58579C20.0391 5.21071 19.5304 5 19 5H5C4.46957 5 3.96086 5.21071 3.58579 5.58579C3.21071 5.96086 3 6.46957 3 7V17C3 17.5304 3.21071 18.0391 3.58579 18.4142C3.96086 18.7893 4.46957 19 5 19Z\" stroke=\"#7c3aed\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\"/>\r\n                      </svg>\r\n                    </div>\r\n                    <h2>Verify Your Email Address</h2>\r\n                  </div>\r\n                  \r\n                  <p>Hello! 👋</p>\r\n                  <p>Thank you for joining our waitlist! To complete your registration and ensure you receive important updates, we need to verify your email address.</p>\r\n                  <p>Click the button below to verify your email and secure your spot:</p>\r\n                  \r\n                  <!-- CTA Button -->\r\n                  <div class=\"cta-container\">\r\n                    <a href=\"${verificationUrl}\" class=\"cta-button\">\r\n                      ✉️ Verify Email Address\r\n                    </a>\r\n                  </div>\r\n                  \r\n                  <!-- Alternative Link -->\r\n                  <div class=\"alternative-section\">\r\n                    <p><strong>Can't click the button?</strong> Copy and paste this link into your browser:</p>\r\n                    <div class=\"url\">${verificationUrl}</div>\r\n                  </div>\r\n                  \r\n                  <!-- Security Notice -->\r\n                  <div class=\"security-notice\">\r\n                    <div class=\"security-notice-icon\">\r\n                      <svg width=\"20\" height=\"20\" viewBox=\"0 0 20 20\" fill=\"currentColor\" style=\"color: #f59e0b;\">\r\n                        <path fill-rule=\"evenodd\" d=\"M8.257 3.099c.765-1.36 2.722-1.36 3.486 0l5.58 9.92c.75 1.334-.213 2.98-1.742 2.98H4.42c-1.53 0-2.493-1.646-1.743-2.98l5.58-9.92zM11 13a1 1 0 11-2 0 1 1 0 012 0zm-1-8a1 1 0 00-1 1v3a1 1 0 002 0V6a1 1 0 00-1-1z\" clip-rule=\"evenodd\"/>\r\n                      </svg>\r\n                    </div>\r\n                    <div>\r\n                      <p><strong>Security Notice:</strong> This verification link will expire in 24 hours for your security. If you didn't request to join this waitlist, you can safely ignore this email.</p>\r\n                    </div>\r\n                  </div>\r\n                  \r\n                  <p style=\"text-align: center; color: #9ca3af;\">Need help? Contact us at support@waitlistnow.app</p>\r\n                </div>\r\n                \r\n                <!-- Footer -->\r\n                <div class=\"footer\">\r\n                  <p>&copy; ${new Date().getFullYear()} WaitListNow. All rights reserved.</p>\r\n                  <p>This email was sent to <span class=\"email-address\">${email}</span></p>\r\n                  <p>If you didn't request this verification, you can safely ignore this email.</p>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </body>\r\n          </html>\r\n        `,\r\n        // Plain text fallback for better email client compatibility\r\n        text: `\r\nHello!\r\n\r\nThank you for joining our waitlist! To complete your registration, please verify your email address by visiting this link:\r\n\r\n${verificationUrl}\r\n\r\nThis verification link will expire in 24 hours for your security.\r\n\r\nIf you didn't request to join this waitlist, you can safely ignore this email.\r\n\r\nNeed help? Contact us at support@waitlistnow.app\r\n\r\n© ${new Date().getFullYear()} WaitListNow. All rights reserved.\r\n        `,\r\n      };\r\n\r\n      // console.log('Sending email with data:', JSON.stringify(emailData, null, 2));\r\n\r\n      const response = await resend.emails.send(emailData);\r\n      // console.log('Resend API response:', JSON.stringify(response, null, 2));\r\n\r\n      if (!response) {\r\n        throw new Error('No response from Resend API');\r\n      }\r\n\r\n      return NextResponse.json({\r\n        success: true,\r\n        message: 'Verification email sent successfully',\r\n      });\r\n    } catch (emailError: any) {\r\n      console.error('Failed to send email:');\r\n      console.error('Error name:', emailError.name);\r\n      console.error('Error message:', emailError.message);\r\n      console.error('Error stack:', emailError.stack);\r\n\r\n      if (emailError.response) {\r\n        console.error('Error response data:', await emailError.response.text());\r\n      }\r\n\r\n      throw emailError; // This will be caught by the outer try-catch\r\n    }\r\n  } catch (error) {\r\n    console.error('Error resending verification email:', error);\r\n    return NextResponse.json({ error: 'Failed to resend verification email' }, { status: 500 });\r\n  }\r\n}\r\n"]}