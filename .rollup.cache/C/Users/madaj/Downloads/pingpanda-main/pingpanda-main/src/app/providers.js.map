{"version":3,"file":"providers.js","sourceRoot":"","sources":["providers.tsx"],"names":[],"mappings":"AAAA,YAAY,CAAC;;AAGb,OAAO,OAAO,MAAM,cAAc,CAAC;AAEnC,0CAA0C;AAC1C,IAAM,aAAa,GAAG,OAAO,CAC3B,cAAM,OAAA,MAAM,CAAC,4BAA4B,CAAC,CAAC,IAAI,CAAC,UAAA,GAAG,IAAI,OAAA,GAAG,CAAC,aAAa,EAAjB,CAAiB,CAAC,EAAnE,CAAmE,EACzE,EAAE,GAAG,EAAE,IAAI,EAAE,OAAO,EAAE,cAAM,OAAA,IAAI,EAAJ,CAAI,EAAE,CACnC,CAAC;AAEF,IAAM,aAAa,GAAG,OAAO,CAC3B,cAAM,OAAA,MAAM,CAAC,4BAA4B,CAAC,CAAC,IAAI,CAAC,UAAA,GAAG,IAAI,OAAA,GAAG,CAAC,aAAa,EAAjB,CAAiB,CAAC,EAAnE,CAAmE,EACzE,EAAE,GAAG,EAAE,IAAI,EAAE,OAAO,EAAE,cAAM,OAAA,IAAI,EAAJ,CAAI,EAAE,CACnC,CAAC;AAEF,IAAM,eAAe,GAAG,OAAO,CAC7B,cAAM,OAAA,MAAM,CAAC,8BAA8B,CAAC,CAAC,IAAI,CAAC,UAAA,GAAG,IAAI,OAAA,GAAG,CAAC,eAAe,EAAnB,CAAmB,CAAC,EAAvE,CAAuE,EAC7E,EAAE,GAAG,EAAE,IAAI,EAAE,OAAO,EAAE,cAAM,OAAA,IAAI,EAAJ,CAAI,EAAE,CACnC,CAAC;AAMF,MAAM,UAAU,SAAS,CAAC,EAA4B;QAA1B,QAAQ,cAAA;IAClC,OAAO,CACL,KAAC,eAAe,cACd,KAAC,aAAa,cACZ,KAAC,aAAa,cACX,QAAQ,GACK,GACF,GACA,CACnB,CAAC;AACJ,CAAC","sourcesContent":["'use client';\n\nimport { type ReactNode } from 'react';\nimport dynamic from 'next/dynamic';\n\n// Lazy load providers with code splitting\nconst ClerkProvider = dynamic(\n  () => import('@/providers/clerk-provider').then(mod => mod.ClerkProvider),\n  { ssr: true, loading: () => null }\n);\n\nconst QueryProvider = dynamic(\n  () => import('@/providers/query-provider').then(mod => mod.QueryProvider),\n  { ssr: true, loading: () => null }\n);\n\nconst PostHogProvider = dynamic(\n  () => import('@/providers/posthog-provider').then(mod => mod.PostHogProvider),\n  { ssr: true, loading: () => null }\n);\n\ntype ProvidersProps = {\n  children: ReactNode;\n};\n\nexport function Providers({ children }: ProvidersProps) {\n  return (\n    <PostHogProvider>\n      <ClerkProvider>\n        <QueryProvider>\n          {children}\n        </QueryProvider>\n      </ClerkProvider>\n    </PostHogProvider>\n  );\n}\n"]}