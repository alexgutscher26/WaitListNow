{"version":3,"file":"use-media-query.js","sourceRoot":"","sources":["use-media-query.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,SAAS,EAAE,QAAQ,EAAE,MAAM,OAAO,CAAC;AAE5C;;;;;GAKG;AACH,MAAM,CAAC,IAAM,aAAa,GAAG;IACrB,IAAA,KAAsB,QAAQ,CAAyC,IAAI,CAAC,EAA3E,MAAM,QAAA,EAAE,SAAS,QAA0D,CAAC;IAEnF,mEAAmE;IAC5D,IAAA,UAAU,GAAI,QAAQ,CAGnB,IAAI,CAAC,GAHE,CAGD;IAEhB,SAAS,CAAC;QACR;;WAEG;QACH,IAAM,WAAW,GAAG;YAClB,IAAI,MAAM,CAAC,UAAU,CAAC,oBAAoB,CAAC,CAAC,OAAO,EAAE,CAAC;gBACpD,SAAS,CAAC,QAAQ,CAAC,CAAC;YACtB,CAAC;iBAAM,IAAI,MAAM,CAAC,UAAU,CAAC,4CAA4C,CAAC,EAAE,CAAC;gBAC3E,SAAS,CAAC,QAAQ,CAAC,CAAC;YACtB,CAAC;iBAAM,CAAC;gBACN,SAAS,CAAC,SAAS,CAAC,CAAC;YACvB,CAAC;QACH,CAAC,CAAC;QAEF,WAAW,EAAE,CAAC;QAEd,MAAM,CAAC,gBAAgB,CAAC,QAAQ,EAAE,WAAW,CAAC,CAAC;QAE/C,OAAO;YACL,MAAM,CAAC,mBAAmB,CAAC,QAAQ,EAAE,WAAW,CAAC,CAAC;QACpD,CAAC,CAAC;IACJ,CAAC,EAAE,EAAE,CAAC,CAAC;IAEP,OAAO;QACL,MAAM,QAAA;QACN,KAAK,EAAE,UAAU,aAAV,UAAU,uBAAV,UAAU,CAAE,KAAK;QACxB,MAAM,EAAE,UAAU,aAAV,UAAU,uBAAV,UAAU,CAAE,MAAM;QAC1B,QAAQ,EAAE,MAAM,KAAK,QAAQ;QAC7B,QAAQ,EAAE,MAAM,KAAK,QAAQ;QAC7B,SAAS,EAAE,MAAM,KAAK,SAAS;KAChC,CAAC;AACJ,CAAC,CAAC","sourcesContent":["import { useEffect, useState } from 'react';\r\n\r\n/**\r\n * A custom hook to determine the current device type and screen dimensions.\r\n *\r\n * This hook uses React's `useState` and `useEffect` hooks to track the device type (mobile, tablet, or desktop)\r\n * based on window width. It also listens for window resize events to update the device type accordingly.\r\n */\r\nexport const useMediaQuery = () => {\r\n  const [device, setDevice] = useState<'mobile' | 'tablet' | 'desktop' | null>(null);\r\n\r\n  // Screen dimensions state (commented out as it's currently unused)\r\n  const [dimensions] = useState<{\r\n    width: number;\r\n    height: number;\r\n  } | null>(null);\r\n\r\n  useEffect(() => {\r\n    /**\r\n     * Determines and sets the device type based on screen width.\r\n     */\r\n    const checkDevice = () => {\r\n      if (window.matchMedia('(max-width: 640px)').matches) {\r\n        setDevice('mobile');\r\n      } else if (window.matchMedia('(min-width: 641px) and (max-width: 1024px)')) {\r\n        setDevice('tablet');\r\n      } else {\r\n        setDevice('desktop');\r\n      }\r\n    };\r\n\r\n    checkDevice();\r\n\r\n    window.addEventListener('resize', checkDevice);\r\n\r\n    return () => {\r\n      window.removeEventListener('resize', checkDevice);\r\n    };\r\n  }, []);\r\n\r\n  return {\r\n    device,\r\n    width: dimensions?.width,\r\n    height: dimensions?.height,\r\n    isMobile: device === 'mobile',\r\n    isTablet: device === 'tablet',\r\n    isDesktop: device === 'desktop',\r\n  };\r\n};\r\n"]}