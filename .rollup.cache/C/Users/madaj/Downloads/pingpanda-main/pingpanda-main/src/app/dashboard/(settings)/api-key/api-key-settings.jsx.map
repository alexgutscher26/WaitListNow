{"version":3,"file":"api-key-settings.jsx","sourceRoot":"","sources":["api-key-settings.tsx"],"names":[],"mappings":"AAAA,YAAY,CAAC;AAEb,OAAO,EAAE,MAAM,EAAE,MAAM,wBAAwB,CAAC;AAChD,OAAO,EAAE,IAAI,EAAE,MAAM,sBAAsB,CAAC;AAC5C,OAAO,EAAE,KAAK,EAAE,MAAM,uBAAuB,CAAC;AAC9C,OAAO,EAAE,KAAK,EAAE,MAAM,uBAAuB,CAAC;AAC9C,OAAO,EAAE,SAAS,EAAE,aAAa,EAAE,MAAM,cAAc,CAAC;AACxD,OAAO,EAAE,QAAQ,EAAE,MAAM,OAAO,CAAC;AAEjC;;GAEG;AACH,MAAM,CAAC,IAAM,cAAc,GAAG,UAAC,EAA8B;QAA5B,MAAM,YAAA;IAC/B,IAAA,KAAgC,QAAQ,CAAC,KAAK,CAAC,EAA9C,WAAW,QAAA,EAAE,cAAc,QAAmB,CAAC;IAEtD;;OAEG;IACH,IAAM,UAAU,GAAG;QACjB,SAAS,CAAC,SAAS,CAAC,SAAS,CAAC,MAAM,CAAC,CAAC;QACtC,cAAc,CAAC,IAAI,CAAC,CAAC;QACrB,UAAU,CAAC,cAAM,OAAA,cAAc,CAAC,KAAK,CAAC,EAArB,CAAqB,EAAE,IAAI,CAAC,CAAC;IAChD,CAAC,CAAC;IAEF,OAAO,CACL,CAAC,IAAI,CAAC,SAAS,CAAC,iBAAiB,CAC/B;MAAA,CAAC,GAAG,CACF;QAAA,CAAC,KAAK,CAAC,YAAY,EAAE,KAAK,CAC1B;QAAA,CAAC,GAAG,CAAC,SAAS,CAAC,eAAe,CAC5B;UAAA,CAAC,KAAK,CACJ,IAAI,CAAC,UAAU,CACf,KAAK,CAAC,CAAC,MAAM,CAAC,CACd,QAAQ,EAEV;UAAA,CAAC,GAAG,CAAC,SAAS,CAAC,0DAA0D,CACvE;YAAA,CAAC,MAAM,CACL,OAAO,CAAC,OAAO,CACf,OAAO,CAAC,CAAC,UAAU,CAAC,CACpB,SAAS,CAAC,+DAA+D,CAEzE;cAAA,CAAC,WAAW,CAAC,CAAC,CAAC,CACb,CAAC,SAAS,CAAC,SAAS,CAAC,uBAAuB,EAAG,CAChD,CAAC,CAAC,CAAC,CACF,CAAC,aAAa,CAAC,SAAS,CAAC,uBAAuB,EAAG,CACpD,CACH;YAAA,EAAE,MAAM,CACV;UAAA,EAAE,GAAG,CACP;QAAA,EAAE,GAAG,CAEL;;QAAA,CAAC,CAAC,CAAC,SAAS,CAAC,8BAA8B,CACzC;;QACF,EAAE,CAAC,CACL;MAAA,EAAE,GAAG,CACP;IAAA,EAAE,IAAI,CAAC,CACR,CAAC;AACJ,CAAC,CAAC","sourcesContent":["'use client';\r\n\r\nimport { Button } from '@/components/ui/button';\r\nimport { Card } from '@/components/ui/card';\r\nimport { Input } from '@/components/ui/input';\r\nimport { Label } from '@/components/ui/label';\r\nimport { CheckIcon, ClipboardIcon } from 'lucide-react';\r\nimport { useState } from 'react';\r\n\r\n/**\r\n * Renders a component to display an API key in a read-only input field with a copy button.\r\n */\r\nexport const ApiKeySettings = ({ apiKey }: { apiKey: string }) => {\r\n  const [copySuccess, setCopySuccess] = useState(false);\r\n\r\n  /**\r\n   * Copies the API key to the clipboard and shows a success message for 2 seconds.\r\n   */\r\n  const copyApiKey = () => {\r\n    navigator.clipboard.writeText(apiKey);\r\n    setCopySuccess(true);\r\n    setTimeout(() => setCopySuccess(false), 2000);\r\n  };\r\n\r\n  return (\r\n    <Card className=\"max-w-xl w-full\">\r\n      <div>\r\n        <Label>Your API Key</Label>\r\n        <div className=\"mt-1 relative\">\r\n          <Input\r\n            type=\"password\"\r\n            value={apiKey}\r\n            readOnly\r\n          />\r\n          <div className=\"absolute space-x-0.5 inset-y-0 right-0 flex items-center\">\r\n            <Button\r\n              variant=\"ghost\"\r\n              onClick={copyApiKey}\r\n              className=\"p-1 w-10 focus:outline-none focus:ring-2 focus:ring-brand-500\"\r\n            >\r\n              {copySuccess ? (\r\n                <CheckIcon className=\"size-4 text-brand-900\" />\r\n              ) : (\r\n                <ClipboardIcon className=\"size-4 text-brand-900\" />\r\n              )}\r\n            </Button>\r\n          </div>\r\n        </div>\r\n\r\n        <p className=\"mt-2 text-sm/6 text-gray-600\">\r\n          Keep your key secret and do not share it with others.\r\n        </p>\r\n      </div>\r\n    </Card>\r\n  );\r\n};\r\n"]}