{"version":3,"file":"page.jsx","sourceRoot":"","sources":["page.tsx"],"names":[],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport { currentUser } from '@clerk/nextjs/server';\r\nimport { redirect } from 'next/navigation';\r\nimport { Button } from '@/components/ui/button';\r\nimport {\r\n  ArrowUpRight,\r\n  BarChart3,\r\n  Users,\r\n  Zap,\r\n  TrendingUp,\r\n  TrendingDown,\r\n  Mail,\r\n  Activity,\r\n  DollarSign,\r\n  Download,\r\n  Bell,\r\n  Settings,\r\n  ChevronRight,\r\n  MoreHorizontal,\r\n  CheckCircle2,\r\n  Check,\r\n  Clock,\r\n  Loader2,\r\n} from 'lucide-react';\r\nimport { Plus } from 'lucide-react';\r\nimport { Card, CardContent, CardDescription, CardHeader, CardTitle } from '@/components/ui/card';\r\nimport { Badge } from '@/components/ui/badge';\r\nimport { Progress } from '@/components/ui/progress';\r\nimport {\r\n  Table,\r\n  TableBody,\r\n  TableCell,\r\n  TableHead,\r\n  TableHeader,\r\n  TableRow,\r\n} from '@/components/ui/table';\r\nimport Link from 'next/link';\r\nimport { db } from '@/lib/db';\r\nimport { cn } from '@/utils';\r\nimport { formatDistanceToNow } from 'date-fns';\r\n\r\ntype ActivityType = 'new_subscriber' | 'waitlist_created' | 'referral' | 'conversion' | 'milestone';\r\n\r\ntype BaseActivity = {\r\n  id: number;\r\n  type: ActivityType;\r\n  name: string;\r\n  time: Date;\r\n};\r\n\r\ntype NewSubscriberActivity = BaseActivity & {\r\n  type: 'new_subscriber';\r\n  email: string;\r\n  avatar: string;\r\n  waitlist: string;\r\n};\r\n\r\ntype WaitlistCreatedActivity = BaseActivity & {\r\n  type: 'waitlist_created';\r\n  subscribers: number;\r\n};\r\n\r\ntype ReferralActivity = BaseActivity & {\r\n  type: 'referral';\r\n  referrer: string;\r\n  referred: string;\r\n  reward: string;\r\n};\r\n\r\ntype ConversionActivity = BaseActivity & {\r\n  type: 'conversion';\r\n  revenue: number;\r\n  waitlist: string;\r\n};\r\n\r\ntype MilestoneActivity = BaseActivity & {\r\n  type: 'milestone';\r\n  message: string;\r\n};\r\n\r\ntype Activity =\r\n  | NewSubscriberActivity\r\n  | WaitlistCreatedActivity\r\n  | ReferralActivity\r\n  | ConversionActivity\r\n  | MilestoneActivity;\r\n\r\nimport { getWaitlistStats } from '@/app/actions/waitlist';\r\nimport { ExportButton } from '@/components/export-button';\r\n\r\n// Enhanced stats with growth indicators and more detailed metrics\r\nconst getStats = async (): Promise<{\r\n  totalSubscribers: number;\r\n  newThisWeek: number;\r\n  growthRate: number;\r\n  activeWaitlists: number;\r\n  completedWaitlists: number;\r\n  averageWaitTime: string;\r\n  conversionRate: number;\r\n  monthlyGrowth: number;\r\n  recentActivity: Activity[];\r\n  topWaitlists: Array<{ id: string; name: string; subscribers: number; growth: number }>;\r\n}> => {\r\n  try {\r\n    const stats = await getWaitlistStats();\r\n\r\n    // Debug: Log the raw stats from getWaitlistStats\r\n    console.log('Raw stats from getWaitlistStats:', JSON.stringify(stats, null, 2));\r\n    console.log('Recent activities count from API:', stats.recentActivities?.length || 0);\r\n\r\n    // Debug: Log the raw activities before mapping\r\n    console.log(\r\n      'Raw activities before mapping:',\r\n      JSON.stringify(stats.recentActivities || [], null, 2),\r\n    );\r\n\r\n    // Map the recent activities to the expected format\r\n    const recentActivity: Activity[] = (stats.recentActivities || []).map(\r\n      (act: any, index: number) => {\r\n        console.log(`Mapping activity ${index}:`, JSON.stringify(act, null, 2));\r\n        const base = {\r\n          id: act.id,\r\n          type: act.type,\r\n          name: act.name || 'Unknown',\r\n          time: new Date(act.time || new Date()),\r\n        };\r\n\r\n        switch (act.type) {\r\n          case 'new_subscriber':\r\n            return {\r\n              ...base,\r\n              type: 'new_subscriber',\r\n              email: act.email || '',\r\n              waitlist: act.waitlist || '',\r\n              avatar:\r\n                act.avatar ||\r\n                `https://api.dicebear.com/7.x/initials/svg?seed=${act.email || 'user'}`,\r\n            } as NewSubscriberActivity;\r\n\r\n          case 'waitlist_created':\r\n            return {\r\n              ...base,\r\n              type: 'waitlist_created',\r\n              subscribers: act.subscribers || 0,\r\n            } as WaitlistCreatedActivity;\r\n\r\n          case 'referral':\r\n            return {\r\n              ...base,\r\n              type: 'referral',\r\n              referrer: act.referrer || 'someone',\r\n              referred: act.referred || '',\r\n              reward: act.reward || 'Early access',\r\n            } as ReferralActivity;\r\n\r\n          case 'conversion':\r\n            return {\r\n              ...base,\r\n              type: 'conversion',\r\n              revenue: act.revenue || 0,\r\n              waitlist: act.waitlist || '',\r\n            } as ConversionActivity;\r\n\r\n          case 'milestone':\r\n            return {\r\n              ...base,\r\n              type: 'milestone',\r\n              message: act.message || '',\r\n            } as MilestoneActivity;\r\n\r\n          default:\r\n            console.warn('Unknown activity type:', act.type, act);\r\n            return base as Activity;\r\n        }\r\n      },\r\n    );\r\n\r\n    console.log('Mapped activities count:', recentActivity.length);\r\n    console.log('Mapped activities:', JSON.stringify(recentActivity, null, 2));\r\n\r\n    // Calculate average wait time from actual data\r\n    const approvedSubscribers = await db.subscriber.findMany({\r\n      where: {\r\n        status: 'APPROVED',\r\n        waitlistId: {\r\n          in: stats.waitlists.map((w) => w.id),\r\n        },\r\n      },\r\n      select: {\r\n        createdAt: true,\r\n        updatedAt: true,\r\n      },\r\n    });\r\n\r\n    // Calculate average wait time in hours\r\n    let averageWaitTime = 'N/A';\r\n    if (approvedSubscribers.length > 0) {\r\n      const totalWaitTimeMs = approvedSubscribers.reduce((sum, sub) => {\r\n        const waitTimeMs = sub.updatedAt.getTime() - sub.createdAt.getTime();\r\n        return sum + waitTimeMs;\r\n      }, 0);\r\n\r\n      const avgWaitTimeMs = totalWaitTimeMs / approvedSubscribers.length;\r\n      const avgWaitTimeHours = avgWaitTimeMs / (1000 * 60 * 60);\r\n\r\n      // Format the average wait time\r\n      if (avgWaitTimeHours < 1) {\r\n        const minutes = Math.round(avgWaitTimeHours * 60);\r\n        averageWaitTime = `${minutes} ${minutes === 1 ? 'minute' : 'minutes'}`;\r\n      } else if (avgWaitTimeHours < 24) {\r\n        const hours = Math.round(avgWaitTimeHours * 10) / 10;\r\n        averageWaitTime = `${hours} ${hours === 1 ? 'hour' : 'hours'}`;\r\n      } else {\r\n        const days = Math.round((avgWaitTimeHours / 24) * 10) / 10;\r\n        averageWaitTime = `${days} ${days === 1 ? 'day' : 'days'}`;\r\n      }\r\n    }\r\n\r\n    // Calculate conversion rate (new subscribers this week / total subscribers)\r\n    const conversionRate =\r\n      stats.totalSubscribers > 0\r\n        ? Math.min(100, Math.round((stats.newThisWeek / stats.totalSubscribers) * 1000) / 10)\r\n        : 0;\r\n\r\n    // Calculate monthly growth (placeholder for now)\r\n    const monthlyGrowth = stats.growthRate * 4; // Extrapolate weekly growth to monthly\r\n\r\n    // Calculate growth for each waitlist\r\n    const waitlistsWithGrowth = await Promise.all(\r\n      stats.waitlists.map(async (wl) => {\r\n        const now = new Date();\r\n        const oneWeekAgo = new Date(now);\r\n        oneWeekAgo.setDate(oneWeekAgo.getDate() - 7);\r\n        const twoWeeksAgo = new Date(now);\r\n        twoWeeksAgo.setDate(twoWeeksAgo.getDate() - 14);\r\n\r\n        // Get subscriber counts for the current and previous week\r\n        const [currentWeekCount, previousWeekCount] = await Promise.all([\r\n          db.subscriber.count({\r\n            where: {\r\n              waitlistId: wl.id,\r\n              createdAt: { gte: oneWeekAgo },\r\n            },\r\n          }),\r\n          db.subscriber.count({\r\n            where: {\r\n              waitlistId: wl.id,\r\n              createdAt: { gte: twoWeeksAgo, lt: oneWeekAgo },\r\n            },\r\n          }),\r\n        ]);\r\n\r\n        // Calculate growth percentage\r\n        let growth = 0;\r\n        if (previousWeekCount > 0) {\r\n          growth = ((currentWeekCount - previousWeekCount) / previousWeekCount) * 100;\r\n        } else if (currentWeekCount > 0) {\r\n          // If there were no subscribers in the previous week but there are now, show 100% growth\r\n          growth = 100;\r\n        }\r\n\r\n        return {\r\n          ...wl,\r\n          growth: Math.round(growth * 10) / 10, // Round to 1 decimal place\r\n        };\r\n      }),\r\n    );\r\n\r\n    return {\r\n      totalSubscribers: stats.totalSubscribers,\r\n      newThisWeek: stats.newThisWeek,\r\n      growthRate: stats.growthRate,\r\n      activeWaitlists: stats.activeWaitlists,\r\n      completedWaitlists: stats.completedWaitlists,\r\n      averageWaitTime,\r\n      conversionRate,\r\n      monthlyGrowth,\r\n      recentActivity,\r\n      topWaitlists: waitlistsWithGrowth.map((wl) => ({\r\n        id: wl.id,\r\n        name: wl.name,\r\n        subscribers: wl.subscribers,\r\n        growth: wl.growth,\r\n      })),\r\n    };\r\n  } catch (error) {\r\n    console.error('Error loading stats:', error);\r\n    // Return empty stats if there's an error\r\n    return {\r\n      totalSubscribers: 0,\r\n      newThisWeek: 0,\r\n      growthRate: 0,\r\n      activeWaitlists: 0,\r\n      completedWaitlists: 0,\r\n      averageWaitTime: '0 days',\r\n      conversionRate: 0,\r\n      monthlyGrowth: 0,\r\n      recentActivity: [\r\n        {\r\n          id: 1,\r\n          type: 'milestone',\r\n          name: 'Welcome to WaitListNow!',\r\n          message: 'Start by creating your first waitlist to see activity here.',\r\n          time: new Date(),\r\n        } as MilestoneActivity,\r\n      ],\r\n      topWaitlists: [],\r\n    };\r\n  }\r\n};\r\n\r\n// Define the type for search parameters\r\ntype SearchParams = {\r\n  upgrade?: string;\r\n};\r\n\r\n// Define the page props with searchParams\r\ninterface PageProps {\r\n  searchParams: SearchParams;\r\n}\r\n\r\n/**\r\n * Returns a React component for rendering an activity icon based on the given type.\r\n *\r\n * This function maps each activity type to its corresponding icon component,\r\n * applying specific styles and class names as needed. If the type does not match any\r\n * known cases, it throws an exhaustive check error to ensure all types are handled.\r\n *\r\n * @param type - The type of the activity for which to get the icon.\r\n * @returns A React functional component that renders the appropriate icon with given className.\r\n */\r\nconst getActivityIcon = (type: Activity['type']): React.ComponentType<{ className?: string }> => {\r\n  const _exhaustiveCheck = (type: never): never => {\r\n    throw new Error(`Unexpected activity type: ${type}`);\r\n  };\r\n\r\n  switch (type) {\r\n    case 'new_subscriber':\r\n      return ({ className }) => <Users className={cn('h-4 w-4 text-blue-600', className)} />;\r\n    case 'waitlist_created':\r\n      return ({ className }) => <Zap className={cn('h-4 w-4 text-green-600', className)} />;\r\n    case 'referral':\r\n      return ({ className }) => <Mail className={cn('h-4 w-4 text-purple-600', className)} />;\r\n    case 'conversion':\r\n      return ({ className }) => <DollarSign className={cn('h-4 w-4 text-green-600', className)} />;\r\n    case 'milestone':\r\n      return ({ className }) => <TrendingUp className={cn('h-4 w-4 text-orange-600', className)} />;\r\n    default:\r\n      _exhaustiveCheck(type);\r\n      return ({ className }) => <Bell className={cn('h-4 w-4 text-gray-600', className)} />;\r\n  }\r\n};\r\n\r\n/**\r\n * Formats an activity message based on the type of activity.\r\n *\r\n * This function uses a switch statement to determine the type of activity and returns a corresponding JSX element with formatted text.\r\n * The activity types include 'new_subscriber', 'waitlist_created', 'referral', 'conversion', and 'milestone'.\r\n * Each case handles different formatting requirements for specific activity details.\r\n *\r\n * @param activity - An object containing details about the activity.\r\n * @returns A JSX element representing the formatted activity message.\r\n */\r\nconst formatActivityMessage = (activity: Activity) => {\r\n  switch (activity.type) {\r\n    case 'new_subscriber':\r\n      return (\r\n        <div>\r\n          <p className=\"text-sm font-medium\">\r\n            <span className=\"font-semibold\">{activity.name}</span> joined{' '}\r\n            <span className=\"text-primary\">{activity.waitlist}</span>\r\n          </p>\r\n          <p className=\"text-xs text-muted-foreground\">{activity.email}</p>\r\n        </div>\r\n      );\r\n    case 'waitlist_created':\r\n      return (\r\n        <div>\r\n          <p className=\"text-sm font-medium\">New waitlist created</p>\r\n          <p className=\"text-xs text-muted-foreground\">{activity.name}</p>\r\n        </div>\r\n      );\r\n    case 'referral':\r\n      return (\r\n        <div>\r\n          <p className=\"text-sm font-medium\">\r\n            <span className=\"font-semibold\">{activity.referrer}</span> referred someone\r\n          </p>\r\n          <p className=\"text-xs text-muted-foreground\">\r\n            {activity.referred} • Reward: {activity.reward}\r\n          </p>\r\n        </div>\r\n      );\r\n    case 'conversion':\r\n      return (\r\n        <div>\r\n          <p className=\"text-sm font-medium\">\r\n            <span className=\"font-semibold\">{activity.name}</span> converted from{' '}\r\n            <span className=\"text-primary\">{activity.waitlist}</span>\r\n          </p>\r\n          <p className=\"text-xs text-muted-foreground\">Revenue: {activity.revenue}</p>\r\n        </div>\r\n      );\r\n    case 'milestone':\r\n      return (\r\n        <div>\r\n          <p className=\"text-sm font-medium\">{activity.message}</p>\r\n        </div>\r\n      );\r\n    default:\r\n      return <p className=\"text-sm\">Unknown activity</p>;\r\n  }\r\n};\r\n\r\ninterface StatCardProps {\r\n  title: string;\r\n  value: string | number;\r\n  icon: React.ComponentType<{ className?: string }>;\r\n  className?: string;\r\n  trend?: 'up' | 'down';\r\n  trendValue?: string;\r\n}\r\n\r\n/**\r\n * Renders a stat card component with title, value, icon, and optional trend indicators.\r\n *\r\n * This component displays a card containing a title, a main value, an icon,\r\n * and optionally shows a trend indicator if both `trend` and `trendValue` are provided.\r\n * The trend can be either 'up' or 'down', affecting the styling and icon used.\r\n */\r\nconst StatCard = ({\r\n  title,\r\n  value,\r\n  icon: Icon,\r\n  trend,\r\n  trendValue,\r\n  className = '',\r\n}: StatCardProps) => (\r\n  <Card className={cn('overflow-hidden', className)}>\r\n    <CardContent className=\"p-6\">\r\n      <div className=\"flex items-center justify-between\">\r\n        <div>\r\n          <p className=\"text-sm font-medium text-gray-500\">{title}</p>\r\n          <p className=\"mt-1 text-2xl font-semibold\">{value}</p>\r\n          {trend && trendValue && (\r\n            <div\r\n              className={cn(\r\n                'mt-2 inline-flex items-center text-sm font-medium',\r\n                trend === 'up' ? 'text-green-600' : 'text-red-600',\r\n              )}\r\n            >\r\n              {trend === 'up' ? (\r\n                <TrendingUp className=\"mr-1 h-4 w-4\" />\r\n              ) : (\r\n                <TrendingDown className=\"mr-1 h-4 w-4\" />\r\n              )}\r\n              {trendValue}\r\n            </div>\r\n          )}\r\n        </div>\r\n        <div className=\"rounded-lg bg-brand-50 p-3\">\r\n          <Icon className=\"h-6 w-6 text-brand-600\" />\r\n        </div>\r\n      </div>\r\n    </CardContent>\r\n  </Card>\r\n);\r\n\r\n/**\r\n * Renders an activity item with an icon, message, and timestamp.\r\n */\r\nconst ActivityItem = ({ activity }: { activity: Activity }) => {\r\n  const IconComponent = getActivityIcon(activity.type);\r\n  const message = formatActivityMessage(activity);\r\n\r\n  return (\r\n    <div className=\"flex items-start gap-3 p-3 hover:bg-gray-50 rounded-lg transition-colors\">\r\n      <div className=\"flex-shrink-0\">\r\n        <div className=\"h-10 w-10 rounded-full bg-brand-50 flex items-center justify-center\">\r\n          <IconComponent className=\"h-5 w-5 text-brand-600\" />\r\n        </div>\r\n      </div>\r\n      <div className=\"flex-1 min-w-0\">\r\n        <div className=\"text-sm font-medium text-gray-900\">{message}</div>\r\n        <p className=\"text-xs text-gray-500 mt-1\">\r\n          {formatDistanceToNow(new Date(activity.time), { addSuffix: true })}\r\n        </p>\r\n      </div>\r\n      <button className=\"text-gray-400 hover:text-gray-600\">\r\n        <MoreHorizontal className=\"h-4 w-4\" />\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n\r\n/**\r\n * Renders the main dashboard page for a user, displaying their waitlists and related statistics.\r\n *\r\n * This function performs several key tasks:\r\n * 1. Retrieves the current user information and checks if they are authenticated.\r\n * 2. Redirects to the sign-in page if the user is not logged in.\r\n * 3. Determines if the user has premium access and whether to display an upgrade banner based on query parameters.\r\n * 4. Fetches the user's recent waitlists with subscriber counts.\r\n * 5. Renders various cards, tables, and components displaying statistics, recent activity, and waitlist details.\r\n */\r\nexport default async function Page({ searchParams = {} }: PageProps) {\r\n  const stats = await getStats();\r\n\r\n  const user = await currentUser();\r\n  if (!user) {\r\n    redirect('/sign-in');\r\n  }\r\n\r\n  // Get user role and plan from database\r\n  const userData = await db.user.findUnique({\r\n    where: { externalId: user.id },\r\n    select: {\r\n      role: true,\r\n      plan: true,\r\n    },\r\n  });\r\n\r\n  const isAdmin = userData?.role === 'ADMIN';\r\n  const hasExportAccess = userData?.plan !== 'FREE'; // Assuming FREE plan doesn't have export access\r\n\r\n  // Check if user has premium access\r\n\r\n  // Handle upgrade success banner\r\n  const upgradeParam = searchParams?.upgrade;\r\n\r\n  console.log('Clerk user ID:', user.id);\r\n\r\n  // Find the internal user ID that matches the Clerk user ID\r\n  const dbUser = await db.user.findUnique({\r\n    where: { externalId: user.id },\r\n    select: { id: true },\r\n  });\r\n  console.log('Database user:', dbUser);\r\n\r\n  // Debug: Check what waitlists exist in the database\r\n  const allWaitlists = await db.waitlist.findMany({\r\n    select: { id: true, name: true, userId: true },\r\n    take: 10,\r\n  });\r\n  console.log('All waitlists in database:', allWaitlists);\r\n\r\n  // Fetch waitlists with subscribers count using internal user ID\r\n  const waitlists = await db.waitlist.findMany({\r\n    where: {\r\n      userId: dbUser?.id || '',\r\n    },\r\n    include: {\r\n      _count: {\r\n        select: {\r\n          subscribers: true,\r\n        },\r\n      },\r\n    },\r\n    orderBy: {\r\n      createdAt: 'desc',\r\n    },\r\n    take: 3,\r\n  });\r\n\r\n  console.log('Found waitlists for user:', waitlists);\r\n  return (\r\n    <div className=\"space-y-6\">\r\n      {/* Header */}\r\n      <div className=\"flex flex-col gap-4 md:flex-row md:items-center md:justify-between\">\r\n        <div>\r\n          <h1 className=\"text-2xl font-bold tracking-tight text-gray-900 sm:text-3xl\">\r\n            Welcome back, {user.firstName || 'User'}! 👋\r\n          </h1>\r\n          <p className=\"mt-1 text-sm text-gray-500\">\r\n            Here&apos;s what&apos;s happening with your waitlists today.\r\n          </p>\r\n        </div>\r\n        <div className=\"flex items-center gap-2\">\r\n          <ExportButton hasExportAccess={hasExportAccess} />\r\n          <Button\r\n            size=\"sm\"\r\n            className=\"gap-2\"\r\n            asChild\r\n          >\r\n            <Link href=\"/dashboard/waitlists/new\">\r\n              <Plus className=\"h-4 w-4\" />\r\n              New Waitlist\r\n            </Link>\r\n          </Button>\r\n        </div>\r\n      </div>\r\n\r\n      {/* Stats Grid */}\r\n      <div className=\"grid gap-4 md:grid-cols-2 lg:grid-cols-4\">\r\n        <StatCard\r\n          title=\"Total Subscribers\"\r\n          value={stats.totalSubscribers.toLocaleString()}\r\n          icon={Users}\r\n          trend=\"up\"\r\n          trendValue={`+${stats.newThisWeek} this week`}\r\n        />\r\n        <StatCard\r\n          title=\"Active Waitlists\"\r\n          value={stats.activeWaitlists}\r\n          icon={Activity}\r\n          trend=\"up\"\r\n          trendValue={`${stats.completedWaitlists} completed`}\r\n        />\r\n        <StatCard\r\n          title=\"Conversion Rate\"\r\n          value={`${stats.conversionRate}%`}\r\n          icon={BarChart3}\r\n          trend=\"up\"\r\n          trendValue=\"+12.1% from last month\"\r\n        />\r\n        <StatCard\r\n          title=\"System Status\"\r\n          value=\"All Systems\"\r\n          icon={Activity}\r\n          trend=\"up\"\r\n          trendValue=\"Operational\"\r\n          className=\"bg-green-50 text-green-700\"\r\n        />\r\n      </div>\r\n\r\n      <div className=\"grid gap-6 lg:grid-cols-3\">\r\n        {/* Recent Activity */}\r\n        <Card className=\"lg:col-span-2\">\r\n          <CardHeader>\r\n            <div className=\"flex items-center justify-between\">\r\n              <div>\r\n                <CardTitle>Recent Activity</CardTitle>\r\n                <CardDescription>Latest actions across your waitlists</CardDescription>\r\n              </div>\r\n              <Button\r\n                variant=\"ghost\"\r\n                size=\"sm\"\r\n                className=\"text-sm text-brand-600 hover:text-brand-700\"\r\n              >\r\n                View all\r\n                <ChevronRight className=\"ml-1 h-4 w-4\" />\r\n              </Button>\r\n            </div>\r\n          </CardHeader>\r\n          <CardContent className=\"p-0\">\r\n            <div className=\"divide-y divide-gray-100\">\r\n              {stats.recentActivity && stats.recentActivity.length > 0 ? (\r\n                stats.recentActivity.map((activity) => (\r\n                  <ActivityItem\r\n                    key={activity.id}\r\n                    activity={activity}\r\n                  />\r\n                ))\r\n              ) : (\r\n                <div className=\"p-6 text-center text-sm text-gray-500\">\r\n                  No recent activities found\r\n                </div>\r\n              )}\r\n            </div>\r\n          </CardContent>\r\n        </Card>\r\n\r\n        {/* Quick Stats */}\r\n        <div className=\"space-y-6\">\r\n          <Card>\r\n            <CardHeader>\r\n              <CardTitle>Waitlist Health</CardTitle>\r\n              <CardDescription>Performance overview</CardDescription>\r\n            </CardHeader>\r\n            <CardContent className=\"space-y-6\">\r\n              {/* Subscriber Growth */}\r\n              <div>\r\n                <div className=\"flex items-center justify-between text-sm mb-1\">\r\n                  <span className=\"font-medium text-gray-700\">Subscriber Growth</span>\r\n                  <span\r\n                    className={`font-medium ${\r\n                      stats.growthRate > 0\r\n                        ? 'text-green-600'\r\n                        : stats.growthRate < 0\r\n                          ? 'text-red-600'\r\n                          : 'text-gray-600'\r\n                    }`}\r\n                  >\r\n                    {stats.growthRate > 0 ? '+' : ''}\r\n                    {stats.growthRate.toFixed(1)}% (Week)\r\n                  </span>\r\n                </div>\r\n                <div className=\"relative pt-1\">\r\n                  <div className=\"flex items-center justify-between\">\r\n                    <div className=\"text-right\">\r\n                      <span className=\"text-xs font-semibold inline-block text-blue-600\">\r\n                        {stats.totalSubscribers} total\r\n                      </span>\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"overflow-hidden h-2 mb-4 text-xs flex rounded bg-blue-200\">\r\n                    <div\r\n                      style={{\r\n                        width: `${Math.min(100, (stats.newThisWeek / Math.max(1, stats.totalSubscribers - stats.newThisWeek)) * 100)}%`,\r\n                      }}\r\n                      className=\"shadow-none flex flex-col text-center whitespace-nowrap text-white justify-center bg-blue-500 transition-all duration-500\"\r\n                    />\r\n                  </div>\r\n                </div>\r\n              </div>\r\n\r\n              {/* Active Subscribers */}\r\n              <div>\r\n                <div className=\"flex items-center justify-between text-sm mb-1\">\r\n                  <span className=\"font-medium text-gray-700\">Active Subscribers</span>\r\n                  <span className=\"font-medium text-gray-900\">{stats.totalSubscribers}</span>\r\n                </div>\r\n                <div className=\"h-2 bg-gray-100 rounded-full overflow-hidden\">\r\n                  <div\r\n                    className=\"h-full bg-blue-600 transition-all duration-500\"\r\n                    style={{\r\n                      width: `${Math.min(100, (stats.totalSubscribers / 1000) * 100)}%`,\r\n                    }}\r\n                  />\r\n                </div>\r\n                <p className=\"text-xs text-gray-500 mt-1\">{stats.newThisWeek} new this week</p>\r\n              </div>\r\n\r\n              {/* Waitlist Status */}\r\n              <div>\r\n                <div className=\"flex items-center justify-between text-sm mb-2\">\r\n                  <span className=\"font-medium text-gray-700\">Waitlist Status</span>\r\n                  <div className=\"flex items-center gap-2\">\r\n                    <span className=\"inline-block w-2 h-2 rounded-full bg-green-500\" />\r\n                    <span className=\"text-gray-600\">{stats.activeWaitlists} Active</span>\r\n                    <span className=\"mx-1 text-gray-300\">•</span>\r\n                    <span className=\"inline-block w-2 h-2 rounded-full bg-gray-300\" />\r\n                    <span className=\"text-gray-600\">{stats.completedWaitlists} Archived</span>\r\n                  </div>\r\n                </div>\r\n                <div className=\"h-2 bg-gray-100 rounded-full overflow-hidden\">\r\n                  <div\r\n                    className=\"h-full bg-green-500 transition-all duration-500\"\r\n                    style={{\r\n                      width: `${(stats.activeWaitlists / (stats.activeWaitlists + stats.completedWaitlists)) * 100}%`,\r\n                    }}\r\n                  />\r\n                </div>\r\n              </div>\r\n            </CardContent>\r\n          </Card>\r\n\r\n          <Card>\r\n            <CardHeader>\r\n              <CardTitle>Quick Actions</CardTitle>\r\n            </CardHeader>\r\n            <CardContent className=\"grid gap-2\">\r\n              <Button\r\n                asChild\r\n                variant=\"outline\"\r\n                className=\"justify-start gap-2 h-10\"\r\n              >\r\n                <Link href=\"/dashboard/waitlists/new\">\r\n                  <Plus className=\"h-4 w-4\" />\r\n                  Create Waitlist\r\n                </Link>\r\n              </Button>\r\n              <Button\r\n                variant=\"outline\"\r\n                className=\"justify-start gap-2 h-10\"\r\n              >\r\n                <Settings className=\"h-4 w-4\" />\r\n                <Link href=\"/dashboard/account-settings\">Account Settings</Link>\r\n              </Button>\r\n              {/* <Button asChild variant=\"outline\" className=\"justify-start gap-2 h-10\">\r\n                <Link href=\"/dashboard/subscribers\">\r\n                  <Users className=\"h-4 w-4\" />\r\n                  View All Subscribers\r\n                </Link>\r\n              </Button> */}\r\n              {/* <Button asChild variant=\"outline\" className=\"justify-start gap-2 h-10\">\r\n                <Link href=\"/dashboard/email\">\r\n                  <Mail className=\"h-4 w-4\" />\r\n                  Email Subscribers\r\n                </Link>\r\n              </Button> */}\r\n              {/* <Button asChild variant=\"outline\" className=\"justify-start gap-2 h-10\">\r\n                <Link href=\"/dashboard/analytics\">\r\n                  <BarChart3 className=\"h-4 w-4\" />\r\n                  View Analytics\r\n                </Link>\r\n              </Button> */}\r\n              {/* <Button\r\n                variant=\"outline\"\r\n                className=\"justify-start gap-2 h-10\"\r\n              >\r\n                <BarChart3 className=\"h-4 w-4\" />\r\n                View Analytics\r\n              </Button> */}\r\n            </CardContent>\r\n          </Card>\r\n        </div>\r\n      </div>\r\n\r\n      {/* System Status - Admin Only */}\r\n      {isAdmin && (\r\n        <Card>\r\n          <CardHeader>\r\n            <CardTitle>System Status</CardTitle>\r\n            <CardDescription>Current status of all systems (Admin Only)</CardDescription>\r\n          </CardHeader>\r\n          <CardContent>\r\n            <div className=\"space-y-4\">\r\n              <div className=\"flex items-center justify-between p-4 bg-green-50 rounded-lg\">\r\n                <div className=\"flex items-center space-x-3\">\r\n                  <div className=\"p-2 rounded-full bg-green-100\">\r\n                    <CheckCircle2 className=\"h-5 w-5 text-green-600\" />\r\n                  </div>\r\n                  <div>\r\n                    <h4 className=\"font-medium text-gray-900\">All Systems Operational</h4>\r\n                    <p className=\"text-sm text-gray-500\">\r\n                      Last checked: {new Date().toLocaleString()}\r\n                    </p>\r\n                  </div>\r\n                </div>\r\n                <span className=\"inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium bg-green-100 text-green-800\">\r\n                  Operational\r\n                </span>\r\n              </div>\r\n\r\n              <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-4 mt-4\">\r\n                {[\r\n                  { name: 'API', status: 'operational', lastChecked: 'Just now' },\r\n                  { name: 'Database', status: 'operational', lastChecked: 'Just now' },\r\n                  { name: 'Email Service', status: 'operational', lastChecked: 'Just now' },\r\n                  { name: 'Authentication', status: 'operational', lastChecked: 'Just now' },\r\n                ].map((system) => (\r\n                  <div\r\n                    key={system.name}\r\n                    className=\"flex items-center p-3 bg-white border border-gray-100 rounded-lg shadow-sm\"\r\n                  >\r\n                    <div className=\"flex-shrink-0\">\r\n                      <div\r\n                        className={`h-2.5 w-2.5 rounded-full ${\r\n                          system.status === 'operational' ? 'bg-green-500' : 'bg-red-500'\r\n                        }`}\r\n                      />\r\n                    </div>\r\n                    <div className=\"ml-3 flex-1\">\r\n                      <div className=\"flex justify-between items-center\">\r\n                        <p className=\"text-sm font-medium text-gray-900\">{system.name}</p>\r\n                        <span className=\"text-xs text-gray-500\">{system.lastChecked}</span>\r\n                      </div>\r\n                      <p className=\"text-xs text-gray-500 capitalize\">{system.status}</p>\r\n                    </div>\r\n                  </div>\r\n                ))}\r\n              </div>\r\n            </div>\r\n          </CardContent>\r\n        </Card>\r\n      )}\r\n\r\n      {/* Your Waitlists */}\r\n      <Card>\r\n        <CardHeader>\r\n          <div className=\"flex items-center justify-between\">\r\n            <div>\r\n              <CardTitle>Your Waitlists</CardTitle>\r\n              <CardDescription>Manage your active waitlists</CardDescription>\r\n            </div>\r\n          </div>\r\n        </CardHeader>\r\n        <CardContent>\r\n          {waitlists.length > 0 ? (\r\n            <>\r\n              <div className=\"overflow-hidden rounded-lg border\">\r\n                <Table>\r\n                  <TableHeader>\r\n                    <TableRow>\r\n                      <TableHead>Name</TableHead>\r\n                      <TableHead>Subscribers</TableHead>\r\n                      <TableHead>Created</TableHead>\r\n                      <TableHead>Status</TableHead>\r\n                      <TableHead className=\"text-right\">Actions</TableHead>\r\n                    </TableRow>\r\n                  </TableHeader>\r\n                  <TableBody>\r\n                    {waitlists.map((waitlist) => (\r\n                      <TableRow key={waitlist.id}>\r\n                        <TableCell className=\"font-medium\">\r\n                          <div className=\"flex items-center gap-3\">\r\n                            <div className=\"h-10 w-10 rounded-full bg-brand-50 flex items-center justify-center\">\r\n                              <Users className=\"h-5 w-5 text-brand-600\" />\r\n                            </div>\r\n                            <div>\r\n                              <p className=\"font-medium\">{waitlist.name}</p>\r\n                              <p className=\"text-sm text-muted-foreground\">\r\n                                {waitlist._count.subscribers} subscribers\r\n                              </p>\r\n                            </div>\r\n                          </div>\r\n                        </TableCell>\r\n                        <TableCell>\r\n                          <div className=\"text-sm text-muted-foreground\">\r\n                            {new Date(waitlist.createdAt).toLocaleDateString()}\r\n                          </div>\r\n                        </TableCell>\r\n                        <TableCell>\r\n                          <Badge\r\n                            variant=\"outline\"\r\n                            className=\"text-xs bg-green-50 text-green-700\"\r\n                          >\r\n                            Active\r\n                          </Badge>\r\n                        </TableCell>\r\n                        <TableCell>\r\n                          <Button\r\n                            variant=\"ghost\"\r\n                            size=\"sm\"\r\n                            asChild\r\n                          >\r\n                            <Link href={`/dashboard/waitlists/${waitlist.id}`}>\r\n                              View\r\n                              <ArrowUpRight className=\"ml-1 h-3.5 w-3.5\" />\r\n                            </Link>\r\n                          </Button>\r\n                        </TableCell>\r\n                      </TableRow>\r\n                    ))}\r\n                  </TableBody>\r\n                </Table>\r\n              </div>\r\n              <Button\r\n                variant=\"outline\"\r\n                className=\"w-full mt-3\"\r\n                asChild\r\n              >\r\n                <Link href=\"/dashboard/waitlists\">View All Waitlists</Link>\r\n              </Button>\r\n            </>\r\n          ) : (\r\n            <div className=\"text-center py-8\">\r\n              <p className=\"text-muted-foreground mb-4\">\r\n                No waitlists found. Create your first waitlist to get started.\r\n              </p>\r\n              <Button asChild>\r\n                <Link href=\"/dashboard/waitlists/new\">\r\n                  <Plus className=\"mr-2 h-4 w-4\" />\r\n                  Create Waitlist\r\n                </Link>\r\n              </Button>\r\n            </div>\r\n          )}\r\n        </CardContent>\r\n      </Card>\r\n    </div>\r\n  );\r\n}\r\n"]}