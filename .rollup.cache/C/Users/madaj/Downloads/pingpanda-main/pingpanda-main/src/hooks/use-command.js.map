{"version":3,"file":"use-command.js","sourceRoot":"","sources":["use-command.ts"],"names":[],"mappings":"AAAA,YAAY,CAAC;AAEb,OAAO,EAAE,SAAS,EAAE,QAAQ,EAAE,MAAM,OAAO,CAAC;AAC5C,OAAO,EAAE,SAAS,EAAE,MAAM,iBAAiB,CAAC;AAE5C;;;;;;;;GAQG;AACH,MAAM,UAAU,cAAc;IACtB,IAAA,KAAkB,QAAQ,CAAC,KAAK,CAAC,EAAhC,IAAI,QAAA,EAAE,OAAO,QAAmB,CAAC;IACxC,IAAM,MAAM,GAAG,SAAS,EAAE,CAAC;IAE3B,+CAA+C;IAC/C,SAAS,CAAC;QACR;;;;;;;;WAQG;QACH,IAAM,IAAI,GAAG,UAAC,CAAgB;YAC5B,IAAI,CAAC,CAAC,CAAC,GAAG,KAAK,GAAG,IAAI,CAAC,CAAC,CAAC,OAAO,IAAI,CAAC,CAAC,OAAO,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,GAAG,KAAK,GAAG,IAAI,CAAC,CAAC,OAAO,CAAC,EAAE,CAAC;gBAChF,CAAC,CAAC,cAAc,EAAE,CAAC;gBACnB,OAAO,CAAC,UAAC,IAAI,IAAK,OAAA,CAAC,IAAI,EAAL,CAAK,CAAC,CAAC;YAC3B,CAAC;QACH,CAAC,CAAC;QAEF,QAAQ,CAAC,gBAAgB,CAAC,SAAS,EAAE,IAAI,CAAC,CAAC;QAC3C,OAAO,cAAM,OAAA,QAAQ,CAAC,mBAAmB,CAAC,SAAS,EAAE,IAAI,CAAC,EAA7C,CAA6C,CAAC;IAC7D,CAAC,EAAE,EAAE,CAAC,CAAC;IAEP,4CAA4C;IAC5C,IAAM,KAAK,GAAG;QACZ;YACE,IAAI,EAAE,WAAW;YACjB,QAAQ,EAAE,GAAG;YACb,QAAQ,EAAE,cAAM,OAAA,MAAM,CAAC,IAAI,CAAC,YAAY,CAAC,EAAzB,CAAyB;YACzC,IAAI,EAAE,IAAI;SACX;QACD;YACE,IAAI,EAAE,WAAW;YACjB,QAAQ,EAAE,GAAG;YACb,QAAQ,EAAE,cAAM,OAAA,MAAM,CAAC,IAAI,CAAC,sBAAsB,CAAC,EAAnC,CAAmC;YACnD,IAAI,EAAE,IAAI;SACX;QACD;YACE,IAAI,EAAE,SAAS;YACf,QAAQ,EAAE,GAAG;YACb,QAAQ,EAAE,cAAM,OAAA,MAAM,CAAC,IAAI,CAAC,oBAAoB,CAAC,EAAjC,CAAiC;YACjD,IAAI,EAAE,IAAI;SACX;QACD;YACE,IAAI,EAAE,kBAAkB;YACxB,QAAQ,EAAE,GAAG;YACb,QAAQ,EAAE,cAAM,OAAA,MAAM,CAAC,IAAI,CAAC,6BAA6B,CAAC,EAA1C,CAA0C;YAC1D,IAAI,EAAE,IAAI;SACX;QACD;YACE,IAAI,EAAE,SAAS;YACf,QAAQ,EAAE,GAAG;YACb,QAAQ,EAAE,cAAM,OAAA,MAAM,CAAC,IAAI,CAAC,oBAAoB,CAAC,EAAjC,CAAiC;YACjD,IAAI,EAAE,IAAI;SACX;KACF,CAAC;IAEF,OAAO;QACL,IAAI,MAAA;QACJ,OAAO,SAAA;QACP,KAAK,OAAA;KACN,CAAC;AACJ,CAAC","sourcesContent":["'use client';\r\n\r\nimport { useEffect, useState } from 'react';\r\nimport { useRouter } from 'next/navigation';\r\n\r\n/**\r\n * Manages the state and behavior of a command menu within an application.\r\n *\r\n * This function initializes a React hook to toggle the visibility of the command menu\r\n * when specific keyboard shortcuts (⌘K or Ctrl+K) are pressed. It also defines the\r\n * pages and actions available within the menu, each associated with a route navigation\r\n * using the router object. The function returns the state of the menu's open/closed\r\n * status, a setter for this state, and the list of defined pages.\r\n */\r\nexport function useCommandMenu() {\r\n  const [open, setOpen] = useState(false);\r\n  const router = useRouter();\r\n\r\n  // Toggle the menu when ⌘K or Ctrl+K is pressed\r\n  useEffect(() => {\r\n    /**\r\n     * Toggles the open state when 'k' is pressed with metaKey or ctrlKey.\r\n     *\r\n     * This function handles keyboard events, checking if the key 'k' is pressed alongside either\r\n     * the metaKey (on macOS) or ctrlKey (on Windows/Linux). If so, it prevents the default event\r\n     * behavior and toggles the open state using the setOpen function.\r\n     *\r\n     * @param e - The KeyboardEvent object representing the keyboard input.\r\n     */\r\n    const down = (e: KeyboardEvent) => {\r\n      if ((e.key === 'k' && (e.metaKey || e.ctrlKey)) || (e.key === 'k' && e.ctrlKey)) {\r\n        e.preventDefault();\r\n        setOpen((open) => !open);\r\n      }\r\n    };\r\n\r\n    document.addEventListener('keydown', down);\r\n    return () => document.removeEventListener('keydown', down);\r\n  }, []);\r\n\r\n  // Define the command menu pages and actions\r\n  const pages = [\r\n    {\r\n      name: 'Dashboard',\r\n      shortcut: 'D',\r\n      onSelect: () => router.push('/dashboard'),\r\n      icon: '🏠',\r\n    },\r\n    {\r\n      name: 'Waitlists',\r\n      shortcut: 'W',\r\n      onSelect: () => router.push('/dashboard/waitlists'),\r\n      icon: '👥',\r\n    },\r\n    {\r\n      name: 'API Key',\r\n      shortcut: 'A',\r\n      onSelect: () => router.push('/dashboard/api-key'),\r\n      icon: '🔑',\r\n    },\r\n    {\r\n      name: 'Account Settings',\r\n      shortcut: 'S',\r\n      onSelect: () => router.push('/dashboard/account-settings'),\r\n      icon: '⚙️',\r\n    },\r\n    {\r\n      name: 'Upgrade',\r\n      shortcut: 'U',\r\n      onSelect: () => router.push('/dashboard/upgrade'),\r\n      icon: '💎',\r\n    },\r\n  ];\r\n\r\n  return {\r\n    open,\r\n    setOpen,\r\n    pages,\r\n  };\r\n}\r\n"]}