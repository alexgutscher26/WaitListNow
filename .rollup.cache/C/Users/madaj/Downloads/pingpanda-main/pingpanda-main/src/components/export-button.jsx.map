{"version":3,"file":"export-button.jsx","sourceRoot":"","sources":["export-button.tsx"],"names":[],"mappings":"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","sourcesContent":["'use client';\r\n\r\nimport React, { useState } from 'react';\r\nimport { Download, Loader2 } from 'lucide-react';\r\nimport { Button } from '@/components/ui/button';\r\nimport { useToast } from '@/components/ui/use-toast';\r\n\r\ninterface ExportButtonProps {\r\n  hasExportAccess: boolean;\r\n}\r\n\r\nexport function ExportButton({ hasExportAccess }: ExportButtonProps) {\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const { toast } = useToast();\r\n\r\n  const handleExport = async () => {\r\n    if (!hasExportAccess) {\r\n      toast({\r\n        title: 'Upgrade Required',\r\n        description:\r\n          'Export is a premium feature. Please upgrade your plan to access this feature.',\r\n        variant: 'default',\r\n      });\r\n      return;\r\n    }\r\n\r\n    setIsLoading(true);\r\n\r\n    try {\r\n      const response = await fetch('/api/export/waitlists');\r\n\r\n      if (!response.ok) {\r\n        throw new Error('Failed to export waitlists');\r\n      }\r\n\r\n      const blob = await response.blob();\r\n      const url = window.URL.createObjectURL(blob);\r\n      const a = document.createElement('a');\r\n      a.href = url;\r\n\r\n      // Get filename from content-disposition header or use a default one\r\n      const contentDisposition = response.headers.get('content-disposition');\r\n      const filenameMatch = contentDisposition?.match(/filename=\"?(.+)\"?/);\r\n      const filename = filenameMatch\r\n        ? filenameMatch[1]\r\n        : `waitlist-export-${new Date().toISOString().split('T')[0]}.csv`;\r\n\r\n      a.download = filename;\r\n      document.body.appendChild(a);\r\n      a.click();\r\n\r\n      // Cleanup\r\n      window.URL.revokeObjectURL(url);\r\n      document.body.removeChild(a);\r\n\r\n      toast({\r\n        title: 'Export Successful',\r\n        description: 'Your waitlist data has been exported successfully.',\r\n        variant: 'default',\r\n      });\r\n    } catch (error) {\r\n      console.error('Export error:', error);\r\n      toast({\r\n        title: 'Export Failed',\r\n        description: 'An error occurred while exporting. Please try again.',\r\n        variant: 'destructive',\r\n      });\r\n    } finally {\r\n      setIsLoading(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Button\r\n      variant=\"outline\"\r\n      size=\"sm\"\r\n      className=\"gap-2\"\r\n      onClick={handleExport}\r\n      disabled={isLoading}\r\n    >\r\n      {isLoading ? (\r\n        <>\r\n          <Loader2 className=\"h-4 w-4 animate-spin\" />\r\n          Exporting...\r\n        </>\r\n      ) : (\r\n        <>\r\n          <Download className=\"h-4 w-4\" />\r\n          Export\r\n        </>\r\n      )}\r\n    </Button>\r\n  );\r\n}\r\n"]}