{"version":3,"file":"db.js","sourceRoot":"","sources":["db.ts"],"names":[],"mappings":";AAAA,OAAO,EAAE,YAAY,EAAE,MAAM,gBAAgB,CAAC;AAE9C,4EAA4E;AAC5E,6CAA6C;AAC7C,4DAA4D;AAE5D,IAAM,eAAe,GAAG,UAEvB,CAAC;AAEF,IAAM,MAAM,GACV,MAAA,eAAe,CAAC,MAAM,mCACtB,IAAI,YAAY,CAAC;IACf,GAAG,EAAE,OAAO,CAAC,GAAG,CAAC,QAAQ,KAAK,aAAa,CAAC,CAAC,CAAC,CAAC,OAAO,EAAE,OAAO,EAAE,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC;CACrF,CAAC,CAAC;AAEL,IAAI,OAAO,CAAC,GAAG,CAAC,QAAQ,KAAK,YAAY,EAAE,CAAC;IAC1C,eAAe,CAAC,MAAM,GAAG,MAAM,CAAC;AAClC,CAAC;AAED,MAAM,CAAC,IAAM,EAAE,GAAG,MAAM,CAAC;AAEzB,2BAA2B;AAC3B,2DAA2D;AAC3D,yEAAyE","sourcesContent":["import { PrismaClient } from '@prisma/client';\r\n\r\n// PrismaClient is attached to the `global` object in development to prevent\r\n// exhausting your database connection limit.\r\n// Learn more: https://pris.ly/d/help/next-js-best-practices\r\n\r\nconst globalForPrisma = globalThis as unknown as {\r\n  prisma: PrismaClient | undefined;\r\n};\r\n\r\nconst prisma =\r\n  globalForPrisma.prisma ??\r\n  new PrismaClient({\r\n    log: process.env.NODE_ENV === 'development' ? ['query', 'error', 'warn'] : ['error'],\r\n  });\r\n\r\nif (process.env.NODE_ENV !== 'production') {\r\n  globalForPrisma.prisma = prisma;\r\n}\r\n\r\nexport const db = prisma;\r\n\r\n// For Edge Runtime support\r\n// Note: Prisma doesn't officially support Edge Runtime yet\r\n// Consider using API routes with Node.js runtime for database operations\r\n"]}