{"version":3,"file":"onboarding.js","sourceRoot":"","sources":["onboarding.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,CAAC,EAAE,MAAM,KAAK,CAAC;AACxB,OAAO,EAAE,iBAAiB,EAAE,mBAAmB,EAAE,sBAAsB,EAAE,MAAM,YAAY,CAAC;AAE5F,MAAM,CAAC,IAAM,wBAAwB,GAAG,CAAC,CAAC,MAAM,CAAC;IAC/C,6BAA6B;IAC7B,IAAI,EAAE,CAAC,CAAC,MAAM,EAAE,CAAC,GAAG,CAAC,CAAC,EAAE,oCAAoC,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC;IACtE,WAAW,EAAE,CAAC,CAAC,MAAM,EAAE,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,QAAQ,EAAE;IAC3C,UAAU,EAAE,CAAC,CAAC,MAAM,EAAE,CAAC,GAAG,CAAC,0BAA0B,CAAC,CAAC,QAAQ,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,OAAO,CAAC,EAAE,CAAC,CAAC;IACnF,WAAW,EAAE,CAAC,CAAC,MAAM,EAAE,CAAC,GAAG,CAAC,0BAA0B,CAAC,CAAC,QAAQ,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,OAAO,CAAC,EAAE,CAAC,CAAC;IAEpF,gBAAgB;IAChB,YAAY,EAAE,CAAC,CAAC,KAAK,CAAC,iBAAiB,CAAC,CAAC,OAAO,CAAC,EAAE,CAAC;IAEpD,UAAU;IACV,KAAK,EAAE,mBAAmB,CAAC,OAAO,CAAC,EAAE,CAAC;IAEtC,WAAW;IACX,QAAQ,EAAE,sBAAsB,CAAC,OAAO,CAAC;QACvC,iBAAiB,EAAE,IAAI;QACvB,eAAe,EAAE,KAAK;QACtB,eAAe,EAAE,KAAK;KACvB,CAAC;IAEF,mBAAmB;IACnB,aAAa,EAAE,CAAC,CAAC,OAAO,EAAE,CAAC,MAAM,CAAC,UAAA,GAAG,IAAI,OAAA,GAAG,KAAK,IAAI,EAAZ,CAAY,EAAE;QACrD,OAAO,EAAE,0CAA0C;KACpD,CAAC;IAEF,2BAA2B;IAC3B,kBAAkB,EAAE,CAAC,CAAC,OAAO,EAAE,CAAC,OAAO,CAAC,IAAI,CAAC;IAC7C,eAAe,EAAE,CAAC,CAAC,OAAO,EAAE,CAAC,OAAO,CAAC,KAAK,CAAC;CAC5C,CAAC,CAAC","sourcesContent":["import { z } from 'zod';\r\nimport { customFieldSchema, waitlistStyleSchema, waitlistSettingsSchema } from './waitlist';\r\n\r\nexport const onboardingCompleteSchema = z.object({\r\n  // Basic Waitlist Information\r\n  name: z.string().min(3, 'Name must be at least 3 characters').max(100),\r\n  description: z.string().max(500).optional(),\r\n  websiteUrl: z.string().url('Please enter a valid URL').optional().or(z.literal('')),\r\n  redirectUrl: z.string().url('Please enter a valid URL').optional().or(z.literal('')),\r\n  \r\n  // Custom Fields\r\n  customFields: z.array(customFieldSchema).default([]),\r\n  \r\n  // Styling\r\n  style: waitlistStyleSchema.default({}),\r\n  \r\n  // Settings\r\n  settings: waitlistSettingsSchema.default({\r\n    emailVerification: true,\r\n    allowDuplicates: false,\r\n    referralEnabled: false,\r\n  }),\r\n  \r\n  // Terms Acceptance\r\n  termsAccepted: z.boolean().refine(val => val === true, {\r\n    message: 'You must accept the terms and conditions',\r\n  }),\r\n  \r\n  // Notification Preferences\r\n  emailNotifications: z.boolean().default(true),\r\n  marketingEmails: z.boolean().default(false),\r\n});\r\n\r\nexport type OnboardingCompleteData = z.infer<typeof onboardingCompleteSchema>;\r\n"]}