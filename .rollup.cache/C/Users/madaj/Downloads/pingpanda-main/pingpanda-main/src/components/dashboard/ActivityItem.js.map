{"version":3,"file":"ActivityItem.js","sourceRoot":"","sources":["ActivityItem.tsx"],"names":[],"mappings":"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","sourcesContent":["'use client';\r\nimport { formatDistanceToNow } from 'date-fns';\r\nimport {\r\n  DropdownMenu,\r\n  DropdownMenuTrigger,\r\n  DropdownMenuContent,\r\n  DropdownMenuItem,\r\n} from '@/components/ui/dropdown-menu';\r\nimport { MoreHorizontal, Users, Zap, Mail, DollarSign, TrendingUp, Bell } from 'lucide-react';\r\nimport React from 'react';\r\nimport { useToast } from '@/components/ui/use-toast';\r\nimport { useRouter } from 'next/navigation';\r\n\r\ninterface ActivityItemProps {\r\n  activity: any;\r\n  iconType: string;\r\n  message: React.ReactNode;\r\n}\r\n\r\nconst getActivityIcon = (type: string) => {\r\n  switch (type) {\r\n    case 'new_subscriber':\r\n      return Users;\r\n    case 'waitlist_created':\r\n      return Zap;\r\n    case 'referral':\r\n      return Mail;\r\n    case 'conversion':\r\n      return DollarSign;\r\n    case 'milestone':\r\n      return TrendingUp;\r\n    default:\r\n      return Bell;\r\n  }\r\n};\r\n\r\nconst getActivityUrl = (activity: any): string | null => {\r\n  switch (activity.type) {\r\n    case 'new_subscriber':\r\n      return activity.waitlistId ? `/dashboard/waitlists/${activity.waitlistId}` : null;\r\n    case 'waitlist_created':\r\n      return activity.waitlistId ? `/dashboard/waitlists/${activity.waitlistId}` : null;\r\n    case 'referral':\r\n      return '/dashboard/referrals';\r\n    case 'conversion':\r\n      return activity.waitlistId ? `/dashboard/waitlists/${activity.waitlistId}` : null;\r\n    case 'milestone':\r\n      return null;\r\n    default:\r\n      return null;\r\n  }\r\n};\r\n\r\nconst ActivityItem: React.FC<ActivityItemProps> = ({ activity, iconType, message }) => {\r\n  const { toast } = useToast();\r\n  const router = useRouter();\r\n  const Icon = getActivityIcon(iconType);\r\n\r\n  const handleViewDetails = () => {\r\n    const url = getActivityUrl(activity);\r\n    if (url) {\r\n      router.push(url);\r\n    } else {\r\n      toast({\r\n        title: 'No Details Available',\r\n        description: 'There is no details page for this activity.',\r\n        variant: 'default',\r\n      });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"flex items-start gap-3 p-3 hover:bg-gray-50 rounded-lg transition-colors group\">\r\n      <div className=\"mt-1\">\r\n        <Icon className=\"h-6 w-6\" />\r\n      </div>\r\n      <div className=\"flex-1\">\r\n        {message}\r\n        <div className=\"text-xs text-gray-400 mt-1\">\r\n          {formatDistanceToNow(new Date(activity.time), { addSuffix: true })}\r\n        </div>\r\n      </div>\r\n      <DropdownMenu>\r\n        <DropdownMenuTrigger asChild>\r\n          <button className=\"p-2 rounded-full hover:bg-gray-100 focus:outline-none\">\r\n            <MoreHorizontal className=\"h-5 w-5 text-gray-500\" />\r\n          </button>\r\n        </DropdownMenuTrigger>\r\n        <DropdownMenuContent align=\"end\">\r\n          <DropdownMenuItem onClick={handleViewDetails}>View Details</DropdownMenuItem>\r\n        </DropdownMenuContent>\r\n      </DropdownMenu>\r\n    </div>\r\n  );\r\n};\r\n\r\nfunction getActivitySummary(activity: any): string {\r\n  switch (activity.type) {\r\n    case 'new_subscriber':\r\n      return `${activity.name} (${activity.email}) joined ${activity.waitlist}`;\r\n    case 'waitlist_created':\r\n      return `Waitlist \"${activity.name}\" created with ${activity.subscribers} subscribers.`;\r\n    case 'referral':\r\n      return `${activity.referrer} referred ${activity.referred}. Reward: ${activity.reward}`;\r\n    case 'conversion':\r\n      return `${activity.name} converted from ${activity.waitlist}. Revenue: $${activity.revenue}`;\r\n    case 'milestone':\r\n      return activity.message;\r\n    default:\r\n      return 'Unknown activity type.';\r\n  }\r\n}\r\n\r\nexport default ActivityItem;\r\n"]}