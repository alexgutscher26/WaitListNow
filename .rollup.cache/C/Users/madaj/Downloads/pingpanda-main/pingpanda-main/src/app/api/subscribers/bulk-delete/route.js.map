{"version":3,"file":"route.js","sourceRoot":"","sources":["route.ts"],"names":[],"mappings":"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","sourcesContent":["import { NextResponse } from 'next/server';\r\nimport { getAuth } from '@clerk/nextjs/server';\r\nimport { db } from '@/lib/db';\r\nimport type { NextRequest } from 'next/server';\r\n\r\nexport async function POST(req: NextRequest) {\r\n  try {\r\n    // Verify authentication\r\n    const { userId } = getAuth(req);\r\n    if (!userId) {\r\n      return new NextResponse('Unauthorized', { status: 401 });\r\n    }\r\n\r\n    // Get the user\r\n    const user = await db.user.findUnique({\r\n      where: { externalId: userId },\r\n    });\r\n\r\n    if (!user) {\r\n      return new NextResponse('User not found', { status: 404 });\r\n    }\r\n\r\n    // Parse request body\r\n    const { ids } = await req.json();\r\n\r\n    if (!Array.isArray(ids) || ids.length === 0) {\r\n      return new NextResponse('No subscriber IDs provided', { status: 400 });\r\n    }\r\n\r\n    // Get subscribers with their waitlist info\r\n    const subscribers = await db.subscriber.findMany({\r\n      where: {\r\n        id: { in: ids },\r\n        waitlist: {\r\n          userId: user.id,\r\n        },\r\n      },\r\n      include: {\r\n        waitlist: true,\r\n      },\r\n    });\r\n\r\n    if (subscribers.length === 0) {\r\n      return new NextResponse('No valid subscribers found', { status: 404 });\r\n    }\r\n\r\n    // Group subscribers by waitlist ID for batch updates\r\n    const waitlistUpdates = subscribers.reduce(\r\n      (acc, subscriber) => {\r\n        if (!acc[subscriber.waitlistId]) {\r\n          acc[subscriber.waitlistId] = 0;\r\n        }\r\n        acc[subscriber.waitlistId]++;\r\n        return acc;\r\n      },\r\n      {} as Record<string, number>,\r\n    );\r\n\r\n    // Delete subscribers in a transaction\r\n    await db.$transaction([\r\n      // Delete the subscribers\r\n      db.subscriber.deleteMany({\r\n        where: {\r\n          id: { in: subscribers.map((s) => s.id) },\r\n        },\r\n      }),\r\n      // Update waitlist counts\r\n      ...Object.entries(waitlistUpdates).map(([waitlistId, count]) =>\r\n        db.waitlist.update({\r\n          where: { id: waitlistId },\r\n          data: {\r\n            subscriberCount: {\r\n              decrement: count,\r\n            },\r\n          },\r\n        }),\r\n      ),\r\n    ]);\r\n\r\n    return new NextResponse(\r\n      JSON.stringify({\r\n        success: true,\r\n        deletedCount: subscribers.length,\r\n      }),\r\n      { status: 200, headers: { 'Content-Type': 'application/json' } },\r\n    );\r\n  } catch (error) {\r\n    console.error('[SUBSCRIBERS_BULK_DELETE]', error);\r\n    return new NextResponse(\r\n      JSON.stringify({\r\n        error: 'Internal server error',\r\n        details: process.env.NODE_ENV === 'development' ? error : undefined,\r\n      }),\r\n      { status: 500, headers: { 'Content-Type': 'application/json' } },\r\n    );\r\n  }\r\n}\r\n"]}