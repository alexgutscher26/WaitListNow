{"version":3,"file":"waitlist-settings-form.js","sourceRoot":"","sources":["waitlist-settings-form.tsx"],"names":[],"mappings":"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","sourcesContent":["'use client';\r\n\r\nimport { useState } from 'react';\r\nimport { useRouter } from 'next/navigation';\r\nimport { useForm } from 'react-hook-form';\r\nimport { zodResolver } from '@hookform/resolvers/zod';\r\nimport { z } from 'zod';\r\nimport { Button } from '@/components/ui/button';\r\nimport { Input } from '@/components/ui/input';\r\nimport { Textarea } from '@/components/ui/textarea';\r\nimport { toast } from '@/components/ui/use-toast';\r\n\r\n// Define the form schema using Zod\r\nconst waitlistFormSchema = z.object({\r\n  name: z.string().min(1, 'Name is required').max(100),\r\n  slug: z\r\n    .string()\r\n    .min(1, 'Slug is required')\r\n    .max(50)\r\n    .regex(\r\n      /^[a-z0-9]+(?:-[a-z0-9]+)*$/,\r\n      'Slug can only contain lowercase letters, numbers, and hyphens, and cannot start or end with a hyphen.',\r\n    ),\r\n  description: z.string().max(500).optional(),\r\n});\r\n\r\ntype WaitlistFormValues = z.infer<typeof waitlistFormSchema>;\r\n\r\ninterface WaitlistSettingsFormProps {\r\n  waitlist: {\r\n    id: string;\r\n    name: string;\r\n    slug: string;\r\n    description: string | null;\r\n  };\r\n}\r\n\r\nexport function WaitlistSettingsForm({ waitlist }: WaitlistSettingsFormProps) {\r\n  const router = useRouter();\r\n  const [isLoading, setIsLoading] = useState(false);\r\n\r\n  const form = useForm<WaitlistFormValues>({\r\n    resolver: zodResolver(waitlistFormSchema),\r\n    defaultValues: {\r\n      name: waitlist.name,\r\n      slug: waitlist.slug,\r\n      description: waitlist.description || '',\r\n    },\r\n  });\r\n\r\n  async function onSubmit(data: WaitlistFormValues) {\r\n    try {\r\n      setIsLoading(true);\r\n\r\n      const response = await fetch(`/api/waitlists/${waitlist.id}`, {\r\n        method: 'PATCH',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify(data),\r\n      });\r\n\r\n      if (!response.ok) {\r\n        throw new Error('Failed to update waitlist');\r\n      }\r\n\r\n      // Refresh the page to show updated data\r\n      router.refresh();\r\n\r\n      toast({\r\n        title: 'Success',\r\n        description: 'Waitlist updated successfully',\r\n      });\r\n    } catch (error) {\r\n      console.error('Error updating waitlist:', error);\r\n      toast({\r\n        title: 'Error',\r\n        description: 'Failed to update waitlist. Please try again.',\r\n        variant: 'destructive',\r\n      });\r\n    } finally {\r\n      setIsLoading(false);\r\n    }\r\n  }\r\n\r\n  return (\r\n    <form\r\n      onSubmit={form.handleSubmit(onSubmit)}\r\n      className=\"space-y-4\"\r\n    >\r\n      <div className=\"grid gap-4 md:grid-cols-2\">\r\n        <div className=\"space-y-2\">\r\n          <label\r\n            htmlFor=\"name\"\r\n            className=\"text-sm font-medium leading-none\"\r\n          >\r\n            Waitlist Name\r\n          </label>\r\n          <Input\r\n            id=\"name\"\r\n            placeholder=\"Enter waitlist name\"\r\n            {...form.register('name')}\r\n            disabled={isLoading}\r\n          />\r\n          {form.formState.errors.name && (\r\n            <p className=\"text-sm text-red-500\">{form.formState.errors.name.message}</p>\r\n          )}\r\n        </div>\r\n        <div className=\"space-y-2\">\r\n          <label\r\n            htmlFor=\"slug\"\r\n            className=\"text-sm font-medium leading-none\"\r\n          >\r\n            Slug\r\n          </label>\r\n          <div className=\"flex rounded-md shadow-sm\">\r\n            <span className=\"inline-flex items-center rounded-l-md border border-r-0 border-input bg-muted px-3 text-sm text-muted-foreground\">\r\n              waitlistnow.app/waitlist/\r\n            </span>\r\n            <Input\r\n              id=\"slug\"\r\n              className=\"rounded-l-none\"\r\n              placeholder=\"your-waitlist\"\r\n              {...form.register('slug')}\r\n              disabled={isLoading}\r\n            />\r\n          </div>\r\n          {form.formState.errors.slug && (\r\n            <p className=\"text-sm text-red-500\">{form.formState.errors.slug.message}</p>\r\n          )}\r\n        </div>\r\n      </div>\r\n      <div className=\"space-y-2\">\r\n        <label\r\n          htmlFor=\"description\"\r\n          className=\"text-sm font-medium leading-none\"\r\n        >\r\n          Description\r\n        </label>\r\n        <Textarea\r\n          id=\"description\"\r\n          placeholder=\"Enter a brief description of your waitlist\"\r\n          className=\"min-h-[80px]\"\r\n          {...form.register('description')}\r\n          disabled={isLoading}\r\n        />\r\n        {form.formState.errors.description && (\r\n          <p className=\"text-sm text-red-500\">{form.formState.errors.description.message}</p>\r\n        )}\r\n      </div>\r\n      <div className=\"flex justify-end\">\r\n        <Button\r\n          type=\"submit\"\r\n          disabled={isLoading}\r\n        >\r\n          {isLoading ? 'Saving...' : 'Save Changes'}\r\n        </Button>\r\n      </div>\r\n    </form>\r\n  );\r\n}\r\n"]}