{"version":3,"file":"checkbox.js","sourceRoot":"","sources":["checkbox.tsx"],"names":[],"mappings":";;AAAA,OAAO,KAAK,KAAK,MAAM,OAAO,CAAC;AAC/B,OAAO,KAAK,iBAAiB,MAAM,0BAA0B,CAAC;AAC9D,OAAO,EAAE,KAAK,EAAE,MAAM,cAAc,CAAC;AAErC,OAAO,EAAE,EAAE,EAAE,MAAM,aAAa,CAAC;AAQjC,IAAM,QAAQ,GAAG,KAAK,CAAC,UAAU,CAC/B,UAAC,EAAwC,EAAE,GAAG;IAA3C,IAAA,SAAS,eAAA,EAAE,eAAe,qBAAA,EAAK,KAAK,cAAtC,gCAAwC,CAAF;IAAY,OAAA,CACjD,KAAC,iBAAiB,CAAC,IAAI,aACrB,GAAG,EAAE,GAAG,EACR,SAAS,EAAE,EAAE,CACX,gTAAgT,EAChT,SAAS,CACV,EACD,eAAe,EAAE,UAAC,OAAO;YACvB,IAAI,eAAe,EAAE,CAAC;gBACpB,eAAe,CAAC,OAAO,KAAK,IAAI,CAAC,CAAC;YACpC,CAAC;QACH,CAAC,IACG,KAAK,cAET,KAAC,iBAAiB,CAAC,SAAS,IAAC,SAAS,EAAE,EAAE,CAAC,+CAA+C,CAAC,YACzF,KAAC,KAAK,IAAC,SAAS,EAAC,SAAS,GAAG,GACD,IACP,CAC1B,CAAA;CAAA,CACF,CAAC;AACF,QAAQ,CAAC,WAAW,GAAG,iBAAiB,CAAC,IAAI,CAAC,WAAW,CAAC;AAE1D,OAAO,EAAE,QAAQ,EAAE,CAAC","sourcesContent":["import * as React from 'react';\r\nimport * as CheckboxPrimitive from '@radix-ui/react-checkbox';\r\nimport { Check } from 'lucide-react';\r\n\r\nimport { cn } from '@/lib/utils';\r\n\r\ninterface CheckboxProps\r\n  extends Omit<React.ComponentPropsWithoutRef<typeof CheckboxPrimitive.Root>, 'onCheckedChange'> {\r\n  className?: string;\r\n  onCheckedChange?: (checked: boolean) => void;\r\n}\r\n\r\nconst Checkbox = React.forwardRef<React.ElementRef<typeof CheckboxPrimitive.Root>, CheckboxProps>(\r\n  ({ className, onCheckedChange, ...props }, ref) => (\r\n    <CheckboxPrimitive.Root\r\n      ref={ref}\r\n      className={cn(\r\n        'peer h-4 w-4 shrink-0 rounded-sm border border-primary ring-offset-background focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50 data-[state=checked]:bg-primary data-[state=checked]:text-primary-foreground',\r\n        className,\r\n      )}\r\n      onCheckedChange={(checked) => {\r\n        if (onCheckedChange) {\r\n          onCheckedChange(checked === true);\r\n        }\r\n      }}\r\n      {...props}\r\n    >\r\n      <CheckboxPrimitive.Indicator className={cn('flex items-center justify-center text-current')}>\r\n        <Check className=\"h-4 w-4\" />\r\n      </CheckboxPrimitive.Indicator>\r\n    </CheckboxPrimitive.Root>\r\n  ),\r\n);\r\nCheckbox.displayName = CheckboxPrimitive.Root.displayName;\r\n\r\nexport { Checkbox };\r\n"]}