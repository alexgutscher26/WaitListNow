{"version":3,"file":"waitlist-widget.js","sourceRoot":"","sources":["waitlist-widget.tsx"],"names":[],"mappings":"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","sourcesContent":["'use client';\r\n\r\nimport { useState, useMemo } from 'react';\r\nimport { Button } from '@/components/ui/button';\r\nimport { Input } from '@/components/ui/input';\r\nimport { Label } from '@/components/ui/label';\r\nimport { useToast } from '@/components/ui/use-toast';\r\nimport { cn } from '@/lib/utils';\r\nimport styles from './waitlist-widget.module.css';\r\n\r\n// Define types for the style props\r\nexport interface WaitlistWidgetStyle {\r\n  buttonText?: string;\r\n  buttonColor?: string;\r\n  buttonTextColor?: string;\r\n  backgroundColor?: string;\r\n  textColor?: string;\r\n  borderRadius?: number;\r\n  fontFamily?: string;\r\n  showLabels?: boolean;\r\n  formLayout?: 'stacked' | 'inline';\r\n}\r\n\r\nexport interface WaitlistWidgetProps {\r\n  waitlistId: string;\r\n  style?: Partial<WaitlistWidgetStyle>;\r\n  apiKey?: string;\r\n  showBranding?: boolean;\r\n  className?: string;\r\n}\r\n\r\nexport function WaitlistWidget({\r\n  waitlistId,\r\n  style = {},\r\n  apiKey,\r\n  showBranding = true,\r\n  className = '',\r\n}: WaitlistWidgetProps) {\r\n  const [email, setEmail] = useState('');\r\n  const [name, setName] = useState('');\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const { toast } = useToast();\r\n\r\n  const handleSubmit = async (e: React.FormEvent) => {\r\n    e.preventDefault();\r\n\r\n    if (!email) {\r\n      toast({\r\n        title: 'Error',\r\n        description: 'Email is required',\r\n        variant: 'destructive',\r\n      });\r\n      return;\r\n    }\r\n\r\n    setIsLoading(true);\r\n\r\n    console.log('Widget API Key:', apiKey);\r\n\r\n    try {\r\n      const response = await fetch(`/api/waitlists/${waitlistId}/subscribers`, {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n          ...(apiKey ? { Authorization: `Bearer ${apiKey}` } : {}),\r\n        },\r\n        body: JSON.stringify({ email, name }),\r\n      });\r\n\r\n      const data = await response.json();\r\n\r\n      if (!response.ok) {\r\n        throw new Error(data.message || 'Failed to join waitlist');\r\n      }\r\n\r\n      toast({\r\n        title: 'Success!',\r\n        description: 'You have been added to the waitlist',\r\n      });\r\n\r\n      setEmail('');\r\n      setName('');\r\n    } catch (error) {\r\n      toast({\r\n        title: 'Error',\r\n        description: error instanceof Error ? error.message : 'Failed to join waitlist',\r\n        variant: 'destructive',\r\n      });\r\n    } finally {\r\n      setIsLoading(false);\r\n    }\r\n  };\r\n\r\n  // Apply default styles\r\n  const {\r\n    buttonText = 'Join Waitlist',\r\n    buttonColor = '',\r\n    buttonTextColor = '',\r\n    backgroundColor = '',\r\n    textColor = '',\r\n    borderRadius = 8,\r\n    fontFamily = '',\r\n    showLabels = true,\r\n    formLayout = 'stacked',\r\n  } = style || {};\r\n\r\n  // Generate CSS variables for dynamic styling\r\n  const cssVariables: React.CSSProperties & {\r\n    '--button-bg'?: string;\r\n    '--button-text'?: string;\r\n    '--text-color'?: string;\r\n    '--bg-color'?: string;\r\n    '--font-family'?: string;\r\n    '--border-radius'?: string;\r\n  } = {\r\n    ...(buttonColor && { '--button-bg': buttonColor }),\r\n    ...(buttonTextColor && { '--button-text': buttonTextColor }),\r\n    ...(textColor && { '--text-color': textColor }),\r\n    ...(backgroundColor && { '--bg-color': backgroundColor }),\r\n    ...(fontFamily && { '--font-family': fontFamily }),\r\n    ...(borderRadius && { '--border-radius': `${borderRadius}px` }),\r\n  };\r\n\r\n  return (\r\n    <div\r\n      className={cn(\r\n        styles['waitlist-widget'],\r\n        formLayout === 'inline'\r\n          ? styles['waitlist-widget--inline']\r\n          : styles['waitlist-widget--stacked'],\r\n        !showLabels && styles['waitlist-widget--no-labels'],\r\n        className,\r\n      )}\r\n      style={cssVariables}\r\n    >\r\n      <form\r\n        onSubmit={handleSubmit}\r\n        className={styles['waitlist-widget__form']}\r\n      >\r\n        <div className={styles['waitlist-widget__field']}>\r\n          {showLabels && (\r\n            <Label\r\n              htmlFor=\"name\"\r\n              className={styles['waitlist-widget__label']}\r\n            >\r\n              Name (Optional)\r\n            </Label>\r\n          )}\r\n          <Input\r\n            id=\"name\"\r\n            type=\"text\"\r\n            placeholder=\"Your name\"\r\n            value={name}\r\n            onChange={(e) => setName(e.target.value)}\r\n            disabled={isLoading}\r\n            className={styles['waitlist-widget__input']}\r\n          />\r\n        </div>\r\n\r\n        <div className={styles['waitlist-widget__field']}>\r\n          {showLabels && (\r\n            <Label\r\n              htmlFor=\"email\"\r\n              className={styles['waitlist-widget__label']}\r\n            >\r\n              Email *\r\n            </Label>\r\n          )}\r\n          <Input\r\n            id=\"email\"\r\n            type=\"email\"\r\n            placeholder=\"your@email.com\"\r\n            value={email}\r\n            onChange={(e) => setEmail(e.target.value)}\r\n            required\r\n            disabled={isLoading}\r\n            className={styles['waitlist-widget__input']}\r\n          />\r\n        </div>\r\n\r\n        <Button\r\n          type=\"submit\"\r\n          disabled={isLoading}\r\n          className={styles['waitlist-widget__button']}\r\n        >\r\n          {isLoading ? 'Joining...' : buttonText}\r\n        </Button>\r\n      </form>\r\n      {showBranding && (\r\n        <div style={{ color: 'red', fontWeight: 'bold', fontSize: 20 }}>Powered by WaitlistNow</div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n"]}