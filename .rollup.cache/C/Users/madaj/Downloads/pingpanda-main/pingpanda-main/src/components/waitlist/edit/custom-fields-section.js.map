{"version":3,"file":"custom-fields-section.js","sourceRoot":"","sources":["custom-fields-section.tsx"],"names":[],"mappings":"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","sourcesContent":["import { useState } from 'react';\r\nimport { Button } from '@/components/ui/button';\r\nimport { Input } from '@/components/ui/input';\r\nimport { Label } from '@/components/ui/label';\r\nimport {\r\n  Select,\r\n  SelectContent,\r\n  SelectItem,\r\n  SelectTrigger,\r\n  SelectValue,\r\n} from '@/components/ui/select';\r\nimport { Card, CardContent, CardHeader, CardTitle, CardDescription } from '@/components/ui/card';\r\nimport { Plus, Trash2, GripVertical, X } from 'lucide-react';\r\nimport { useSortable } from '@dnd-kit/sortable';\r\nimport { CSS } from '@dnd-kit/utilities';\r\n\r\ntype FieldType = 'text' | 'email' | 'number' | 'url' | 'tel' | 'textarea' | 'select';\r\n\r\ninterface CustomField {\r\n  id: string;\r\n  name: string;\r\n  type: FieldType;\r\n  required: boolean;\r\n  placeholder?: string;\r\n  options?: string[];\r\n}\r\n\r\ninterface CustomFieldsSectionProps {\r\n  formData: {\r\n    customFields: CustomField[];\r\n  };\r\n  onAddField: (field: Omit<CustomField, 'id'>) => void;\r\n  onUpdateField: (id: string, updates: Partial<CustomField>) => void;\r\n  onRemoveField: (id: string) => void;\r\n  onReorderFields: (dragIndex: number, dropIndex: number) => void;\r\n}\r\n\r\nfunction SortableItem({\r\n  id,\r\n  children,\r\n  onRemove,\r\n}: {\r\n  id: string;\r\n  children: React.ReactNode;\r\n  onRemove: () => void;\r\n}) {\r\n  const { attributes, listeners, setNodeRef, transform, transition, isDragging } = useSortable({\r\n    id,\r\n  });\r\n\r\n  const style = {\r\n    transform: CSS.Transform.toString(transform),\r\n    transition,\r\n    opacity: isDragging ? 0.5 : 1,\r\n    zIndex: isDragging ? 10 : 1,\r\n  };\r\n\r\n  return (\r\n    <div\r\n      ref={setNoderef}\r\n      style={style}\r\n      className=\"relative group bg-white p-4 rounded-lg border border-gray-200 mb-2 hover:shadow-md transition-shadow\"\r\n    >\r\n      <button\r\n        type=\"button\"\r\n        {...attributes}\r\n        {...listeners}\r\n        className=\"absolute left-2 top-1/2 -translate-y-1/2 p-1 text-gray-400 hover:text-gray-600 cursor-move\"\r\n      >\r\n        <GripVertical className=\"h-4 w-4\" />\r\n      </button>\r\n\r\n      <div className=\"pl-8 pr-10\">{children}</div>\r\n\r\n      <button\r\n        type=\"button\"\r\n        onClick={onRemove}\r\n        className=\"absolute right-2 top-1/2 -translate-y-1/2 p-1 text-gray-400 hover:text-red-500 opacity-0 group-hover:opacity-100 transition-opacity\"\r\n      >\r\n        <X className=\"h-4 w-4\" />\r\n      </button>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport function CustomFieldsSection({\r\n  formData,\r\n  onAddField,\r\n  onUpdateField,\r\n  onRemoveField,\r\n  onReorderFields,\r\n}: CustomFieldsSectionProps) {\r\n  const [newField, setNewField] = useState<Omit<CustomField, 'id'>>({\r\n    name: '',\r\n    type: 'text',\r\n    required: false,\r\n    placeholder: '',\r\n  });\r\n  const [showAddField, setShowAddField] = useState(false);\r\n\r\n  const handleAddField = () => {\r\n    if (!newField.name.trim()) return;\r\n\r\n    onAddField({\r\n      ...newField,\r\n      name: newField.name.trim(),\r\n      placeholder: newField.placeholder?.trim() || '',\r\n    });\r\n\r\n    setNewField({\r\n      name: '',\r\n      type: 'text',\r\n      required: false,\r\n      placeholder: '',\r\n    });\r\n    setShowAddField(false);\r\n  };\r\n\r\n  const handleUpdateField = (id: string, field: string, value: any) => {\r\n    onUpdateField(id, { [field]: value });\r\n  };\r\n\r\n  return (\r\n    <Card>\r\n      <CardHeader>\r\n        <CardTitle>Custom Fields</CardTitle>\r\n        <CardDescription>\r\n          Add custom fields to collect additional information from users.\r\n        </CardDescription>\r\n      </CardHeader>\r\n      <CardContent className=\"space-y-4\">\r\n        <div className=\"space-y-4\">\r\n          {formData.customFields.length > 0 ? (\r\n            <div className=\"space-y-2\">\r\n              {formData.customFields.map((field, index) => (\r\n                <SortableItem\r\n                  key={field.id}\r\n                  id={field.id}\r\n                  onRemove={() => onRemoveField(field.id)}\r\n                >\r\n                  <div className=\"grid grid-cols-12 gap-4 items-end\">\r\n                    <div className=\"col-span-5\">\r\n                      <Label htmlFor={`field-name-${field.id}`}>Field Name</Label>\r\n                      <Input\r\n                        id={`field-name-${field.id}`}\r\n                        value={field.name}\r\n                        onChange={(e) => handleUpdateField(field.id, 'name', e.target.value)}\r\n                        placeholder=\"e.g., Company Name\"\r\n                      />\r\n                    </div>\r\n\r\n                    <div className=\"col-span-3\">\r\n                      <Label htmlFor={`field-type-${field.id}`}>Type</Label>\r\n                      <Select\r\n                        value={field.type}\r\n                        onValueChange={(value) =>\r\n                          handleUpdateField(field.id, 'type', value as FieldType)\r\n                        }\r\n                      >\r\n                        <SelectTrigger>\r\n                          <SelectValue placeholder=\"Select type\" />\r\n                        </SelectTrigger>\r\n                        <SelectContent>\r\n                          <SelectItem value=\"text\">Text</SelectItem>\r\n                          <SelectItem value=\"email\">Email</SelectItem>\r\n                          <SelectItem value=\"number\">Number</SelectItem>\r\n                          <SelectItem value=\"url\">URL</SelectItem>\r\n                          <SelectItem value=\"tel\">Phone</SelectItem>\r\n                          <SelectItem value=\"textarea\">Text Area</SelectItem>\r\n                          <SelectItem value=\"select\">Select</SelectItem>\r\n                        </SelectContent>\r\n                      </Select>\r\n                    </div>\r\n\r\n                    <div className=\"col-span-3\">\r\n                      <Label htmlFor={`field-placeholder-${field.id}`}>\r\n                        Placeholder (optional)\r\n                      </Label>\r\n                      <Input\r\n                        id={`field-placeholder-${field.id}`}\r\n                        value={field.placeholder || ''}\r\n                        onChange={(e) => handleUpdateField(field.id, 'placeholder', e.target.value)}\r\n                        placeholder=\"e.g., Enter your company\"\r\n                      />\r\n                    </div>\r\n\r\n                    <div className=\"col-span-1 flex items-end h-10\">\r\n                      <div className=\"flex items-center space-x-2\">\r\n                        <input\r\n                          id={`field-required-${field.id}`}\r\n                          type=\"checkbox\"\r\n                          checked={field.required}\r\n                          onChange={(e) =>\r\n                            handleUpdateField(field.id, 'required', e.target.checked)\r\n                          }\r\n                          className=\"h-4 w-4 rounded border-gray-300 text-indigo-600 focus:ring-indigo-500\"\r\n                        />\r\n                        <Label\r\n                          htmlFor={`field-required-${field.id}`}\r\n                          className=\"text-sm\"\r\n                        >\r\n                          Required\r\n                        </Label>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n\r\n                  {field.type === 'select' && (\r\n                    <div className=\"mt-3\">\r\n                      <Label>Options (one per line)</Label>\r\n                      <textarea\r\n                        value={field.options?.join('\\n') || ''}\r\n                        onChange={(e) => {\r\n                          const options = e.target.value.split('\\n').filter(Boolean);\r\n                          handleUpdateField(field.id, 'options', options);\r\n                        }}\r\n                        className=\"mt-1 block w-full rounded-md border-gray-300 shadow-sm focus:border-indigo-500 focus:ring-indigo-500 sm:text-sm\"\r\n                        rows={3}\r\n                        placeholder=\"Option 1\\nOption 2\\nOption 3\"\r\n                      />\r\n                    </div>\r\n                  )}\r\n                </SortableItem>\r\n              ))}\r\n            </div>\r\n          ) : (\r\n            <div className=\"text-center py-8 border-2 border-dashed rounded-lg\">\r\n              <p className=\"text-gray-500\">No custom fields added yet.</p>\r\n            </div>\r\n          )}\r\n\r\n          {showAddField ? (\r\n            <div className=\"mt-6 p-4 border border-dashed rounded-lg\">\r\n              <h3 className=\"text-sm font-medium text-gray-900 mb-4\">Add New Field</h3>\r\n              <div className=\"grid grid-cols-12 gap-4\">\r\n                <div className=\"col-span-5\">\r\n                  <Label htmlFor=\"new-field-name\">Field Name *</Label>\r\n                  <Input\r\n                    id=\"new-field-name\"\r\n                    value={newField.name}\r\n                    onChange={(e) => setNewField({ ...newField, name: e.target.value })}\r\n                    placeholder=\"e.g., Company Name\"\r\n                  />\r\n                </div>\r\n\r\n                <div className=\"col-span-3\">\r\n                  <Label htmlFor=\"new-field-type\">Type</Label>\r\n                  <Select\r\n                    value={newField.type}\r\n                    onValueChange={(value) =>\r\n                      setNewField({ ...newField, type: value as FieldType })\r\n                    }\r\n                  >\r\n                    <SelectTrigger>\r\n                      <SelectValue placeholder=\"Select type\" />\r\n                    </SelectTrigger>\r\n                    <SelectContent>\r\n                      <SelectItem value=\"text\">Text</SelectItem>\r\n                      <SelectItem value=\"email\">Email</SelectItem>\r\n                      <SelectItem value=\"number\">Number</SelectItem>\r\n                      <SelectItem value=\"url\">URL</SelectItem>\r\n                      <SelectItem value=\"tel\">Phone</SelectItem>\r\n                      <SelectItem value=\"textarea\">Text Area</SelectItem>\r\n                      <SelectItem value=\"select\">Select</SelectItem>\r\n                    </SelectContent>\r\n                  </Select>\r\n                </div>\r\n\r\n                <div className=\"col-span-3\">\r\n                  <Label htmlFor=\"new-field-placeholder\">Placeholder (optional)</Label>\r\n                  <Input\r\n                    id=\"new-field-placeholder\"\r\n                    value={newField.placeholder || ''}\r\n                    onChange={(e) => setNewField({ ...newField, placeholder: e.target.value })}\r\n                    placeholder=\"e.g., Enter your company\"\r\n                  />\r\n                </div>\r\n\r\n                <div className=\"col-span-1 flex items-end\">\r\n                  <div className=\"flex items-center space-x-2\">\r\n                    <input\r\n                      id=\"new-field-required\"\r\n                      type=\"checkbox\"\r\n                      checked={newField.required}\r\n                      onChange={(e) => setNewField({ ...newField, required: e.target.checked })}\r\n                      className=\"h-4 w-4 rounded border-gray-300 text-indigo-600 focus:ring-indigo-500\"\r\n                    />\r\n                    <Label\r\n                      htmlFor=\"new-field-required\"\r\n                      className=\"text-sm\"\r\n                    >\r\n                      Required\r\n                    </Label>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n\r\n              {newField.type === 'select' && (\r\n                <div className=\"mt-3\">\r\n                  <Label>Options (one per line)</Label>\r\n                  <textarea\r\n                    value={newField.options?.join('\\n') || ''}\r\n                    onChange={(e) => {\r\n                      const options = e.target.value.split('\\n').filter(Boolean);\r\n                      setNewField({ ...newField, options });\r\n                    }}\r\n                    className=\"mt-1 block w-full rounded-md border-gray-300 shadow-sm focus:border-indigo-500 focus:ring-indigo-500 sm:text-sm\"\r\n                    rows={3}\r\n                    placeholder=\"Option 1\\nOption 2\\nOption 3\"\r\n                  />\r\n                </div>\r\n              )}\r\n\r\n              <div className=\"mt-4 flex justify-end space-x-2\">\r\n                <Button\r\n                  type=\"button\"\r\n                  variant=\"outline\"\r\n                  onClick={() => setShowAddField(false)}\r\n                >\r\n                  Cancel\r\n                </Button>\r\n                <Button\r\n                  type=\"button\"\r\n                  onClick={handleAddField}\r\n                  disabled={!newField.name.trim()}\r\n                >\r\n                  Add Field\r\n                </Button>\r\n              </div>\r\n            </div>\r\n          ) : (\r\n            <div className=\"mt-4\">\r\n              <Button\r\n                type=\"button\"\r\n                variant=\"outline\"\r\n                onClick={() => setShowAddField(true)}\r\n                className=\"gap-2\"\r\n              >\r\n                <Plus className=\"h-4 w-4\" />\r\n                Add Custom Field\r\n              </Button>\r\n            </div>\r\n          )}\r\n        </div>\r\n      </CardContent>\r\n    </Card>\r\n  );\r\n}\r\n"]}